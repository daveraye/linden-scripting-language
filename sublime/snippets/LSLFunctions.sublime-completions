{
    "scope": "meta.function.body.lsl, meta.event.body.lsl",
    "completions":
    [
        { "trigger": "llAbs\t(int) func", "contents": "llAbs(${1:integer val})" },
        { "trigger": "llAcos\t(float) func", "contents": "llAcos(${1:float val})" },
        { "trigger": "llAddToLandBanList\t(void) func", "contents": "llAddToLandBanList(${1:key avatar}, ${2:float hours});" },
        { "trigger": "llAddToLandPassList\t(void) func", "contents": "llAddToLandPassList(${1:key avatar}, ${2:float hours});" },
        { "trigger": "llAdjustSoundVolume\t(void) func", "contents": "llAdjustSoundVolume(${1:float volume});" },
        { "trigger": "llAgentInExperience\t(integer) func", "contents": "llAgentInExperience(${1:key agent})" },
        { "trigger": "llAllowInventoryDrop\t(void) func", "contents": "llAllowInventoryDrop(${1:integer add});" },
        { "trigger": "llAngleBetween\t(float) func", "contents": "llAngleBetween(${1:rotation a}, ${2:rotation b})" },
        { "trigger": "llApplyImpulse\t(void) func", "contents": "llApplyImpulse(${1:vector force}, ${2:integer local});" },
        { "trigger": "llApplyRotationalImpulse\t(void) func", "contents": "llApplyRotationalImpulse(${1:vector force}, ${2:integer local});" },
        { "trigger": "llAsin\t(float) func", "contents": "llAsin(${1:float val})" },
        { "trigger": "llAtan2\t(float) func", "contents": "llAtan2(${1:float y}, ${2:float x})" },
        { "trigger": "llAttachToAvatar\t(void) func", "contents": "llAttachToAvatar(${1:integer attach_point});" },
        { "trigger": "llAttachToAvatarTemp\t(void) func", "contents": "llAttachToAvatarTemp(${1:integer attach_point});" },
        { "trigger": "llAvatarOnLinkSitTarget\t(key) func", "contents": "llAvatarOnLinkSitTarget(${1:integer link})" },
        { "trigger": "llAvatarOnSitTarget\t(key) func", "contents": "llAvatarOnSitTarget()" },
        { "trigger": "llAxes2Rot\t(rot) func", "contents": "llAxes2Rot(${1:vector fwd}, ${2:vector left}, ${3:vector up})" },
        { "trigger": "llAxisAngle2Rot\t(rot) func", "contents": "llAxisAngle2Rot(${1:vector axis}, ${2:float angle})" },
        { "trigger": "llBase64ToInteger\t(int) func", "contents": "llBase64ToInteger(${1:string str})" },
        { "trigger": "llBase64ToString\t(str) func", "contents": "llBase64ToString(${1:string str})" },
        { "trigger": "llBreakAllLinks\t(void) func", "contents": "llBreakAllLinks();" },
        { "trigger": "llBreakLink\t(void) func", "contents": "llBreakLink(${1:integer linknum});" },
        { "trigger": "llCSV2List\t(list) func", "contents": "llCSV2List(${1:string src})" },
        { "trigger": "llCastRay\t(list) func", "contents": "llCastRay(${1:vector start}, ${2:vector end}, ${3:list params})" },
        { "trigger": "llCeil\t(int) func", "contents": "llCeil(${1:float val})" },
        { "trigger": "llClearCameraParams\t(void) func", "contents": "llClearCameraParams();" },
        { "trigger": "llClearLinkMedia\t(int) func", "contents": "llClearLinkMedia(${1:integer link}, ${2:integer face})" },
        { "trigger": "llClearPrimMedia\t(int) func", "contents": "llClearPrimMedia(${1:integer face})" },
        { "trigger": "llCloseRemoteDataChannel\t(void) func", "contents": "llCloseRemoteDataChannel(${1:key channel});" },
        { "trigger": "llCollisionFilter\t(void) func", "contents": "llCollisionFilter(${1:string name}, ${2:key id}, ${3:integer accept});" },
        { "trigger": "llCollisionSound\t(void) func", "contents": "llCollisionSound(${1:string impact_sound}, ${2:float impact_volume});" },
        { "trigger": "llCos\t(float) func", "contents": "llCos(${1:float theta})" },
        { "trigger": "llCreateCharacter\t(void) func", "contents": "llCreateCharacter(${1:list options});" },
        { "trigger": "llCreateKeyValue\t(key) func", "contents": "llCreateKeyValue(${1:string k}, ${2:string v})" },
        { "trigger": "llCreateLink\t(void) func", "contents": "llCreateLink(${1:key target}, ${2:integer parent});" },
        { "trigger": "llDataSizeKeyValue\t(key) func", "contents": "llDataSizeKeyValue()" },
        { "trigger": "llDeleteCharacter\t(void) func", "contents": "llDeleteCharacter();" },
        { "trigger": "llDeleteKeyValue\t(key) func", "contents": "llDeleteKeyValue(${1:string k})" },
        { "trigger": "llDeleteSubList\t(list) func", "contents": "llDeleteSubList(${1:list src}, ${2:integer start}, ${3:integer end})" },
        { "trigger": "llDeleteSubString\t(str) func", "contents": "llDeleteSubString(${1:string src}, ${2:integer start}, ${3:integer end})" },
        { "trigger": "llDetachFromAvatar\t(void) func", "contents": "llDetachFromAvatar();" },
        { "trigger": "llDetectedGrab\t(vec) func", "contents": "llDetectedGrab(${1:integer number})" },
        { "trigger": "llDetectedGroup\t(int) func", "contents": "llDetectedGroup(${1:integer number})" },
        { "trigger": "llDetectedKey\t(key) func", "contents": "llDetectedKey(${1:integer number})" },
        { "trigger": "llDetectedLinkNumber\t(int) func", "contents": "llDetectedLinkNumber(${1:integer number})" },
        { "trigger": "llDetectedName\t(str) func", "contents": "llDetectedName(${1:integer number})" },
        { "trigger": "llDetectedOwner\t(key) func", "contents": "llDetectedOwner(${1:integer number})" },
        { "trigger": "llDetectedPos\t(vec) func", "contents": "llDetectedPos(${1:integer number})" },
        { "trigger": "llDetectedRot\t(rot) func", "contents": "llDetectedRot(${1:integer number})" },
        { "trigger": "llDetectedTouchBinormal\t(vec) func", "contents": "llDetectedTouchBinormal(${1:integer index})" },
        { "trigger": "llDetectedTouchFace\t(int) func", "contents": "llDetectedTouchFace(${1:integer index})" },
        { "trigger": "llDetectedTouchNormal\t(vec) func", "contents": "llDetectedTouchNormal(${1:integer index})" },
        { "trigger": "llDetectedTouchPos\t(vec) func", "contents": "llDetectedTouchPos(${1:integer index})" },
        { "trigger": "llDetectedTouchST\t(vec) func", "contents": "llDetectedTouchST(${1:integer index})" },
        { "trigger": "llDetectedTouchUV\t(vec) func", "contents": "llDetectedTouchUV(${1:integer index})" },
        { "trigger": "llDetectedType\t(int) func", "contents": "llDetectedType(${1:integer number})" },
        { "trigger": "llDetectedVel\t(vec) func", "contents": "llDetectedVel(${1:integer number})" },
        { "trigger": "llDialog\t(void) func", "contents": "llDialog(${1:key avatar}, ${2:string message}, ${3:list buttons}, ${4:integer chat_channel});" },
        { "trigger": "llDie\t(void) func", "contents": "llDie();" },
        { "trigger": "llDumpList2String\t(str) func", "contents": "llDumpList2String(${1:list src}, ${2:string separator})" },
        { "trigger": "llEdgeOfWorld\t(int) func", "contents": "llEdgeOfWorld(${1:vector pos}, ${2:vector dir})" },
        { "trigger": "llEjectFromLand\t(void) func", "contents": "llEjectFromLand(${1:key avatar});" },
        { "trigger": "llEmail\t(void) func", "contents": "llEmail(${1:string address}, ${2:string subject}, ${3:string message});" },
        { "trigger": "llEscapeURL\t(str) func", "contents": "llEscapeURL(${1:string url})" },
        { "trigger": "llEuler2Rot\t(rot) func", "contents": "llEuler2Rot(${1:vector v})" },
        { "trigger": "llEvade\t(void) func", "contents": "llEvade(${1:key target}, ${2:list options});" },
        { "trigger": "llExecCharacterCmd\t(void) func", "contents": "llExecCharacterCmd(${1:integer cmd}, ${2:list options});" },
        { "trigger": "llFabs\t(float) func", "contents": "llFabs(${1:float val})" },
        { "trigger": "llFleeFrom\t(void) func", "contents": "llFleeFrom(${1:vector source}, ${2:float radius}, ${3:list options});" },
        { "trigger": "llFloor\t(int) func", "contents": "llFloor(${1:float val})" },
        { "trigger": "llForceMouselook\t(void) func", "contents": "llForceMouselook(${1:integer mouselook});" },
        { "trigger": "llFrand\t(float) func", "contents": "llFrand(${1:float mag})" },
        { "trigger": "llGenerateKey\t(key) func", "contents": "llGenerateKey()" },
        { "trigger": "llGetAccel\t(vec) func", "contents": "llGetAccel()" },
        { "trigger": "llGetAgentInfo\t(int) func", "contents": "llGetAgentInfo(${1:key id})" },
        { "trigger": "llGetAgentLanguage\t(str) func", "contents": "llGetAgentLanguage(${1:key avatar})" },
        { "trigger": "llGetAgentList\t(list) func", "contents": "llGetAgentList(${1:integer scope}, ${2:list options})" },
        { "trigger": "llGetAgentSize\t(vec) func", "contents": "llGetAgentSize(${1:key id})" },
        { "trigger": "llGetAlpha\t(float) func", "contents": "llGetAlpha(${1:integer face})" },
        { "trigger": "llGetAndResetTime\t(float) func", "contents": "llGetAndResetTime()" },
        { "trigger": "llGetAnimation\t(str) func", "contents": "llGetAnimation(${1:key id})" },
        { "trigger": "llGetAnimationList\t(list) func", "contents": "llGetAnimationList(${1:key id})" },
        { "trigger": "llGetAnimationOverride\t(str) func", "contents": "llGetAnimationOverride(${1:string anim_state})" },
        { "trigger": "llGetAttached\t(int) func", "contents": "llGetAttached()" },
        { "trigger": "llGetBoundingBox\t(list) func", "contents": "llGetBoundingBox(${1:key object})" },
        { "trigger": "llGetCameraPos\t(vec) func", "contents": "llGetCameraPos()" },
        { "trigger": "llGetCameraRot\t(rot) func", "contents": "llGetCameraRot()" },
        { "trigger": "llGetCenterOfMass\t(vec) func", "contents": "llGetCenterOfMass()" },
        { "trigger": "llGetClosestNavPoint\t(list) func", "contents": "llGetClosestNavPoint(${1:vector point}, ${2:list options})" },
        { "trigger": "llGetColor\t(vec) func", "contents": "llGetColor(${1:integer face})" },
        { "trigger": "llGetCreator\t(key) func", "contents": "llGetCreator()" },
        { "trigger": "llGetDate\t(str) func", "contents": "llGetDate()" },
        { "trigger": "llGetDisplayName\t(str) func", "contents": "llGetDisplayName(${1:key id})" },
        { "trigger": "llGetEnergy\t(float) func", "contents": "llGetEnergy()" },
        { "trigger": "llGetEnv\t(str) func", "contents": "llGetEnv(${1:string name})" },
        { "trigger": "llGetExperienceDetails\t(list) func", "contents": "llGetExperienceDetails(${1:key experience_id})" },
        { "trigger": "llGetExperienceErrorMessage\t(string) func", "contents": "llGetExperienceErrorMessage(${1:integer error})" },
        { "trigger": "llGetForce\t(vec) func", "contents": "llGetForce()" },
        { "trigger": "llGetFreeMemory\t(int) func", "contents": "llGetFreeMemory()" },
        { "trigger": "llGetFreeURLs\t(int) func", "contents": "llGetFreeURLs()" },
        { "trigger": "llGetGMTclock\t(float) func", "contents": "llGetGMTclock()" },
        { "trigger": "llGetGeometricCenter\t(vec) func", "contents": "llGetGeometricCenter()" },
        { "trigger": "llGetHTTPHeader\t(str) func", "contents": "llGetHTTPHeader(${1:key request_id}, ${2:string header})" },
        { "trigger": "llGetInventoryCreator\t(key) func", "contents": "llGetInventoryCreator(${1:string item})" },
        { "trigger": "llGetInventoryKey\t(key) func", "contents": "llGetInventoryKey(${1:string name})" },
        { "trigger": "llGetInventoryName\t(str) func", "contents": "llGetInventoryName(${1:integer type}, ${2:integer number})" },
        { "trigger": "llGetInventoryNumber\t(int) func", "contents": "llGetInventoryNumber(${1:integer type})" },
        { "trigger": "llGetInventoryPermMask\t(int) func", "contents": "llGetInventoryPermMask(${1:string item}, ${2:integer mask})" },
        { "trigger": "llGetInventoryType\t(int) func", "contents": "llGetInventoryType(${1:string name})" },
        { "trigger": "llGetKey\t(key) func", "contents": "llGetKey()" },
        { "trigger": "llGetLandOwnerAt\t(key) func", "contents": "llGetLandOwnerAt(${1:vector pos})" },
        { "trigger": "llGetLinkKey\t(key) func", "contents": "llGetLinkKey(${1:integer linknumber})" },
        { "trigger": "llGetLinkMedia\t(list) func", "contents": "llGetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params})" },
        { "trigger": "llGetLinkName\t(str) func", "contents": "llGetLinkName(${1:integer linknumber})" },
        { "trigger": "llGetLinkNumber\t(int) func", "contents": "llGetLinkNumber()" },
        { "trigger": "llGetLinkNumberOfSides\t(int) func", "contents": "llGetLinkNumberOfSides(${1:integer link})" },
        { "trigger": "llGetLinkPrimitiveParams\t(list) func", "contents": "llGetLinkPrimitiveParams(${1:integer linknumber}, ${2:list rules})" },
        { "trigger": "llGetListEntryType\t(int) func", "contents": "llGetListEntryType(${1:list src}, ${2:integer index})" },
        { "trigger": "llGetListLength\t(int) func", "contents": "llGetListLength(${1:list src})" },
        { "trigger": "llGetLocalPos\t(vec) func", "contents": "llGetLocalPos()" },
        { "trigger": "llGetLocalRot\t(rot) func", "contents": "llGetLocalRot()" },
        { "trigger": "llGetMass\t(float) func", "contents": "llGetMass()" },
        { "trigger": "llGetMassMKS\t(float) func", "contents": "llGetMassMKS()" },
        { "trigger": "llGetMaxScaleFactor\t(float) func", "contents": "llGetMaxScaleFactor()" },
        { "trigger": "llGetMemoryLimit\t(int) func", "contents": "llGetMemoryLimit()" },
        { "trigger": "llGetMinScaleFactor\t(float) func", "contents": "llGetMinScaleFactor()" },
        { "trigger": "llGetNextEmail\t(void) func", "contents": "llGetNextEmail(${1:string address}, ${2:string subject});" },
        { "trigger": "llGetNotecardLine\t(key) func", "contents": "llGetNotecardLine(${1:string name}, ${2:integer line})" },
        { "trigger": "llGetNumberOfNotecardLines\t(key) func", "contents": "llGetNumberOfNotecardLines(${1:string name})" },
        { "trigger": "llGetNumberOfPrims\t(int) func", "contents": "llGetNumberOfPrims()" },
        { "trigger": "llGetNumberOfSides\t(int) func", "contents": "llGetNumberOfSides()" },
        { "trigger": "llGetObjectDesc\t(str) func", "contents": "llGetObjectDesc()" },
        { "trigger": "llGetObjectDetails\t(list) func", "contents": "llGetObjectDetails(${1:key id}, ${2:list params})" },
        { "trigger": "llGetObjectMass\t(float) func", "contents": "llGetObjectMass(${1:key id})" },
        { "trigger": "llGetObjectName\t(str) func", "contents": "llGetObjectName()" },
        { "trigger": "llGetObjectPermMask\t(int) func", "contents": "llGetObjectPermMask(${1:integer mask})" },
        { "trigger": "llGetObjectPrimCount\t(int) func", "contents": "llGetObjectPrimCount(${1:key object_id})" },
        { "trigger": "llGetOmega\t(vec) func", "contents": "llGetOmega()" },
        { "trigger": "llGetOwner\t(key) func", "contents": "llGetOwner()" },
        { "trigger": "llGetOwnerKey\t(key) func", "contents": "llGetOwnerKey(${1:key id})" },
        { "trigger": "llGetParcelDetails\t(list) func", "contents": "llGetParcelDetails(${1:vector pos}, ${2:list params})" },
        { "trigger": "llGetParcelFlags\t(int) func", "contents": "llGetParcelFlags(${1:vector pos})" },
        { "trigger": "llGetParcelMaxPrims\t(int) func", "contents": "llGetParcelMaxPrims(${1:vector pos}, ${2:integer sim_wide})" },
        { "trigger": "llGetParcelMusicURL\t(str) func", "contents": "llGetParcelMusicURL()" },
        { "trigger": "llGetParcelPrimCount\t(int) func", "contents": "llGetParcelPrimCount(${1:vector pos}, ${2:integer category}, ${3:integer sim_wide})" },
        { "trigger": "llGetParcelPrimOwners\t(list) func", "contents": "llGetParcelPrimOwners(${1:vector pos})" },
        { "trigger": "llGetPermissions\t(int) func", "contents": "llGetPermissions()" },
        { "trigger": "llGetPermissionsKey\t(key) func", "contents": "llGetPermissionsKey()" },
        { "trigger": "llGetPhysicsMaterial\t(list) func", "contents": "llGetPhysicsMaterial()" },
        { "trigger": "llGetPos\t(vec) func", "contents": "llGetPos()" },
        { "trigger": "llGetPrimMediaParams\t(list) func", "contents": "llGetPrimMediaParams(${1:integer face}, ${2:list params})" },
        { "trigger": "llGetPrimitiveParams\t(list) func", "contents": "llGetPrimitiveParams(${1:list params})" },
        { "trigger": "llGetRegionAgentCount\t(int) func", "contents": "llGetRegionAgentCount()" },
        { "trigger": "llGetRegionCorner\t(vec) func", "contents": "llGetRegionCorner()" },
        { "trigger": "llGetRegionFPS\t(float) func", "contents": "llGetRegionFPS()" },
        { "trigger": "llGetRegionFlags\t(int) func", "contents": "llGetRegionFlags()" },
        { "trigger": "llGetRegionName\t(str) func", "contents": "llGetRegionName()" },
        { "trigger": "llGetRegionTimeDilation\t(float) func", "contents": "llGetRegionTimeDilation()" },
        { "trigger": "llGetRootPosition\t(vec) func", "contents": "llGetRootPosition()" },
        { "trigger": "llGetRootRotation\t(rot) func", "contents": "llGetRootRotation()" },
        { "trigger": "llGetRot\t(rot) func", "contents": "llGetRot()" },
        { "trigger": "llGetSPMaxMemory\t(int) func", "contents": "llGetSPMaxMemory()" },
        { "trigger": "llGetScale\t(vec) func", "contents": "llGetScale()" },
        { "trigger": "llGetScriptName\t(str) func", "contents": "llGetScriptName()" },
        { "trigger": "llGetScriptState\t(int) func", "contents": "llGetScriptState(${1:string name})" },
        { "trigger": "llGetSimStats\t(float) func", "contents": "llGetSimStats(${1:integer stat_type})" },
        { "trigger": "llGetSimulatorHostname\t(str) func", "contents": "llGetSimulatorHostname()" },
        { "trigger": "llGetStartParameter\t(int) func", "contents": "llGetStartParameter()" },
        { "trigger": "llGetStaticPath\t(list) func", "contents": "llGetStaticPath(${1:vector start}, ${2:vector end}, ${3:float radius}, ${4:list params})" },
        { "trigger": "llGetStatus\t(int) func", "contents": "llGetStatus(${1:integer status})" },
        { "trigger": "llGetSubString\t(str) func", "contents": "llGetSubString(${1:string src}, ${2:integer start}, ${3:integer end})" },
        { "trigger": "llGetSunDirection\t(vec) func", "contents": "llGetSunDirection()" },
        { "trigger": "llGetTexture\t(str) func", "contents": "llGetTexture(${1:integer face})" },
        { "trigger": "llGetTextureOffset\t(vec) func", "contents": "llGetTextureOffset(${1:integer face})" },
        { "trigger": "llGetTextureRot\t(float) func", "contents": "llGetTextureRot(${1:integer side})" },
        { "trigger": "llGetTextureScale\t(vec) func", "contents": "llGetTextureScale(${1:integer side})" },
        { "trigger": "llGetTime\t(float) func", "contents": "llGetTime()" },
        { "trigger": "llGetTimeOfDay\t(float) func", "contents": "llGetTimeOfDay()" },
        { "trigger": "llGetTimestamp\t(str) func", "contents": "llGetTimestamp()" },
        { "trigger": "llGetTorque\t(vec) func", "contents": "llGetTorque()" },
        { "trigger": "llGetUnixTime\t(int) func", "contents": "llGetUnixTime()" },
        { "trigger": "llGetUsedMemory\t(int) func", "contents": "llGetUsedMemory()" },
        { "trigger": "llGetUsername\t(str) func", "contents": "llGetUsername(${1:key id})" },
        { "trigger": "llGetVel\t(vec) func", "contents": "llGetVel()" },
        { "trigger": "llGetWallclock\t(float) func", "contents": "llGetWallclock()" },
        { "trigger": "llGiveInventory\t(void) func", "contents": "llGiveInventory(${1:key destination}, ${2:string inventory});" },
        { "trigger": "llGiveInventoryList\t(void) func", "contents": "llGiveInventoryList(${1:key target}, ${2:string folder}, ${3:list inventory});" },
        { "trigger": "llGiveMoney\t(int) func", "contents": "llGiveMoney(${1:key destination}, ${2:integer amount})" },
        { "trigger": "llGround\t(float) func", "contents": "llGround(${1:vector offset})" },
        { "trigger": "llGroundContour\t(vec) func", "contents": "llGroundContour(${1:vector offset})" },
        { "trigger": "llGroundNormal\t(vec) func", "contents": "llGroundNormal(${1:vector offset})" },
        { "trigger": "llGroundRepel\t(void) func", "contents": "llGroundRepel(${1:float height}, ${2:integer water}, ${3:float tau});" },
        { "trigger": "llGroundSlope\t(vec) func", "contents": "llGroundSlope(${1:vector offset})" },
        { "trigger": "llHTTPRequest\t(key) func", "contents": "llHTTPRequest(${1:string url}, ${2:list parameters}, ${3:string body})" },
        { "trigger": "llHTTPResponse\t(void) func", "contents": "llHTTPResponse(${1:key request_id}, ${2:integer status}, ${3:string body});" },
        { "trigger": "llInsertString\t(str) func", "contents": "llInsertString(${1:string dst}, ${2:integer position}, ${3:string src})" },
        { "trigger": "llInstantMessage\t(void) func", "contents": "llInstantMessage(${1:key user}, ${2:string message});" },
        { "trigger": "llIntegerToBase64\t(str) func", "contents": "llIntegerToBase64(${1:integer number})" },
        { "trigger": "llJson2List\t(list) func", "contents": "llJson2List(${1:string json})" },
        { "trigger": "llJsonGetValue\t(str) func", "contents": "llJsonGetValue(${1:string json}, ${2:list specifiers})" },
        { "trigger": "llJsonSetValue\t(str) func", "contents": "llJsonSetValue(${1:string json}, ${2:list specifiers}, ${3:string value})" },
        { "trigger": "llJsonValueType\t(str) func", "contents": "llJsonValueType(${1:string json}, ${2:list specifiers})" },
        { "trigger": "llKey2Name\t(str) func", "contents": "llKey2Name(${1:key id})" },
        { "trigger": "llKeyCountKeyValue\t(key) func", "contents": "llKeyCountKeyValue()" },
        { "trigger": "llKeysKeyValue\t(key) func", "contents": "llKeysKeyValue(${1:integer first}, ${2:integer count})" },
        { "trigger": "llLinkParticleSystem\t(void) func", "contents": "llLinkParticleSystem(${1:integer linknumber}, ${2:list rules});" },
        { "trigger": "llLinkSitTarget\t(void) func", "contents": "llLinkSitTarget(${1:integer link}, ${2:vector offset}, ${3:rotation rot});" },
        { "trigger": "llList2CSV\t(str) func", "contents": "llList2CSV(${1:list src})" },
        { "trigger": "llList2Float\t(float) func", "contents": "llList2Float(${1:list src}, ${2:integer index})" },
        { "trigger": "llList2Integer\t(int) func", "contents": "llList2Integer(${1:list src}, ${2:integer index})" },
        { "trigger": "llList2Json\t(str) func", "contents": "llList2Json(${1:string type}, ${2:list values})" },
        { "trigger": "llList2Key\t(key) func", "contents": "llList2Key(${1:list src}, ${2:integer index})" },
        { "trigger": "llList2List\t(list) func", "contents": "llList2List(${1:list src}, ${2:integer start}, ${3:integer end})" },
        { "trigger": "llList2ListStrided\t(list) func", "contents": "llList2ListStrided(${1:list src}, ${2:integer start}, ${3:integer end}, ${4:integer stride})" },
        { "trigger": "llList2Rot\t(rot) func", "contents": "llList2Rot(${1:list src}, ${2:integer index})" },
        { "trigger": "llList2String\t(str) func", "contents": "llList2String(${1:list src}, ${2:integer index})" },
        { "trigger": "llList2Vector\t(vec) func", "contents": "llList2Vector(${1:list src}, ${2:integer index})" },
        { "trigger": "llListFindList\t(int) func", "contents": "llListFindList(${1:list src}, ${2:list test})" },
        { "trigger": "llListInsertList\t(list) func", "contents": "llListInsertList(${1:list dest}, ${2:list src}, ${3:integer start})" },
        { "trigger": "llListRandomize\t(list) func", "contents": "llListRandomize(${1:list src}, ${2:integer stride})" },
        { "trigger": "llListReplaceList\t(list) func", "contents": "llListReplaceList(${1:list dest}, ${2:list src}, ${3:integer start}, ${4:integer end})" },
        { "trigger": "llListSort\t(list) func", "contents": "llListSort(${1:list src}, ${2:integer stride}, ${3:integer ascending})" },
        { "trigger": "llListStatistics\t(float) func", "contents": "llListStatistics(${1:integer operation}, ${2:list src})" },
        { "trigger": "llListen\t(int) func", "contents": "llListen(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string msg})" },
        { "trigger": "llListenControl\t(void) func", "contents": "llListenControl(${1:integer number}, ${2:integer active});" },
        { "trigger": "llListenRemove\t(void) func", "contents": "llListenRemove(${1:integer number});" },
        { "trigger": "llLoadURL\t(void) func", "contents": "llLoadURL(${1:key avatar}, ${2:string message}, ${3:string url});" },
        { "trigger": "llLog\t(float) func", "contents": "llLog(${1:float val})" },
        { "trigger": "llLog10\t(float) func", "contents": "llLog10(${1:float val})" },
        { "trigger": "llLookAt\t(void) func", "contents": "llLookAt(${1:vector target}, ${2:float strength}, ${3:float damping});" },
        { "trigger": "llLoopSound\t(void) func", "contents": "llLoopSound(${1:string sound}, ${2:float volume});" },
        { "trigger": "llLoopSoundMaster\t(void) func", "contents": "llLoopSoundMaster(${1:string sound}, ${2:float volume});" },
        { "trigger": "llLoopSoundSlave\t(void) func", "contents": "llLoopSoundSlave(${1:string sound}, ${2:float volume});" },
        { "trigger": "llMD5String\t(str) func", "contents": "llMD5String(${1:string src}, ${2:integer nonce})" },
        { "trigger": "llManageEstateAccess\t(int) func", "contents": "llManageEstateAccess(${1:integer action}, ${2:key id})" },
        { "trigger": "llMapDestination\t(void) func", "contents": "llMapDestination(${1:string simname}, ${2:vector pos}, ${3:vector look_at});" },
        { "trigger": "llMessageLinked\t(void) func", "contents": "llMessageLinked(${1:integer linknum}, ${2:integer num}, ${3:string str}, ${4:key id});" },
        { "trigger": "llMinEventDelay\t(void) func", "contents": "llMinEventDelay(${1:float delay});" },
        { "trigger": "llModPow\t(int) func", "contents": "llModPow(${1:integer a}, ${2:integer b}, ${3:integer c})" },
        { "trigger": "llModifyLand\t(void) func", "contents": "llModifyLand(${1:integer action}, ${2:integer brush});" },
        { "trigger": "llMoveToTarget\t(void) func", "contents": "llMoveToTarget(${1:vector target}, ${2:float tau});" },
        { "trigger": "llNavigateTo\t(void) func", "contents": "llNavigateTo(${1:vector point}, ${2:list options});" },
        { "trigger": "llOffsetTexture\t(void) func", "contents": "llOffsetTexture(${1:float u}, ${2:float v}, ${3:integer face});" },
        { "trigger": "llOpenRemoteDataChannel\t(void) func", "contents": "llOpenRemoteDataChannel();" },
        { "trigger": "llOverMyLand\t(int) func", "contents": "llOverMyLand(${1:key id})" },
        { "trigger": "llOwnerSay\t(void) func", "contents": "llOwnerSay(${1:string msg});" },
        { "trigger": "llParcelMediaCommandList\t(void) func", "contents": "llParcelMediaCommandList(${1:list command});" },
        { "trigger": "llParcelMediaQuery\t(list) func", "contents": "llParcelMediaQuery(${1:list query})" },
        { "trigger": "llParseString2List\t(list) func", "contents": "llParseString2List(${1:string src}, ${2:list separators}, ${3:list spacers})" },
        { "trigger": "llParseStringKeepNulls\t(list) func", "contents": "llParseStringKeepNulls(${1:string src}, ${2:list separators}, ${3:list spacers})" },
        { "trigger": "llParticleSystem\t(void) func", "contents": "llParticleSystem(${1:list rules});" },
        { "trigger": "llPassCollisions\t(void) func", "contents": "llPassCollisions(${1:integer pass});" },
        { "trigger": "llPassTouches\t(void) func", "contents": "llPassTouches(${1:integer pass});" },
        { "trigger": "llPatrolPoints\t(void) func", "contents": "llPatrolPoints(${1:list points}, ${2:list options});" },
        { "trigger": "llPlaySound\t(void) func", "contents": "llPlaySound(${1:string sound}, ${2:float volume});" },
        { "trigger": "llPlaySoundSlave\t(void) func", "contents": "llPlaySoundSlave(${1:string sound}, ${2:float volume});" },
        { "trigger": "llPow\t(float) func", "contents": "llPow(${1:float base}, ${2:float exponent})" },
        { "trigger": "llPreloadSound\t(void) func", "contents": "llPreloadSound(${1:string sound});" },
        { "trigger": "llPursue\t(void) func", "contents": "llPursue(${1:key target}, ${2:list options});" },
        { "trigger": "llPushObject\t(void) func", "contents": "llPushObject(${1:key id}, ${2:vector impulse}, ${3:vector ang_impulse}, ${4:integer local});" },
        { "trigger": "llReadKeyValue\t(key) func", "contents": "llReadKeyValue(${1:string k})" },
        { "trigger": "llRegionSay\t(void) func", "contents": "llRegionSay(${1:integer channel}, ${2:string msg});" },
        { "trigger": "llRegionSayTo\t(void) func", "contents": "llRegionSayTo(${1:key target}, ${2:integer channel}, ${3:string msg});" },
        { "trigger": "llReleaseControls\t(void) func", "contents": "llReleaseControls();" },
        { "trigger": "llReleaseURL\t(void) func", "contents": "llReleaseURL(${1:string url});" },
        { "trigger": "llRemoteDataReply\t(void) func", "contents": "llRemoteDataReply(${1:key channel}, ${2:key message_id}, ${3:string sdata}, ${4:integer idata});" },
        { "trigger": "llRemoteLoadScriptPin\t(void) func", "contents": "llRemoteLoadScriptPin(${1:key target}, ${2:string name}, ${3:integer pin}, ${4:integer running}, ${5:integer start_param});" },
        { "trigger": "llRemoveFromLandBanList\t(void) func", "contents": "llRemoveFromLandBanList(${1:key avatar});" },
        { "trigger": "llRemoveFromLandPassList\t(void) func", "contents": "llRemoveFromLandPassList(${1:key avatar});" },
        { "trigger": "llRemoveInventory\t(void) func", "contents": "llRemoveInventory(${1:string item});" },
        { "trigger": "llRemoveVehicleFlags\t(void) func", "contents": "llRemoveVehicleFlags(${1:integer flags});" },
        { "trigger": "llRequestAgentData\t(key) func", "contents": "llRequestAgentData(${1:key id}, ${2:integer data})" },
        { "trigger": "llRequestDisplayName\t(key) func", "contents": "llRequestDisplayName(${1:key id})" },
        { "trigger": "llRequestExperiencePermissions\t(void) func", "contents": "llRequestExperiencePermissions(${1:key agent}, ${2:string name});" },
        { "trigger": "llRequestInventoryData\t(key) func", "contents": "llRequestInventoryData(${1:string name})" },
        { "trigger": "llRequestPermissions\t(void) func", "contents": "llRequestPermissions(${1:key agent}, ${2:integer perm});" },
        { "trigger": "llRequestSecureURL\t(key) func", "contents": "llRequestSecureURL()" },
        { "trigger": "llRequestSimulatorData\t(key) func", "contents": "llRequestSimulatorData(${1:string simulator}, ${2:integer data})" },
        { "trigger": "llRequestURL\t(key) func", "contents": "llRequestURL()" },
        { "trigger": "llRequestUsername\t(key) func", "contents": "llRequestUsername(${1:key id})" },
        { "trigger": "llResetAnimationOverride\t(void) func", "contents": "llResetAnimationOverride(${1:string anim_state});" },
        { "trigger": "llResetLandBanList\t(void) func", "contents": "llResetLandBanList();" },
        { "trigger": "llResetLandPassList\t(void) func", "contents": "llResetLandPassList();" },
        { "trigger": "llResetOtherScript\t(void) func", "contents": "llResetOtherScript(${1:string name});" },
        { "trigger": "llResetScript\t(void) func", "contents": "llResetScript();" },
        { "trigger": "llResetTime\t(void) func", "contents": "llResetTime();" },
        { "trigger": "llReturnObjectsByID\t(int) func", "contents": "llReturnObjectsByID(${1:list objects})" },
        { "trigger": "llReturnObjectsByOwner\t(int) func", "contents": "llReturnObjectsByOwner(${1:key owner}, ${2:integer scope})" },
        { "trigger": "llRezAtRoot\t(void) func", "contents": "llRezAtRoot(${1:string inventory}, ${2:vector pos}, ${3:vector vel}, ${4:rotation rot}, ${5:integer param});" },
        { "trigger": "llRezObject\t(void) func", "contents": "llRezObject(${1:string inventory}, ${2:vector pos}, ${3:vector vel}, ${4:rotation rot}, ${5:integer param});" },
        { "trigger": "llRot2Angle\t(float) func", "contents": "llRot2Angle(${1:rotation rot})" },
        { "trigger": "llRot2Axis\t(vec) func", "contents": "llRot2Axis(${1:rotation rot})" },
        { "trigger": "llRot2Euler\t(vec) func", "contents": "llRot2Euler(${1:rotation q})" },
        { "trigger": "llRot2Fwd\t(vec) func", "contents": "llRot2Fwd(${1:rotation q})" },
        { "trigger": "llRot2Left\t(vec) func", "contents": "llRot2Left(${1:rotation q})" },
        { "trigger": "llRot2Up\t(vec) func", "contents": "llRot2Up(${1:rotation q})" },
        { "trigger": "llRotBetween\t(rot) func", "contents": "llRotBetween(${1:vector v1}, ${2:vector v2})" },
        { "trigger": "llRotLookAt\t(void) func", "contents": "llRotLookAt(${1:rotation target}, ${2:float strength}, ${3:float damping});" },
        { "trigger": "llRotTarget\t(int) func", "contents": "llRotTarget(${1:rotation rot}, ${2:float error})" },
        { "trigger": "llRotTargetRemove\t(void) func", "contents": "llRotTargetRemove(${1:integer number});" },
        { "trigger": "llRotateTexture\t(void) func", "contents": "llRotateTexture(${1:float angle}, ${2:integer face});" },
        { "trigger": "llRound\t(int) func", "contents": "llRound(${1:float val})" },
        { "trigger": "llSHA1String\t(str) func", "contents": "llSHA1String(${1:string src})" },
        { "trigger": "llSameGroup\t(int) func", "contents": "llSameGroup(${1:key id})" },
        { "trigger": "llSay\t(void) func", "contents": "llSay(${1:integer channel}, ${2:string msg});" },
        { "trigger": "llScaleByFactor\t(int) func", "contents": "llScaleByFactor(${1:float scaling_factor})" },
        { "trigger": "llScaleTexture\t(void) func", "contents": "llScaleTexture(${1:float u}, ${2:float v}, ${3:integer face});" },
        { "trigger": "llScriptDanger\t(int) func", "contents": "llScriptDanger(${1:vector pos})" },
        { "trigger": "llScriptProfiler\t(void) func", "contents": "llScriptProfiler(${1:integer flags});" },
        { "trigger": "llSendRemoteData\t(key) func", "contents": "llSendRemoteData(${1:key channel}, ${2:string dest}, ${3:integer idata}, ${4:string sdata})" },
        { "trigger": "llSensor\t(void) func", "contents": "llSensor(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc});" },
        { "trigger": "llSensorRemove\t(void) func", "contents": "llSensorRemove();" },
        { "trigger": "llSensorRepeat\t(void) func", "contents": "llSensorRepeat(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc}, ${6:float rate});" },
        { "trigger": "llSetAlpha\t(void) func", "contents": "llSetAlpha(${1:float alpha}, ${2:integer face});" },
        { "trigger": "llSetAngularVelocity\t(void) func", "contents": "llSetAngularVelocity(${1:vector angular_velocity}, ${2:integer local});" },
        { "trigger": "llSetAnimationOverride\t(void) func", "contents": "llSetAnimationOverride(${1:string anim_state}, ${2:string anim});" },
        { "trigger": "llSetBuoyancy\t(void) func", "contents": "llSetBuoyancy(${1:float buoyancy});" },
        { "trigger": "llSetCameraAtOffset\t(void) func", "contents": "llSetCameraAtOffset(${1:vector offset});" },
        { "trigger": "llSetCameraEyeOffset\t(void) func", "contents": "llSetCameraEyeOffset(${1:vector offset});" },
        { "trigger": "llSetCameraParams\t(void) func", "contents": "llSetCameraParams(${1:list rules});" },
        { "trigger": "llSetClickAction\t(void) func", "contents": "llSetClickAction(${1:integer action});" },
        { "trigger": "llSetColor\t(void) func", "contents": "llSetColor(${1:vector color}, ${2:integer face});" },
        { "trigger": "llSetContentType\t(void) func", "contents": "llSetContentType(${1:key request_id}, ${2:integer content_type});" },
        { "trigger": "llSetDamage\t(void) func", "contents": "llSetDamage(${1:float damage});" },
        { "trigger": "llSetForce\t(void) func", "contents": "llSetForce(${1:vector force}, ${2:integer local});" },
        { "trigger": "llSetForceAndTorque\t(void) func", "contents": "llSetForceAndTorque(${1:vector force}, ${2:vector torque}, ${3:integer local});" },
        { "trigger": "llSetHoverHeight\t(void) func", "contents": "llSetHoverHeight(${1:float height}, ${2:integer water}, ${3:float tau});" },
        { "trigger": "llSetKeyframedMotion\t(void) func", "contents": "llSetKeyframedMotion(${1:list keyframes}, ${2:list options});" },
        { "trigger": "llSetLinkAlpha\t(void) func", "contents": "llSetLinkAlpha(${1:integer linknumber}, ${2:float alpha}, ${3:integer face});" },
        { "trigger": "llSetLinkCamera\t(void) func", "contents": "llSetLinkCamera(${1:integer link}, ${2:vector eye}, ${3:vector at});" },
        { "trigger": "llSetLinkColor\t(void) func", "contents": "llSetLinkColor(${1:integer linknumber}, ${2:vector color}, ${3:integer face});" },
        { "trigger": "llSetLinkMedia\t(int) func", "contents": "llSetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params})" },
        { "trigger": "llSetLinkPrimitiveParams\t(void) func", "contents": "llSetLinkPrimitiveParams(${1:integer linknumber}, ${2:list rules});" },
        { "trigger": "llSetLinkPrimitiveParamsFast\t(void) func", "contents": "llSetLinkPrimitiveParamsFast(${1:integer linknumber}, ${2:list rules});" },
        { "trigger": "llSetLinkTexture\t(void) func", "contents": "llSetLinkTexture(${1:integer linknumber}, ${2:string texture}, ${3:integer face});" },
        { "trigger": "llSetLinkTextureAnim\t(void) func", "contents": "llSetLinkTextureAnim(${1:integer link}, ${2:integer mode}, ${3:integer face}, ${4:integer sizex}, ${5:integer sizey}, ${6:float start}, ${7:float length}, ${8:float rate});" },
        { "trigger": "llSetLocalRot\t(void) func", "contents": "llSetLocalRot(${1:rotation rot});" },
        { "trigger": "llSetMemoryLimit\t(int) func", "contents": "llSetMemoryLimit(${1:integer limit})" },
        { "trigger": "llSetObjectDesc\t(void) func", "contents": "llSetObjectDesc(${1:string desc});" },
        { "trigger": "llSetObjectName\t(void) func", "contents": "llSetObjectName(${1:string name});" },
        { "trigger": "llSetParcelMusicURL\t(void) func", "contents": "llSetParcelMusicURL(${1:string url});" },
        { "trigger": "llSetPayPrice\t(void) func", "contents": "llSetPayPrice(${1:integer price}, ${2:list quick_pay_buttons});" },
        { "trigger": "llSetPhysicsMaterial\t(void) func", "contents": "llSetPhysicsMaterial(${1:integer flags}, ${2:float gravity_multiplier}, ${3:float restitution}, ${4:float friction}, ${5:float density});" },
        { "trigger": "llSetPos\t(void) func", "contents": "llSetPos(${1:vector pos});" },
        { "trigger": "llSetPrimMediaParams\t(int) func", "contents": "llSetPrimMediaParams(${1:integer face}, ${2:list params})" },
        { "trigger": "llSetPrimitiveParams\t(void) func", "contents": "llSetPrimitiveParams(${1:list rules});" },
        { "trigger": "llSetRegionPos\t(int) func", "contents": "llSetRegionPos(${1:vector pos})" },
        { "trigger": "llSetRemoteScriptAccessPin\t(void) func", "contents": "llSetRemoteScriptAccessPin(${1:integer pin});" },
        { "trigger": "llSetRot\t(void) func", "contents": "llSetRot(${1:rotation rot});" },
        { "trigger": "llSetScale\t(void) func", "contents": "llSetScale(${1:vector scale});" },
        { "trigger": "llSetScriptState\t(void) func", "contents": "llSetScriptState(${1:string name}, ${2:integer run});" },
        { "trigger": "llSetSitText\t(void) func", "contents": "llSetSitText(${1:string text});" },
        { "trigger": "llSetSoundQueueing\t(void) func", "contents": "llSetSoundQueueing(${1:integer queue});" },
        { "trigger": "llSetSoundRadius\t(void) func", "contents": "llSetSoundRadius(${1:float radius});" },
        { "trigger": "llSetStatus\t(void) func", "contents": "llSetStatus(${1:integer status}, ${2:integer value});" },
        { "trigger": "llSetText\t(void) func", "contents": "llSetText(${1:string text}, ${2:vector color}, ${3:float alpha});" },
        { "trigger": "llSetTexture\t(void) func", "contents": "llSetTexture(${1:string texture}, ${2:integer face});" },
        { "trigger": "llSetTextureAnim\t(void) func", "contents": "llSetTextureAnim(${1:integer mode}, ${2:integer face}, ${3:integer sizex}, ${4:integer sizey}, ${5:float start}, ${6:float length}, ${7:float rate});" },
        { "trigger": "llSetTimerEvent\t(void) func", "contents": "llSetTimerEvent(${1:float sec});" },
        { "trigger": "llSetTorque\t(void) func", "contents": "llSetTorque(${1:vector torque}, ${2:integer local});" },
        { "trigger": "llSetTouchText\t(void) func", "contents": "llSetTouchText(${1:string text});" },
        { "trigger": "llSetVehicleFlags\t(void) func", "contents": "llSetVehicleFlags(${1:integer flags});" },
        { "trigger": "llSetVehicleFloatParam\t(void) func", "contents": "llSetVehicleFloatParam(${1:integer param}, ${2:float value});" },
        { "trigger": "llSetVehicleRotationParam\t(void) func", "contents": "llSetVehicleRotationParam(${1:integer param}, ${2:rotation rot});" },
        { "trigger": "llSetVehicleType\t(void) func", "contents": "llSetVehicleType(${1:integer type});" },
        { "trigger": "llSetVehicleVectorParam\t(void) func", "contents": "llSetVehicleVectorParam(${1:integer param}, ${2:vector vec});" },
        { "trigger": "llSetVelocity\t(void) func", "contents": "llSetVelocity(${1:vector velocity}, ${2:integer local});" },
        { "trigger": "llShout\t(void) func", "contents": "llShout(${1:integer channel}, ${2:string msg});" },
        { "trigger": "llSin\t(float) func", "contents": "llSin(${1:float theta})" },
        { "trigger": "llSitTarget\t(void) func", "contents": "llSitTarget(${1:vector offset}, ${2:rotation rot});" },
        { "trigger": "llSleep\t(void) func", "contents": "llSleep(${1:float sec});" },
        { "trigger": "llSqrt\t(float) func", "contents": "llSqrt(${1:float val})" },
        { "trigger": "llStartAnimation\t(void) func", "contents": "llStartAnimation(${1:string anim});" },
        { "trigger": "llStopAnimation\t(void) func", "contents": "llStopAnimation(${1:string anim});" },
        { "trigger": "llStopHover\t(void) func", "contents": "llStopHover();" },
        { "trigger": "llStopLookAt\t(void) func", "contents": "llStopLookAt();" },
        { "trigger": "llStopMoveToTarget\t(void) func", "contents": "llStopMoveToTarget();" },
        { "trigger": "llStopSound\t(void) func", "contents": "llStopSound();" },
        { "trigger": "llStringLength\t(int) func", "contents": "llStringLength(${1:string str})" },
        { "trigger": "llStringToBase64\t(str) func", "contents": "llStringToBase64(${1:string str})" },
        { "trigger": "llStringTrim\t(str) func", "contents": "llStringTrim(${1:string src}, ${2:integer trim_type})" },
        { "trigger": "llSubStringIndex\t(int) func", "contents": "llSubStringIndex(${1:string source}, ${2:string pattern})" },
        { "trigger": "llTakeControls\t(void) func", "contents": "llTakeControls(${1:integer controls}, ${2:integer accept}, ${3:integer pass_on});" },
        { "trigger": "llTan\t(float) func", "contents": "llTan(${1:float theta})" },
        { "trigger": "llTarget\t(int) func", "contents": "llTarget(${1:vector position}, ${2:float range})" },
        { "trigger": "llTargetOmega\t(void) func", "contents": "llTargetOmega(${1:vector axis}, ${2:float spinrate}, ${3:float gain});" },
        { "trigger": "llTargetRemove\t(void) func", "contents": "llTargetRemove(${1:integer number});" },
        { "trigger": "llTeleportAgent\t(void) func", "contents": "llTeleportAgent(${1:key avatar}, ${2:string landmark}, ${3:vector position}, ${4:vector look_at});" },
        { "trigger": "llTeleportAgentGlobalCoords\t(void) func", "contents": "llTeleportAgentGlobalCoords(${1:key agent}, ${2:vector global_coordinates}, ${3:vector region_coordinates}, ${4:vector look_at});" },
        { "trigger": "llTeleportAgentHome\t(void) func", "contents": "llTeleportAgentHome(${1:key id});" },
        { "trigger": "llTextBox\t(void) func", "contents": "llTextBox(${1:key avatar}, ${2:string message}, ${3:integer chat_channel});" },
        { "trigger": "llToLower\t(str) func", "contents": "llToLower(${1:string src})" },
        { "trigger": "llToUpper\t(str) func", "contents": "llToUpper(${1:string src})" },
        { "trigger": "llTransferLindenDollars\t(key) func", "contents": "llTransferLindenDollars(${1:key destination}, ${2:integer amount})" },
        { "trigger": "llTriggerSound\t(void) func", "contents": "llTriggerSound(${1:string sound}, ${2:float volume});" },
        { "trigger": "llTriggerSoundLimited\t(void) func", "contents": "llTriggerSoundLimited(${1:string sound}, ${2:float volume}, ${3:vector top_north_east}, ${4:vector bottom_south_west});" },
        { "trigger": "llUnSit\t(void) func", "contents": "llUnSit(${1:key id});" },
        { "trigger": "llUnescapeURL\t(str) func", "contents": "llUnescapeURL(${1:string url})" },
        { "trigger": "llUpdateCharacter\t(void) func", "contents": "llUpdateCharacter(${1:list options});" },
        { "trigger": "llUpdateKeyValue\t(key) func", "contents": "llUpdateKeyValue(${1:string k}, ${2:string v}, ${3:integer checked}, ${4:string ov})" },
        { "trigger": "llVecDist\t(float) func", "contents": "llVecDist(${1:vector v1}, ${2:vector v2})" },
        { "trigger": "llVecMag\t(float) func", "contents": "llVecMag(${1:vector v})" },
        { "trigger": "llVecNorm\t(vec) func", "contents": "llVecNorm(${1:vector v})" },
        { "trigger": "llVolumeDetect\t(void) func", "contents": "llVolumeDetect(${1:integer detect});" },
        { "trigger": "llWanderWithin\t(void) func", "contents": "llWanderWithin(${1:vector center}, ${2:vector radius}, ${3:list options});" },
        { "trigger": "llWater\t(float) func", "contents": "llWater(${1:vector offset})" },
        { "trigger": "llWhisper\t(void) func", "contents": "llWhisper(${1:integer channel}, ${2:string msg});" },
        { "trigger": "llWind\t(vec) func", "contents": "llWind(${1:vector offset})" },
        { "trigger": "llXorBase64\t(str) func", "contents": "llXorBase64(${1:string str1}, ${2:string str2})" }
    ]
}
