{
    "uuid": "2afc67f8-60d2-4ee7-ad58-aa193f58d07a",
    "name": "LSL",
    "description": "Textastic CodeCompletion for LSL (the Linden Scripting Language).",
    "last_modified": "2015-04-22 00:00:00",
    "completionSets":
    [
        {
            "name": "constant.language.float.lsl",
            "strings":
            [
                { "trigger": "DEG_TO_RAD\tfloat (0.017453)", "contents": "DEG_TO_RAD" },
                { "trigger": "PI\tfloat (3.141593)", "contents": "PI" },
                { "trigger": "PI_BY_TWO\tfloat (1.570796)", "contents": "PI_BY_TWO" },
                { "trigger": "RAD_TO_DEG\tfloat (57.29578)", "contents": "RAD_TO_DEG" },
                { "trigger": "SQRT2\tfloat (1.414214)", "contents": "SQRT2" },
                { "trigger": "TWO_PI\tfloat (6.283185)", "contents": "TWO_PI" }
            ]
        },
        {
            "name": "constant.language.integer.lsl",
            "strings":
            [
                { "trigger": "ACTIVE\tint (0x2 = 2)",                                               "contents": "ACTIVE" },
                { "trigger": "AGENT\tint (0x1 = 1 = AGENT_BY_LEGACY_NAME)",                         "contents": "AGENT" },
                { "trigger": "AGENT_ALWAYS_RUN\tint (0x1000 = 4096)",                               "contents": "AGENT_ALWAYS_RUN" },
                { "trigger": "AGENT_ATTACHMENTS\tint (0x2 = 2)",                                    "contents": "AGENT_ATTACHMENTS" },
                { "trigger": "AGENT_AUTOPILOT\tint (0x2000 = 8192)",                                "contents": "AGENT_AUTOPILOT" },
                { "trigger": "AGENT_AWAY\tint (0x40 = 64)",                                         "contents": "AGENT_AWAY" },
                { "trigger": "AGENT_BUSY\tint (0x800 = 2048)",                                      "contents": "AGENT_BUSY" },
                { "trigger": "AGENT_BY_LEGACY_NAME\tint (0x1 = 1 = AGENT)",                         "contents": "AGENT_BY_LEGACY_NAME" },
                { "trigger": "AGENT_BY_USERNAME\tint (0x10 = 16)",                                  "contents": "AGENT_BY_USERNAME" },
                { "trigger": "AGENT_CROUCHING\tint (0x400 = 1024)",                                 "contents": "AGENT_CROUCHING" },
                { "trigger": "AGENT_FLYING\tint (0x1 = 1)",                                         "contents": "AGENT_FLYING" },
                { "trigger": "AGENT_IN_AIR\tint (0x100 = 256)",                                     "contents": "AGENT_IN_AIR" },
                { "trigger": "AGENT_LIST_PARCEL\tint (1)",                                          "contents": "AGENT_LIST_PARCEL" },
                { "trigger": "AGENT_LIST_PARCEL_OWNER\tint (2)",                                    "contents": "AGENT_LIST_PARCEL_OWNER" },
                { "trigger": "AGENT_LIST_REGION\tint (4)",                                          "contents": "AGENT_LIST_REGION" },
                { "trigger": "AGENT_MOUSELOOK\tint (0x8 = 8)",                                      "contents": "AGENT_MOUSELOOK" },
                { "trigger": "AGENT_ON_OBJECT\tint (0x20 = 32)",                                    "contents": "AGENT_ON_OBJECT" },
                { "trigger": "AGENT_SCRIPTED\tint (0x4 = 4)",                                       "contents": "AGENT_SCRIPTED" },
                { "trigger": "AGENT_SITTING\tint (0x10 = 16)",                                      "contents": "AGENT_SITTING" },
                { "trigger": "AGENT_TYPING\tint (0x200 = 512)",                                     "contents": "AGENT_TYPING" },
                { "trigger": "AGENT_WALKING\tint (0x80 = 128)",                                     "contents": "AGENT_WALKING" },
                { "trigger": "ALL_SIDES\tint (-1)",                                                 "contents": "ALL_SIDES" },
                { "trigger": "ANIM_ON\tint (0x1 = 1)",                                              "contents": "ANIM_ON" },
                { "trigger": "ATTACH_AVATAR_CENTER\tint (40)",                                      "contents": "ATTACH_AVATAR_CENTER" },
                { "trigger": "ATTACH_BACK\tint (9)",                                                "contents": "ATTACH_BACK" },
                { "trigger": "ATTACH_BELLY\tint (28)",                                              "contents": "ATTACH_BELLY" },
                { "trigger": "ATTACH_CHEST\tint (1)",                                               "contents": "ATTACH_CHEST" },
                { "trigger": "ATTACH_CHIN\tint (12)",                                               "contents": "ATTACH_CHIN" },
                { "trigger": "ATTACH_HEAD\tint (2)",                                                "contents": "ATTACH_HEAD" },
                { "trigger": "ATTACH_HUD_BOTTOM\tint (37)",                                         "contents": "ATTACH_HUD_BOTTOM" },
                { "trigger": "ATTACH_HUD_BOTTOM_LEFT\tint (36)",                                    "contents": "ATTACH_HUD_BOTTOM_LEFT" },
                { "trigger": "ATTACH_HUD_BOTTOM_RIGHT\tint (38)",                                   "contents": "ATTACH_HUD_BOTTOM_RIGHT" },
                { "trigger": "ATTACH_HUD_CENTER_1\tint (35)",                                       "contents": "ATTACH_HUD_CENTER_1" },
                { "trigger": "ATTACH_HUD_CENTER_2\tint (31)",                                       "contents": "ATTACH_HUD_CENTER_2" },
                { "trigger": "ATTACH_HUD_TOP_CENTER\tint (33)",                                     "contents": "ATTACH_HUD_TOP_CENTER" },
                { "trigger": "ATTACH_HUD_TOP_LEFT\tint (36)",                                       "contents": "ATTACH_HUD_TOP_LEFT" },
                { "trigger": "ATTACH_HUD_TOP_RIGHT\tint (32)",                                      "contents": "ATTACH_HUD_TOP_RIGHT" },
                { "trigger": "ATTACH_LEAR\tint (13)",                                               "contents": "ATTACH_LEAR" },
                { "trigger": "ATTACH_LEFT_PEC\tint (29)",                                           "contents": "ATTACH_LEFT_PEC" },
                { "trigger": "ATTACH_LEYE\tint (15)",                                               "contents": "ATTACH_LEYE" },
                { "trigger": "ATTACH_LFOOT\tint (7)",                                               "contents": "ATTACH_LFOOT" },
                { "trigger": "ATTACH_LHAND\tint (5)",                                               "contents": "ATTACH_LHAND" },
                { "trigger": "ATTACH_LHIP\tint (25)",                                               "contents": "ATTACH_LHIP" },
                { "trigger": "ATTACH_LLARM\tint (21)",                                              "contents": "ATTACH_LLARM" },
                { "trigger": "ATTACH_LLLEG\tint (27)",                                              "contents": "ATTACH_LLLEG" },
                { "trigger": "ATTACH_LSHOULDER\tint (3)",                                           "contents": "ATTACH_LSHOULDER" },
                { "trigger": "ATTACH_LUARM\tint (20)",                                              "contents": "ATTACH_LUARM" },
                { "trigger": "ATTACH_LULEG\tint (26)",                                              "contents": "ATTACH_LULEG" },
                { "trigger": "ATTACH_MOUTH\tint (11)",                                              "contents": "ATTACH_MOUTH" },
                { "trigger": "ATTACH_NECK\tint (39)",                                               "contents": "ATTACH_NECK" },
                { "trigger": "ATTACH_NOSE\tint (17)",                                               "contents": "ATTACH_NOSE" },
                { "trigger": "ATTACH_PELVIS\tint (10)",                                             "contents": "ATTACH_PELVIS" },
                { "trigger": "ATTACH_REAR\tint (14)",                                               "contents": "ATTACH_REAR" },
                { "trigger": "ATTACH_REYE\tint (16)",                                               "contents": "ATTACH_REYE" },
                { "trigger": "ATTACH_RFOOT\tint (8)",                                               "contents": "ATTACH_RFOOT" },
                { "trigger": "ATTACH_RHAND\tint (6)",                                               "contents": "ATTACH_RHAND" },
                { "trigger": "ATTACH_RHIP\tint (22)",                                               "contents": "ATTACH_RHIP" },
                { "trigger": "ATTACH_RIGHT_PEC\tint (30)",                                          "contents": "ATTACH_RIGHT_PEC" },
                { "trigger": "ATTACH_RLARM\tint (19)",                                              "contents": "ATTACH_RLARM" },
                { "trigger": "ATTACH_RLLEG\tint (24)",                                              "contents": "ATTACH_RLLEG" },
                { "trigger": "ATTACH_RSHOULDER\tint (4)",                                           "contents": "ATTACH_RSHOULDER" },
                { "trigger": "ATTACH_RUARM\tint (18)",                                              "contents": "ATTACH_RUARM" },
                { "trigger": "ATTACH_RULEG\tint (23)",                                              "contents": "ATTACH_RULEG" },
                { "trigger": "AVOID_CHARACTERS\tint (1)",                                           "contents": "AVOID_CHARACTERS" },
                { "trigger": "AVOID_DYNAMIC_OBSTACLES\tint (2)",                                    "contents": "AVOID_DYNAMIC_OBSTACLES" },
                { "trigger": "AVOID_NONE\tint (0)",                                                 "contents": "AVOID_NONE" },
                { "trigger": "CAMERA_ACTIVE\tint (12)",                                             "contents": "CAMERA_ACTIVE, ${1:integer isActive}, $0" },
                { "trigger": "CAMERA_BEHINDNESS_ANGLE\tint (8)",                                    "contents": "CAMERA_BEHINDNESS_ANGLE, ${1:float degrees}, $0" },
                { "trigger": "CAMERA_BEHINDNESS_LAG\tint (9)",                                      "contents": "CAMERA_BEHINDNESS_LAG, ${1:float seconds}, $0" },
                { "trigger": "CAMERA_DISTANCE\tint (7)",                                            "contents": "CAMERA_DISTANCE, ${1:float meters}, $0" },
                { "trigger": "CAMERA_FOCUS\tint (17)",                                              "contents": "CAMERA_FOCUS, ${1:vector position}, $0" },
                { "trigger": "CAMERA_FOCUS_LAG\tint (6)",                                           "contents": "CAMERA_FOCUS_LAG, ${1:float seconds}, $0" },
                { "trigger": "CAMERA_FOCUS_LOCKED\tint (22)",                                       "contents": "CAMERA_FOCUS_LOCKED, ${1:integer isLocked}, $0" },
                { "trigger": "CAMERA_FOCUS_OFFSET\tint (1)",                                        "contents": "CAMERA_FOCUS_OFFSET, ${1:vector meters}, $0" },
                { "trigger": "CAMERA_FOCUS_THRESHOLD\tint (11)",                                    "contents": "CAMERA_FOCUS_THRESHOLD, ${1:float meters}, $0" },
                { "trigger": "CAMERA_PITCH\tint (0)",                                               "contents": "CAMERA_PITCH, ${1:float degrees}, $0" },
                { "trigger": "CAMERA_POSITION\tint (13)",                                           "contents": "CAMERA_POSITION, ${1:vector position}, $0" },
                { "trigger": "CAMERA_POSITION_LAG\tint (5)",                                        "contents": "CAMERA_POSITION_LAG, ${1:float seconds}, $0" },
                { "trigger": "CAMERA_POSITION_LOCKED\tint (21)",                                    "contents": "CAMERA_POSITION_LOCKED, ${1:integer isLocked}, $0" },
                { "trigger": "CAMERA_POSITION_THRESHOLD\tint (10)",                                 "contents": "CAMERA_POSITION_THRESHOLD, ${1:float meters}, $0" },
                { "trigger": "CHANGED_ALLOWED_DROP\tint (0x40 = 64)",                               "contents": "CHANGED_ALLOWED_DROP" },
                { "trigger": "CHANGED_COLOR\tint (0x2 = 2)",                                        "contents": "CHANGED_COLOR" },
                { "trigger": "CHANGED_INVENTORY\tint (0x1 = 1)",                                    "contents": "CHANGED_INVENTORY" },
                { "trigger": "CHANGED_LINK\tint (0x20 = 32)",                                       "contents": "CHANGED_LINK" },
                { "trigger": "CHANGED_MEDIA\tint (0x800 = 2048)",                                   "contents": "CHANGED_MEDIA" },
                { "trigger": "CHANGED_OWNER\tint (0x80 = 128)",                                     "contents": "CHANGED_OWNER" },
                { "trigger": "CHANGED_REGION\tint (0x100 = 256)",                                   "contents": "CHANGED_REGION" },
                { "trigger": "CHANGED_REGION_START\tint (0x400 = 1024)",                            "contents": "CHANGED_REGION_START" },
                { "trigger": "CHANGED_SCALE\tint (0x8 = 8)",                                        "contents": "CHANGED_SCALE" },
                { "trigger": "CHANGED_SHAPE\tint (0x4 = 4)",                                        "contents": "CHANGED_SHAPE" },
                { "trigger": "CHANGED_TELEPORT\tint (0x200 = 512)",                                 "contents": "CHANGED_TELEPORT" },
                { "trigger": "CHANGED_TEXTURE\tint (0x10 = 16)",                                    "contents": "CHANGED_TEXTURE" },
                { "trigger": "CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES\tint (14)",                      "contents": "CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES" },
                { "trigger": "CHARACTER_AVOIDANCE_MODE\tint (5)",                                   "contents": "CHARACTER_AVOIDANCE_MODE, ${1:integer flags}, $0" },
                { "trigger": "CHARACTER_CMD_JUMP\tint (1)",                                         "contents": "CHARACTER_CMD_JUMP" },
                { "trigger": "CHARACTER_CMD_SMOOTH_STOP\tint (2)",                                  "contents": "CHARACTER_CMD_SMOOTH_STOP" },
                { "trigger": "CHARACTER_CMD_STOP\tint (0)",                                         "contents": "CHARACTER_CMD_STOP" },
                { "trigger": "CHARACTER_DESIRED_SPEED\tint (1)",                                    "contents": "CHARACTER_DESIRED_SPEED, ${1:float speed}, $0" },
                { "trigger": "CHARACTER_DESIRED_TURN_SPEED\tint (12)",                              "contents": "CHARACTER_DESIRED_TURN_SPEED, ${1:float speed}, $0" },
                { "trigger": "CHARACTER_LENGTH\tint (3)",                                           "contents": "CHARACTER_LENGTH, ${1:float length}, $0" },
                { "trigger": "CHARACTER_MAX_ACCEL\tint (8)",                                        "contents": "CHARACTER_MAX_ACCEL" },
                { "trigger": "CHARACTER_MAX_DECEL\tint (9)",                                        "contents": "CHARACTER_MAX_DECEL" },
                { "trigger": "CHARACTER_MAX_SPEED\tint (13)",                                       "contents": "CHARACTER_MAX_SPEED" },
                { "trigger": "CHARACTER_MAX_TURN_RADIUS\tint (10)",                                 "contents": "CHARACTER_MAX_TURN_RADIUS, ${1:float radius}, $0" },
                { "trigger": "CHARACTER_ORIENTATION\tint (4)",                                      "contents": "CHARACTER_ORIENTATION, ${1:integer orientation}, $0" },
                { "trigger": "CHARACTER_RADIUS\tint (2)",                                           "contents": "CHARACTER_RADIUS, ${1:float radius}, $0" },
                { "trigger": "CHARACTER_STAY_WITHIN_PARCEL\tint (15)",                              "contents": "CHARACTER_STAY_WITHIN_PARCEL, ${1: boolean stay}, $0" },
                { "trigger": "CHARACTER_TYPE\tint (6)",                                             "contents": "CHARACTER_TYPE, ${1:integer type}, $0" },
                { "trigger": "CHARACTER_TYPE_A\tint (0)",                                           "contents": "CHARACTER_TYPE_A" },
                { "trigger": "CHARACTER_TYPE_B\tint (1)",                                           "contents": "CHARACTER_TYPE_B" },
                { "trigger": "CHARACTER_TYPE_C\tint (2)",                                           "contents": "CHARACTER_TYPE_C" },
                { "trigger": "CHARACTER_TYPE_D\tint (3)",                                           "contents": "CHARACTER_TYPE_D" },
                { "trigger": "CHARACTER_TYPE_NONE\tint (4)",                                        "contents": "CHARACTER_TYPE_NONE" },
                { "trigger": "CLICK_ACTION_BUY\tint (2)",                                           "contents": "CLICK_ACTION_BUY" },
                { "trigger": "CLICK_ACTION_NONE\tint (0)",                                          "contents": "CLICK_ACTION_NONE" },
                { "trigger": "CLICK_ACTION_OPEN\tint (4)",                                          "contents": "CLICK_ACTION_OPEN" },
                { "trigger": "CLICK_ACTION_OPEN_MEDIA\tint (6)",                                    "contents": "CLICK_ACTION_OPEN_MEDIA" },
                { "trigger": "CLICK_ACTION_PAY\tint (3)",                                           "contents": "CLICK_ACTION_PAY" },
                { "trigger": "CLICK_ACTION_PLAY\tint (5)",                                          "contents": "CLICK_ACTION_PLAY" },
                { "trigger": "CLICK_ACTION_SIT\tint (1)",                                           "contents": "CLICK_ACTION_SIT" },
                { "trigger": "CLICK_ACTION_TOUCH\tint (0)",                                         "contents": "CLICK_ACTION_TOUCH" },
                { "trigger": "CONTENT_TYPE_ATOM\tint (4)",                                          "contents": "CONTENT_TYPE_ATOM" },
                { "trigger": "CONTENT_TYPE_FORM\tint (7)",                                          "contents": "CONTENT_TYPE_FORM" },
                { "trigger": "CONTENT_TYPE_HTML\tint (1)",                                          "contents": "CONTENT_TYPE_HTML" },
                { "trigger": "CONTENT_TYPE_JSON\tint (5)",                                          "contents": "CONTENT_TYPE_JSON" },
                { "trigger": "CONTENT_TYPE_LLSD\tint (6)",                                          "contents": "CONTENT_TYPE_LLSD" },
                { "trigger": "CONTENT_TYPE_RSS\tint (8)",                                           "contents": "CONTENT_TYPE_RSS" },
                { "trigger": "CONTENT_TYPE_TEXT\tint (0)",                                          "contents": "CONTENT_TYPE_TEXT" },
                { "trigger": "CONTENT_TYPE_XHTML\tint (3)",                                         "contents": "CONTENT_TYPE_XHTML" },
                { "trigger": "CONTENT_TYPE_XML\tint (2)",                                           "contents": "CONTENT_TYPE_XML" },
                { "trigger": "CONTROL_BACK\tint (0x2 = 2)",                                         "contents": "CONTROL_BACK" },
                { "trigger": "CONTROL_DOWN\tint (0x20 = 32)",                                       "contents": "CONTROL_DOWN" },
                { "trigger": "CONTROL_FWD\tint (0x1 = 1)",                                          "contents": "CONTROL_FWD" },
                { "trigger": "CONTROL_LBUTTON\tint (0x10000000 = 268435456)",                       "contents": "CONTROL_LBUTTON" },
                { "trigger": "CONTROL_LEFT\tint (0x4 = 4)",                                         "contents": "CONTROL_LEFT" },
                { "trigger": "CONTROL_ML_LBUTTON\tint (0x40000000 = 1073741824)",                   "contents": "CONTROL_ML_LBUTTON" },
                { "trigger": "CONTROL_RIGHT\tint (0x8 = 8)",                                        "contents": "CONTROL_RIGHT" },
                { "trigger": "CONTROL_ROT_LEFT\tint (0x100 = 256)",                                 "contents": "CONTROL_ROT_LEFT" },
                { "trigger": "CONTROL_ROT_RIGHT\tint (0x200 = 512)",                                "contents": "CONTROL_ROT_RIGHT" },
                { "trigger": "CONTROL_UP\tint (0x10 = 16)",                                         "contents": "CONTROL_UP" },
                { "trigger": "DATA_BORN\tint (3)",                                                  "contents": "DATA_BORN" },
                { "trigger": "DATA_NAME\tint (2)",                                                  "contents": "DATA_NAME" },
                { "trigger": "DATA_ONLINE\tint (1)",                                                "contents": "DATA_ONLINE" },
                { "trigger": "DATA_PAYINFO\tint (8)",                                               "contents": "DATA_PAYINFO" },
                { "trigger": "DATA_SIM_POS\tint (5)",                                               "contents": "DATA_SIM_POS" },
                { "trigger": "DATA_SIM_RATING\tint (7)",                                            "contents": "DATA_SIM_RATING" },
                { "trigger": "DATA_SIM_STATUS\tint (6)",                                            "contents": "DATA_SIM_STATUS" },
                { "trigger": "DEBUG_CHANNEL\tint (0x7FFFFFFF = 2147483647)",                        "contents": "DEBUG_CHANNEL" },
                { "trigger": "DENSITY\tint (0x1 = 1)",                                              "contents": "DENSITY" },
                { "trigger": "ERR_GENERIC\tint (-1)",                                               "contents": "ERR_GENERIC" },
                { "trigger": "ERR_MALFORMED_PARAMS\tint (-3)",                                      "contents": "ERR_MALFORMED_PARAMS" },
                { "trigger": "ERR_PARCEL_PERMISSIONS\tint (-2)",                                    "contents": "ERR_PARCEL_PERMISSIONS" },
                { "trigger": "ERR_RUNTIME_PERMISSIONS\tint (-4)",                                   "contents": "ERR_RUNTIME_PERMISSIONS" },
                { "trigger": "ERR_THROTTLED\tint (-5)",                                             "contents": "ERR_THROTTLED" },
                { "trigger": "ESTATE_ACCESS_ALLOWED_AGENT_ADD\tint (0x4 = 4)",                      "contents": "ESTATE_ACCESS_ALLOWED_AGENT_ADD" },
                { "trigger": "ESTATE_ACCESS_ALLOWED_AGENT_REMOVE\tint (0x8 = 8)",                   "contents": "ESTATE_ACCESS_ALLOWED_AGENT_REMOVE" },
                { "trigger": "ESTATE_ACCESS_ALLOWED_GROUP_ADD\tint (0x10 = 16)",                    "contents": "ESTATE_ACCESS_ALLOWED_GROUP_ADD" },
                { "trigger": "ESTATE_ACCESS_ALLOWED_GROUP_REMOVE\tint (0x20 = 32)",                 "contents": "ESTATE_ACCESS_ALLOWED_GROUP_REMOVE" },
                { "trigger": "ESTATE_ACCESS_BANNED_AGENT_ADD\tint (0x40 = 64)",                     "contents": "ESTATE_ACCESS_BANNED_AGENT_ADD" },
                { "trigger": "ESTATE_ACCESS_BANNED_AGENT_REMOVE\tint (0x80 = 128)",                 "contents": "ESTATE_ACCESS_BANNED_AGENT_REMOVE" },
                { "trigger": "FORCE_DIRECT_PATH\tint (1)",                                          "contents": "FORCE_DIRECT_PATH" },
                { "trigger": "FRICTION\tint (0x2 = 2)",                                             "contents": "FRICTION" },
                { "trigger": "GCNP_RADIUS\tint (0)",                                                "contents": "GCNP_RADIUS" },
                { "trigger": "GCNP_STATIC\tint (1)",                                                "contents": "GCNP_STATIC" },
                { "trigger": "GRAVITY_MULTIPLIER\tint (0x8 = 8)",                                   "contents": "GRAVITY_MULTIPLIER" },
                { "trigger": "HORIZONTAL\tint (1)",                                                 "contents": "HORIZONTAL" },
                { "trigger": "HTTP_BODY_MAXLENGTH\tint (2)",                                        "contents": "HTTP_BODY_MAXLENGTH, ${1:integer length}, $0" },
                { "trigger": "HTTP_BODY_TRUNCATED\tint (0)",                                        "contents": "HTTP_BODY_TRUNCATED" },
                { "trigger": "HTTP_CUSTOM_HEADER\tint (0)",                                         "contents": "HTTP_CUSTOM_HEADER, ${1:string name}, ${2:string value}, $0" },
                { "trigger": "HTTP_METHOD\tint (0)",                                                "contents": "HTTP_METHOD, ${1:string method}, $0" },
                { "trigger": "HTTP_MIMETYPE\tint (1)",                                              "contents": "HTTP_MIMETYPE, ${1:string mimeType}, $0" },
                { "trigger": "HTTP_PRAGMA_NO_CACHE\tint (6)",                                       "contents": "HTTP_PRAGMA_NO_CACHE, ${1:integer send_header}, $0" },
                { "trigger": "HTTP_VERBOSE_THROTTLE\tint (4)",                                      "contents": "HTTP_VERBOSE_THROTTLE, ${1:integer noisy}, $0" },
                { "trigger": "HTTP_VERIFY_CERT\tint (3)",                                           "contents": "HTTP_VERIFY_CERT, ${1:integer verify}, $0" },
                { "trigger": "INVENTORY_ALL\tint (-1)",                                             "contents": "INVENTORY_ALL" },
                { "trigger": "INVENTORY_ANIMATION\tint (20)",                                       "contents": "INVENTORY_ANIMATION" },
                { "trigger": "INVENTORY_BODYPART\tint (13)",                                        "contents": "INVENTORY_BODYPART" },
                { "trigger": "INVENTORY_CLOTHING\tint (5)",                                         "contents": "INVENTORY_CLOTHING" },
                { "trigger": "INVENTORY_GESTURE\tint (21)",                                         "contents": "INVENTORY_GESTURE" },
                { "trigger": "INVENTORY_LANDMARK\tint (3)",                                         "contents": "INVENTORY_LANDMARK" },
                { "trigger": "INVENTORY_NONE\tint (-1)",                                            "contents": "INVENTORY_NONE" },
                { "trigger": "INVENTORY_NOTECARD\tint (7)",                                         "contents": "INVENTORY_NOTECARD" },
                { "trigger": "INVENTORY_OBJECT\tint (6)",                                           "contents": "INVENTORY_OBJECT" },
                { "trigger": "INVENTORY_SCRIPT\tint (10)",                                          "contents": "INVENTORY_SCRIPT" },
                { "trigger": "INVENTORY_SOUND\tint (1)",                                            "contents": "INVENTORY_SOUND" },
                { "trigger": "INVENTORY_TEXTURE\tint (0)",                                          "contents": "INVENTORY_TEXTURE" },
                { "trigger": "JSON_APPEND\tint (-1)",                                               "contents": "JSON_APPEND" },
                { "trigger": "KFM_CMD_PAUSE\tint (2)",                                              "contents": "KFM_CMD_PAUSE" },
                { "trigger": "KFM_CMD_PLAY\tint (0)",                                               "contents": "KFM_CMD_PLAY" },
                { "trigger": "KFM_CMD_SET_MODE\tint (3)",                                           "contents": "KFM_CMD_SET_MODE" },
                { "trigger": "KFM_CMD_STOP\tint (1)",                                               "contents": "KFM_CMD_STOP" },
                { "trigger": "KFM_COMMAND\tint (0)",                                                "contents": "KFM_COMMAND" },
                { "trigger": "KFM_DATA\tint (2)",                                                   "contents": "KFM_DATA" },
                { "trigger": "KFM_FORWARD\tint (0)",                                                "contents": "KFM_FORWARD" },
                { "trigger": "KFM_LOOP\tint (1)",                                                   "contents": "KFM_LOOP" },
                { "trigger": "KFM_MODE\tint (1)",                                                   "contents": "KFM_MODE" },
                { "trigger": "KFM_PING_PONG\tint (2)",                                              "contents": "KFM_PING_PONG" },
                { "trigger": "KFM_REVERSE\tint (3)",                                                "contents": "KFM_REVERSE" },
                { "trigger": "KFM_ROTATION\tint (1)",                                               "contents": "KFM_ROTATION" },
                { "trigger": "KFM_TRANSLATION\tint (2)",                                            "contents": "KFM_TRANSLATION" },
                { "trigger": "LAND_LEVEL\tint (0)",                                                 "contents": "LAND_LEVEL" },
                { "trigger": "LAND_LOWER\tint (2)",                                                 "contents": "LAND_LOWER" },
                { "trigger": "LAND_NOISE\tint (4)",                                                 "contents": "LAND_NOISE" },
                { "trigger": "LAND_RAISE\tint (1)",                                                 "contents": "LAND_RAISE" },
                { "trigger": "LAND_REVERT\tint (5)",                                                "contents": "LAND_REVERT" },
                { "trigger": "LAND_SMOOTH\tint (3)",                                                "contents": "LAND_SMOOTH" },
                { "trigger": "LINK_ALL_CHILDREN\tint (-3)",                                         "contents": "LINK_ALL_CHILDREN" },
                { "trigger": "LINK_ALL_OTHERS\tint (-2)",                                           "contents": "LINK_ALL_OTHERS" },
                { "trigger": "LINK_ROOT\tint (1)",                                                  "contents": "LINK_ROOT" },
                { "trigger": "LINK_SET\tint (-1)",                                                  "contents": "LINK_SET" },
                { "trigger": "LINK_THIS\tint (-4)",                                                 "contents": "LINK_THIS" },
                { "trigger": "LIST_STAT_GEOMETRIC_MEAN\tint (9)",                                   "contents": "LIST_STAT_GEOMETRIC_MEAN" },
                { "trigger": "LIST_STAT_MAX\tint (2)",                                              "contents": "LIST_STAT_MAX" },
                { "trigger": "LIST_STAT_MEAN\tint (3)",                                             "contents": "LIST_STAT_MEAN" },
                { "trigger": "LIST_STAT_MEDIAN\tint (4)",                                           "contents": "LIST_STAT_MEDIAN" },
                { "trigger": "LIST_STAT_MIN\tint (1)",                                              "contents": "LIST_STAT_MIN" },
                { "trigger": "LIST_STAT_NUM_COUNT\tint (8)",                                        "contents": "LIST_STAT_NUM_COUNT" },
                { "trigger": "LIST_STAT_RANGE\tint (0)",                                            "contents": "LIST_STAT_RANGE" },
                { "trigger": "LIST_STAT_STD_DEV\tint (5)",                                          "contents": "LIST_STAT_STD_DEV" },
                { "trigger": "LIST_STAT_SUM\tint (6)",                                              "contents": "LIST_STAT_SUM" },
                { "trigger": "LIST_STAT_SUM_SQUARES\tint (7)",                                      "contents": "LIST_STAT_SUM_SQUARES" },
                { "trigger": "LOOP\tint (0x2 = 2)",                                                 "contents": "LOOP" },
                { "trigger": "MASK_BASE\tint (0)",                                                  "contents": "MASK_BASE" },
                { "trigger": "MASK_EVERYONE\tint (3)",                                              "contents": "MASK_EVERYONE" },
                { "trigger": "MASK_GROUP\tint (2)",                                                 "contents": "MASK_GROUP" },
                { "trigger": "MASK_NEXT\tint (4)",                                                  "contents": "MASK_NEXT" },
                { "trigger": "MASK_OWNER\tint (1)",                                                 "contents": "MASK_OWNER" },
                { "trigger": "OBJECT_ATTACHED_POINT\tint (19)",                                     "contents": "OBJECT_ATTACHED_POINT" },
                { "trigger": "OBJECT_BODY_SHAPE_TYPE\tint (26)",                                    "contents": "OBJECT_BODY_SHAPE_TYPE" },
                { "trigger": "OBJECT_CHARACTER_TIME\tint (17)",                                     "contents": "OBJECT_CHARACTER_TIME" },
                { "trigger": "OBJECT_CREATOR\tint (8)",                                             "contents": "OBJECT_CREATOR" },
                { "trigger": "OBJECT_DESC\tint (2)",                                                "contents": "OBJECT_DESC" },
                { "trigger": "OBJECT_GROUP\tint (7)",                                               "contents": "OBJECT_GROUP" },
                { "trigger": "OBJECT_HOVER_HEIGHT\tint (25)",                                       "contents": "OBJECT_HOVER_HEIGHT" },
                { "trigger": "OBJECT_LAST_OWNER_ID\tint (27)",                                      "contents": "OBJECT_LAST_OWNER_ID" },
                { "trigger": "OBJECT_NAME\tint (1)",                                                "contents": "OBJECT_NAME" },
                { "trigger": "OBJECT_OWNER\tint (6)",                                               "contents": "OBJECT_OWNER" },
                { "trigger": "OBJECT_PATHFINDING_TYPE\tint (20)",                                   "contents": "OBJECT_PATHFINDING_TYPE" },
                { "trigger": "OBJECT_PHANTOM\tint (22)",                                            "contents": "OBJECT_PHANTOM" },
                { "trigger": "OBJECT_PHYSICS\tint (21)",                                            "contents": "OBJECT_PHYSICS" },
                { "trigger": "OBJECT_PHYSICS_COST\tint (16)",                                       "contents": "OBJECT_PHYSICS_COST" },
                { "trigger": "OBJECT_POS\tint (3)",                                                 "contents": "OBJECT_POS" },
                { "trigger": "OBJECT_PRIM_EQUIVALENCE\tint (13)",                                   "contents": "OBJECT_PRIM_EQUIVALENCE" },
                { "trigger": "OBJECT_RENDER_WEIGHT\tint (24)",                                      "contents": "OBJECT_RENDER_WEIGHT" },
                { "trigger": "OBJECT_RETURN_PARCEL\tint (1)",                                       "contents": "OBJECT_RETURN_PARCEL" },
                { "trigger": "OBJECT_RETURN_PARCEL_OWNER\tint (2)",                                 "contents": "OBJECT_RETURN_PARCEL_OWNER" },
                { "trigger": "OBJECT_RETURN_REGION\tint (4)",                                       "contents": "OBJECT_RETURN_REGION" },
                { "trigger": "OBJECT_ROOT\tint (18)",                                               "contents": "OBJECT_ROOT" },
                { "trigger": "OBJECT_ROT\tint (4)",                                                 "contents": "OBJECT_ROT" },
                { "trigger": "OBJECT_RUNNING_SCRIPT_COUNT\tint (9)",                                "contents": "OBJECT_RUNNING_SCRIPT_COUNT" },
                { "trigger": "OBJECT_SCRIPT_MEMORY\tint (11)",                                      "contents": "OBJECT_SCRIPT_MEMORY" },
                { "trigger": "OBJECT_SCRIPT_TIME\tint (12)",                                        "contents": "OBJECT_SCRIPT_TIME" },
                { "trigger": "OBJECT_SERVER_COST\tint (14)",                                        "contents": "OBJECT_SERVER_COST" },
                { "trigger": "OBJECT_STREAMING_COST\tint (15)",                                     "contents": "OBJECT_STREAMING_COST" },
                { "trigger": "OBJECT_TEMP_ON_REZ\tint (23)",                                        "contents": "OBJECT_TEMP_ON_REZ" },
                { "trigger": "OBJECT_TOTAL_SCRIPT_COUNT\tint (10)",                                 "contents": "OBJECT_TOTAL_SCRIPT_COUNT" },
                { "trigger": "OBJECT_UNKNOWN_DETAIL\tint (-1)",                                     "contents": "OBJECT_UNKNOWN_DETAIL" },
                { "trigger": "OBJECT_VELOCITY\tint (5)",                                            "contents": "OBJECT_VELOCITY" },
                { "trigger": "OPT_AVATAR\tint (1)",                                                 "contents": "OPT_AVATAR" },
                { "trigger": "OPT_CHARACTER\tint (2)",                                              "contents": "OPT_CHARACTER" },
                { "trigger": "OPT_EXCLUSION_VOLUME\tint (6)",                                       "contents": "OPT_EXCLUSION_VOLUME" },
                { "trigger": "OPT_LEGACY_LINKSET\tint (0)",                                         "contents": "OPT_LEGACY_LINKSET" },
                { "trigger": "OPT_MATERIAL_VOLUME\tint (5)",                                        "contents": "OPT_MATERIAL_VOLUME" },
                { "trigger": "OPT_OTHER\tint (-1)",                                                 "contents": "OPT_OTHER" },
                { "trigger": "OPT_STATIC_OBSTACLE\tint (4)",                                        "contents": "OPT_STATIC_OBSTACLE" },
                { "trigger": "OPT_WALKABLE\tint (3)",                                               "contents": "OPT_WALKABLE" },
                { "trigger": "PARCEL_COUNT_GROUP\tint (2)",                                         "contents": "PARCEL_COUNT_GROUP" },
                { "trigger": "PARCEL_COUNT_OTHER\tint (3)",                                         "contents": "PARCEL_COUNT_OTHER" },
                { "trigger": "PARCEL_COUNT_OWNER\tint (1)",                                         "contents": "PARCEL_COUNT_OWNER" },
                { "trigger": "PARCEL_COUNT_SELECTED\tint (4)",                                      "contents": "PARCEL_COUNT_SELECTED" },
                { "trigger": "PARCEL_COUNT_TEMP\tint (5)",                                          "contents": "PARCEL_COUNT_TEMP" },
                { "trigger": "PARCEL_COUNT_TOTAL\tint (0)",                                         "contents": "PARCEL_COUNT_TOTAL" },
                { "trigger": "PARCEL_DETAILS_AREA\tint (4)",                                        "contents": "PARCEL_DETAILS_AREA" },
                { "trigger": "PARCEL_DETAILS_DESC\tint (1)",                                        "contents": "PARCEL_DETAILS_DESC" },
                { "trigger": "PARCEL_DETAILS_GROUP\tint (3)",                                       "contents": "PARCEL_DETAILS_GROUP" },
                { "trigger": "PARCEL_DETAILS_ID\tint (5)",                                          "contents": "PARCEL_DETAILS_ID" },
                { "trigger": "PARCEL_DETAILS_NAME\tint (0)",                                        "contents": "PARCEL_DETAILS_NAME" },
                { "trigger": "PARCEL_DETAILS_OWNER\tint (2)",                                       "contents": "PARCEL_DETAILS_OWNER" },
                { "trigger": "PARCEL_DETAILS_SEE_AVATARS\tint (6)",                                 "contents": "PARCEL_DETAILS_SEE_AVATARS" },
                { "trigger": "PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY\tint (0x08000000 = 134217728)",    "contents": "PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY" },
                { "trigger": "PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS\tint (0x04000000 = 67108864)", "contents": "PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS" },
                { "trigger": "PARCEL_FLAG_ALLOW_CREATE_OBJECTS\tint (0x40 = 64)",                   "contents": "PARCEL_FLAG_ALLOW_CREATE_OBJECTS" },
                { "trigger": "PARCEL_FLAG_ALLOW_DAMAGE\tint (0x20 = 32)",                           "contents": "PARCEL_FLAG_ALLOW_DAMAGE" },
                { "trigger": "PARCEL_FLAG_ALLOW_FLY\tint (0x1 = 1)",                                "contents": "PARCEL_FLAG_ALLOW_FLY" },
                { "trigger": "PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY\tint (0x10000000 = 268435456)",  "contents": "PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY" },
                { "trigger": "PARCEL_FLAG_ALLOW_GROUP_SCRIPTS\tint (0x02000000 = 33554432)",        "contents": "PARCEL_FLAG_ALLOW_GROUP_SCRIPTS" },
                { "trigger": "PARCEL_FLAG_ALLOW_LANDMARK\tint (0x8 = 8)",                           "contents": "PARCEL_FLAG_ALLOW_LANDMARK" },
                { "trigger": "PARCEL_FLAG_ALLOW_SCRIPTS\tint (0x2 = 2)",                            "contents": "PARCEL_FLAG_ALLOW_SCRIPTS" },
                { "trigger": "PARCEL_FLAG_ALLOW_TERRAFORM\tint (0x10 = 16)",                        "contents": "PARCEL_FLAG_ALLOW_TERRAFORM" },
                { "trigger": "PARCEL_FLAG_LOCAL_SOUND_ONLY\tint (0x8000 = 32768)",                  "contents": "PARCEL_FLAG_LOCAL_SOUND_ONLY" },
                { "trigger": "PARCEL_FLAG_RESTRICT_PUSHOBJECT\tint (0x200000 = 2097152)",           "contents": "PARCEL_FLAG_RESTRICT_PUSHOBJECT" },
                { "trigger": "PARCEL_FLAG_USE_ACCESS_GROUP\tint (0x100 = 256)",                     "contents": "PARCEL_FLAG_USE_ACCESS_GROUP" },
                { "trigger": "PARCEL_FLAG_USE_ACCESS_LIST\tint (0x200 = 512)",                      "contents": "PARCEL_FLAG_USE_ACCESS_LIST" },
                { "trigger": "PARCEL_FLAG_USE_BAN_LIST\tint (0x400 = 1024)",                        "contents": "PARCEL_FLAG_USE_BAN_LIST" },
                { "trigger": "PARCEL_FLAG_USE_LAND_PASS_LIST\tint (0x800 = 2048)",                  "contents": "PARCEL_FLAG_USE_LAND_PASS_LIST" },
                { "trigger": "PARCEL_MEDIA_COMMAND_AGENT\tint (7)",                                 "contents": "PARCEL_MEDIA_COMMAND_AGENT" },
                { "trigger": "PARCEL_MEDIA_COMMAND_AUTO_ALIGN\tint (9)",                            "contents": "PARCEL_MEDIA_COMMAND_AUTO_ALIGN" },
                { "trigger": "PARCEL_MEDIA_COMMAND_DESC\tint (12)",                                 "contents": "PARCEL_MEDIA_COMMAND_DESC" },
                { "trigger": "PARCEL_MEDIA_COMMAND_LOOP\tint (3)",                                  "contents": "PARCEL_MEDIA_COMMAND_LOOP" },
                { "trigger": "PARCEL_MEDIA_COMMAND_LOOP_SET\tint (13)",                             "contents": "PARCEL_MEDIA_COMMAND_LOOP_SET" },
                { "trigger": "PARCEL_MEDIA_COMMAND_PAUSE\tint (1)",                                 "contents": "PARCEL_MEDIA_COMMAND_PAUSE" },
                { "trigger": "PARCEL_MEDIA_COMMAND_PLAY\tint (2)",                                  "contents": "PARCEL_MEDIA_COMMAND_PLAY" },
                { "trigger": "PARCEL_MEDIA_COMMAND_SIZE\tint (11)",                                 "contents": "PARCEL_MEDIA_COMMAND_SIZE" },
                { "trigger": "PARCEL_MEDIA_COMMAND_STOP\tint (0)",                                  "contents": "PARCEL_MEDIA_COMMAND_STOP" },
                { "trigger": "PARCEL_MEDIA_COMMAND_TEXTURE\tint (4)",                               "contents": "PARCEL_MEDIA_COMMAND_TEXTURE" },
                { "trigger": "PARCEL_MEDIA_COMMAND_TIME\tint (6)",                                  "contents": "PARCEL_MEDIA_COMMAND_TIME" },
                { "trigger": "PARCEL_MEDIA_COMMAND_TYPE\tint (10)",                                 "contents": "PARCEL_MEDIA_COMMAND_TYPE" },
                { "trigger": "PARCEL_MEDIA_COMMAND_UNLOAD\tint (8)",                                "contents": "PARCEL_MEDIA_COMMAND_UNLOAD" },
                { "trigger": "PARCEL_MEDIA_COMMAND_URL\tint (5)",                                   "contents": "PARCEL_MEDIA_COMMAND_URL" },
                { "trigger": "PASSIVE\tint (0x4 = 4)",                                              "contents": "PASSIVE" },
                { "trigger": "PATROL_PAUSE_AT_WAYPOINTS\tint (0)",                                  "contents": "PATROL_PAUSE_AT_WAYPOINTS" },
                { "trigger": "PAYMENT_INFO_ON_FILE\tint (1)",                                       "contents": "PAYMENT_INFO_ON_FILE" },
                { "trigger": "PAYMENT_INFO_USED\tint (2)",                                          "contents": "PAYMENT_INFO_USED" },
                { "trigger": "PAY_DEFAULT\tint (-2)",                                               "contents": "PAY_DEFAULT" },
                { "trigger": "PAY_HIDE\tint (-1)",                                                  "contents": "PAY_HIDE" },
                { "trigger": "PERMISSION_ATTACH\tint (0x20 = 32)",                                  "contents": "PERMISSION_ATTACH" },
                { "trigger": "PERMISSION_CHANGE_LINKS\tint (0x80 = 128)",                           "contents": "PERMISSION_CHANGE_LINKS" },
                { "trigger": "PERMISSION_CONTROL_CAMERA\tint (0x800 = 2048)",                       "contents": "PERMISSION_CONTROL_CAMERA" },
                { "trigger": "PERMISSION_DEBIT\tint (0x2 = 2)",                                     "contents": "PERMISSION_DEBIT" },
                { "trigger": "PERMISSION_OVERRIDE_ANIMATIONS\tint (0x8000 = 32768)",                "contents": "PERMISSION_OVERRIDE_ANIMATIONS" },
                { "trigger": "PERMISSION_RETURN_OBJECTS\tint (0x10000 = 65536)",                    "contents": "PERMISSION_RETURN_OBJECTS" },
                { "trigger": "PERMISSION_SILENT_ESTATE_MANAGEMENT\tint (0x4000 = 16384)",           "contents": "PERMISSION_SILENT_ESTATE_MANAGEMENT" },
                { "trigger": "PERMISSION_TAKE_CONTROLS\tint (0x4 = 4)",                             "contents": "PERMISSION_TAKE_CONTROLS" },
                { "trigger": "PERMISSION_TELEPORT\tint (0x1000 = 4096)",                            "contents": "PERMISSION_TELEPORT" },
                { "trigger": "PERMISSION_TRACK_CAMERA\tint (0x400 = 1024)",                         "contents": "PERMISSION_TRACK_CAMERA" },
                { "trigger": "PERMISSION_TRIGGER_ANIMATION\tint (0x10 = 16)",                       "contents": "PERMISSION_TRIGGER_ANIMATION" },
                { "trigger": "PERM_ALL\tint (0x7FFFFFFF = 2147483647)",                             "contents": "PERM_ALL" },
                { "trigger": "PERM_COPY\tint (0x8000 = 32768)",                                     "contents": "PERM_COPY" },
                { "trigger": "PERM_MODIFY\tint (0x4000 = 16384)",                                   "contents": "PERM_MODIFY" },
                { "trigger": "PERM_MOVE\tint (0x80000 = 524288)",                                   "contents": "PERM_MOVE" },
                { "trigger": "PERM_TRANSFER\tint (0x2000 = 8192)",                                  "contents": "PERM_TRANSFER" },
                { "trigger": "PING_PONG\tint (0x8 = 8)",                                            "contents": "PING_PONG" },
                { "trigger": "PRIM_ALPHA_MODE\tint (38)",                                           "contents": "PRIM_ALPHA_MODE" },
                { "trigger": "PRIM_ALPHA_MODE_BLEND\tint (1)",                                      "contents": "PRIM_ALPHA_MODE_BLEND" },
                { "trigger": "PRIM_ALPHA_MODE_EMISSIVE\tint (3)",                                   "contents": "PRIM_ALPHA_MODE_EMISSIVE" },
                { "trigger": "PRIM_ALPHA_MODE_MASK\tint (2)",                                       "contents": "PRIM_ALPHA_MODE_MASK" },
                { "trigger": "PRIM_ALPHA_MODE_NONE\tint (0)",                                       "contents": "PRIM_ALPHA_MODE_NONE" },
                { "trigger": "PRIM_BUMP_BARK\tint (4)",                                             "contents": "PRIM_BUMP_BARK" },
                { "trigger": "PRIM_BUMP_BLOBS\tint (12)",                                           "contents": "PRIM_BUMP_BLOBS" },
                { "trigger": "PRIM_BUMP_BRICKS\tint (5)",                                           "contents": "PRIM_BUMP_BRICKS" },
                { "trigger": "PRIM_BUMP_BRIGHT\tint (1)",                                           "contents": "PRIM_BUMP_BRIGHT" },
                { "trigger": "PRIM_BUMP_CHECKER\tint (6)",                                          "contents": "PRIM_BUMP_CHECKER" },
                { "trigger": "PRIM_BUMP_CONCRETE\tint (7)",                                         "contents": "PRIM_BUMP_CONCRETE" },
                { "trigger": "PRIM_BUMP_DARK\tint (2)",                                             "contents": "PRIM_BUMP_DARK" },
                { "trigger": "PRIM_BUMP_DISKS\tint (10)",                                           "contents": "PRIM_BUMP_DISKS" },
                { "trigger": "PRIM_BUMP_GRAVEL\tint (11)",                                          "contents": "PRIM_BUMP_GRAVEL" },
                { "trigger": "PRIM_BUMP_LARGETILE\tint (14)",                                       "contents": "PRIM_BUMP_LARGETILE" },
                { "trigger": "PRIM_BUMP_NONE\tint (0)",                                             "contents": "PRIM_BUMP_NONE" },
                { "trigger": "PRIM_BUMP_SHINY\tint (19)",                                           "contents": "PRIM_BUMP_SHINY" },
                { "trigger": "PRIM_BUMP_SIDING\tint (13)",                                          "contents": "PRIM_BUMP_SIDING" },
                { "trigger": "PRIM_BUMP_STONE\tint (9)",                                            "contents": "PRIM_BUMP_STONE" },
                { "trigger": "PRIM_BUMP_STUCCO\tint (15)",                                          "contents": "PRIM_BUMP_STUCCO" },
                { "trigger": "PRIM_BUMP_SUCTION\tint (16)",                                         "contents": "PRIM_BUMP_SUCTION" },
                { "trigger": "PRIM_BUMP_TILE\tint (8)",                                             "contents": "PRIM_BUMP_TILE" },
                { "trigger": "PRIM_BUMP_WEAVE\tint (17)",                                           "contents": "PRIM_BUMP_WEAVE" },
                { "trigger": "PRIM_BUMP_WOOD\tint (3)",                                             "contents": "PRIM_BUMP_WOOD" },
                { "trigger": "PRIM_COLOR\tint (18)",                                                "contents": "PRIM_COLOR" },
                { "trigger": "PRIM_DESC\tint (28)",                                                 "contents": "PRIM_DESC" },
                { "trigger": "PRIM_FLEXIBLE\tint (21)",                                             "contents": "PRIM_FLEXIBLE" },
                { "trigger": "PRIM_FULLBRIGHT\tint (20)",                                           "contents": "PRIM_FULLBRIGHT" },
                { "trigger": "PRIM_GLOW\tint (25)",                                                 "contents": "PRIM_GLOW" },
                { "trigger": "PRIM_HOLE_CIRCLE\tint (0x10 = 16)",                                   "contents": "PRIM_HOLE_CIRCLE" },
                { "trigger": "PRIM_HOLE_DEFAULT\tint (0)",                                          "contents": "PRIM_HOLE_DEFAULT" },
                { "trigger": "PRIM_HOLE_SQUARE\tint (0x20 = 32)",                                   "contents": "PRIM_HOLE_SQUARE" },
                { "trigger": "PRIM_HOLE_TRIANGLE\tint (0x30 = 48)",                                 "contents": "PRIM_HOLE_TRIANGLE" },
                { "trigger": "PRIM_LINK_TARGET\tint (34)",                                          "contents": "PRIM_LINK_TARGET" },
                { "trigger": "PRIM_MATERIAL\tint (2)",                                              "contents": "PRIM_MATERIAL" },
                { "trigger": "PRIM_MATERIAL_FLESH\tint (4)",                                        "contents": "PRIM_MATERIAL_FLESH" },
                { "trigger": "PRIM_MATERIAL_GLASS\tint (2)",                                        "contents": "PRIM_MATERIAL_GLASS" },
                { "trigger": "PRIM_MATERIAL_METAL\tint (1)",                                        "contents": "PRIM_MATERIAL_METAL" },
                { "trigger": "PRIM_MATERIAL_PLASTIC\tint (5)",                                      "contents": "PRIM_MATERIAL_PLASTIC" },
                { "trigger": "PRIM_MATERIAL_RUBBER\tint (6)",                                       "contents": "PRIM_MATERIAL_RUBBER" },
                { "trigger": "PRIM_MATERIAL_STONE\tint (0)",                                        "contents": "PRIM_MATERIAL_STONE" },
                { "trigger": "PRIM_MATERIAL_WOOD\tint (3)",                                         "contents": "PRIM_MATERIAL_WOOD" },
                { "trigger": "PRIM_MEDIA_ALT_IMAGE_ENABLE\tint (0)",                                "contents": "PRIM_MEDIA_ALT_IMAGE_ENABLE" },
                { "trigger": "PRIM_MEDIA_AUTO_LOOP\tint (4)",                                       "contents": "PRIM_MEDIA_AUTO_LOOP" },
                { "trigger": "PRIM_MEDIA_AUTO_PLAY\tint (5)",                                       "contents": "PRIM_MEDIA_AUTO_PLAY" },
                { "trigger": "PRIM_MEDIA_AUTO_SCALE\tint (6)",                                      "contents": "PRIM_MEDIA_AUTO_SCALE" },
                { "trigger": "PRIM_MEDIA_AUTO_ZOOM\tint (7)",                                       "contents": "PRIM_MEDIA_AUTO_ZOOM" },
                { "trigger": "PRIM_MEDIA_CONTROLS\tint (1)",                                        "contents": "PRIM_MEDIA_CONTROLS" },
                { "trigger": "PRIM_MEDIA_CONTROLS_MINI\tint (1)",                                   "contents": "PRIM_MEDIA_CONTROLS_MINI" },
                { "trigger": "PRIM_MEDIA_CONTROLS_STANDARD\tint (0)",                               "contents": "PRIM_MEDIA_CONTROLS_STANDARD" },
                { "trigger": "PRIM_MEDIA_CURRENT_URL\tint (2)",                                     "contents": "PRIM_MEDIA_CURRENT_URL" },
                { "trigger": "PRIM_MEDIA_FIRST_CLICK_INTERACT\tint (8)",                            "contents": "PRIM_MEDIA_FIRST_CLICK_INTERACT" },
                { "trigger": "PRIM_MEDIA_HEIGHT_PIXELS\tint (10)",                                  "contents": "PRIM_MEDIA_HEIGHT_PIXELS" },
                { "trigger": "PRIM_MEDIA_HOME_URL\tint (2)",                                        "contents": "PRIM_MEDIA_HOME_URL" },
                { "trigger": "PRIM_MEDIA_MAX_HEIGHT_PIXELS\tint (2048)",                            "contents": "PRIM_MEDIA_MAX_HEIGHT_PIXELS" },
                { "trigger": "PRIM_MEDIA_MAX_URL_LENGTH\tint (1024)",                               "contents": "PRIM_MEDIA_MAX_URL_LENGTH" },
                { "trigger": "PRIM_MEDIA_MAX_WHITELIST_COUNT\tint (64)",                            "contents": "PRIM_MEDIA_MAX_WHITELIST_COUNT" },
                { "trigger": "PRIM_MEDIA_MAX_WHITELIST_SIZE\tint (1024)",                           "contents": "PRIM_MEDIA_MAX_WHITELIST_SIZE" },
                { "trigger": "PRIM_MEDIA_MAX_WIDTH_PIXELS\tint (2048)",                             "contents": "PRIM_MEDIA_MAX_WIDTH_PIXELS" },
                { "trigger": "PRIM_MEDIA_PARAM_MAX\tint (14)",                                      "contents": "PRIM_MEDIA_PARAM_MAX" },
                { "trigger": "PRIM_MEDIA_PERMS_CONTROL\tint (14)",                                  "contents": "PRIM_MEDIA_PERMS_CONTROL" },
                { "trigger": "PRIM_MEDIA_PERMS_INTERACT\tint (13)",                                 "contents": "PRIM_MEDIA_PERMS_INTERACT" },
                { "trigger": "PRIM_MEDIA_PERM_ANYONE\tint (0x4 = 4)",                               "contents": "PRIM_MEDIA_PERM_ANYONE" },
                { "trigger": "PRIM_MEDIA_PERM_GROUP\tint (0x2 = 2)",                                "contents": "PRIM_MEDIA_PERM_GROUP" },
                { "trigger": "PRIM_MEDIA_PERM_NONE\tint (0x0 = 0)",                                 "contents": "PRIM_MEDIA_PERM_NONE" },
                { "trigger": "PRIM_MEDIA_PERM_OWNER\tint (0x1 = 1)",                                "contents": "PRIM_MEDIA_PERM_OWNER" },
                { "trigger": "PRIM_MEDIA_WHITELIST\tint (12)",                                      "contents": "PRIM_MEDIA_WHITELIST" },
                { "trigger": "PRIM_MEDIA_WHITELIST_ENABLE\tint (11)",                               "contents": "PRIM_MEDIA_WHITELIST_ENABLE" },
                { "trigger": "PRIM_MEDIA_WIDTH_PIXELS\tint (9)",                                    "contents": "PRIM_MEDIA_WIDTH_PIXELS" },
                { "trigger": "PRIM_NAME\tint (27)",                                                 "contents": "PRIM_NAME" },
                { "trigger": "PRIM_NORMAL\tint (37)",                                               "contents": "PRIM_NORMAL" },
                { "trigger": "PRIM_OMEGA\tint (32)",                                                "contents": "PRIM_OMEGA" },
                { "trigger": "PRIM_PHANTOM\tint (5)",                                               "contents": "PRIM_PHANTOM" },
                { "trigger": "PRIM_PHYSICS\tint (3)",                                               "contents": "PRIM_PHYSICS" },
                { "trigger": "PRIM_PHYSICS_SHAPE_CONVEX\tint (2)",                                  "contents": "PRIM_PHYSICS_SHAPE_CONVEX" },
                { "trigger": "PRIM_PHYSICS_SHAPE_NONE\tint (1)",                                    "contents": "PRIM_PHYSICS_SHAPE_NONE" },
                { "trigger": "PRIM_PHYSICS_SHAPE_PRIM\tint (0)",                                    "contents": "PRIM_PHYSICS_SHAPE_PRIM" },
                { "trigger": "PRIM_PHYSICS_SHAPE_TYPE\tint (30)",                                   "contents": "PRIM_PHYSICS_SHAPE_TYPE" },
                { "trigger": "PRIM_POINT_LIGHT\tint (23)",                                          "contents": "PRIM_POINT_LIGHT" },
                { "trigger": "PRIM_POSITION\tint (6)",                                              "contents": "PRIM_POSITION" },
                { "trigger": "PRIM_POS_LOCAL\tint (33)",                                            "contents": "PRIM_POS_LOCAL" },
                { "trigger": "PRIM_ROTATION\tint (8)",                                              "contents": "PRIM_ROTATION" },
                { "trigger": "PRIM_ROT_LOCAL\tint (29)",                                            "contents": "PRIM_ROT_LOCAL" },
                { "trigger": "PRIM_SCULPT_FLAG_INVERT\tint (0x40 = 64)",                            "contents": "PRIM_SCULPT_FLAG_INVERT" },
                { "trigger": "PRIM_SCULPT_FLAG_MIRROR\tint (0x80 = 128)",                           "contents": "PRIM_SCULPT_FLAG_MIRROR" },
                { "trigger": "PRIM_SCULPT_TYPE_CYLINDER\tint (4)",                                  "contents": "PRIM_SCULPT_TYPE_CYLINDER" },
                { "trigger": "PRIM_SCULPT_TYPE_MASK\tint (7)",                                      "contents": "PRIM_SCULPT_TYPE_MASK" },
                { "trigger": "PRIM_SCULPT_TYPE_PLANE\tint (3)",                                     "contents": "PRIM_SCULPT_TYPE_PLANE" },
                { "trigger": "PRIM_SCULPT_TYPE_SPHERE\tint (1)",                                    "contents": "PRIM_SCULPT_TYPE_SPHERE" },
                { "trigger": "PRIM_SCULPT_TYPE_TORUS\tint (2)",                                     "contents": "PRIM_SCULPT_TYPE_TORUS" },
                { "trigger": "PRIM_SHINY_HIGH\tint (3)",                                            "contents": "PRIM_SHINY_HIGH" },
                { "trigger": "PRIM_SHINY_LOW\tint (1)",                                             "contents": "PRIM_SHINY_LOW" },
                { "trigger": "PRIM_SHINY_MEDIUM\tint (2)",                                          "contents": "PRIM_SHINY_MEDIUM" },
                { "trigger": "PRIM_SHINY_NONE\tint (0)",                                            "contents": "PRIM_SHINY_NONE" },
                { "trigger": "PRIM_SIZE\tint (7)",                                                  "contents": "PRIM_SIZE" },
                { "trigger": "PRIM_SLICE\tint (35)",                                                "contents": "PRIM_SLICE" },
                { "trigger": "PRIM_SPECULAR\tint (36)",                                             "contents": "PRIM_SPECULAR" },
                { "trigger": "PRIM_TEMP_ON_REZ\tint (4)",                                           "contents": "PRIM_TEMP_ON_REZ" },
                { "trigger": "PRIM_TEXGEN\tint (22)",                                               "contents": "PRIM_TEXGEN" },
                { "trigger": "PRIM_TEXGEN_DEFAULT\tint (0)",                                        "contents": "PRIM_TEXGEN_DEFAULT" },
                { "trigger": "PRIM_TEXGEN_PLANAR\tint (1)",                                         "contents": "PRIM_TEXGEN_PLANAR" },
                { "trigger": "PRIM_TEXT\tint (26)",                                                 "contents": "PRIM_TEXT" },
                { "trigger": "PRIM_TEXTURE\tint (17)",                                              "contents": "PRIM_TEXTURE" },
                { "trigger": "PRIM_TYPE\tint (9)",                                                  "contents": "PRIM_TYPE" },
                { "trigger": "PRIM_TYPE_BOX\tint (0)",                                              "contents": "PRIM_TYPE_BOX" },
                { "trigger": "PRIM_TYPE_CYLINDER\tint (1)",                                         "contents": "PRIM_TYPE_CYLINDER" },
                { "trigger": "PRIM_TYPE_PRISM\tint (2)",                                            "contents": "PRIM_TYPE_PRISM" },
                { "trigger": "PRIM_TYPE_RING\tint (6)",                                             "contents": "PRIM_TYPE_RING" },
                { "trigger": "PRIM_TYPE_SCULPT\tint (7)",                                           "contents": "PRIM_TYPE_SCULPT" },
                { "trigger": "PRIM_TYPE_SPHERE\tint (3)",                                           "contents": "PRIM_TYPE_SPHERE" },
                { "trigger": "PRIM_TYPE_TORUS\tint (4)",                                            "contents": "PRIM_TYPE_TORUS" },
                { "trigger": "PRIM_TYPE_TUBE\tint (5)",                                             "contents": "PRIM_TYPE_TUBE" },
                { "trigger": "PROFILE_NONE\tint (0)",                                               "contents": "PROFILE_NONE" },
                { "trigger": "PROFILE_SCRIPT_MEMORY\tint (1)",                                      "contents": "PROFILE_SCRIPT_MEMORY" },
                { "trigger": "PSYS_PART_BF_DEST_COLOR\tint (2)",                                    "contents": "PSYS_PART_BF_DEST_COLOR" },
                { "trigger": "PSYS_PART_BF_ONE\tint (0)",                                           "contents": "PSYS_PART_BF_ONE" },
                { "trigger": "PSYS_PART_BF_ONE_MINUS_DEST_COLOR\tint (4)",                          "contents": "PSYS_PART_BF_ONE_MINUS_DEST_COLOR" },
                { "trigger": "PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA\tint (9)",                        "contents": "PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA" },
                { "trigger": "PSYS_PART_BF_ONE_MINUS_SOURCE_COLOR\tint (5)",                        "contents": "PSYS_PART_BF_ONE_MINUS_SOURCE_COLOR" },
                { "trigger": "PSYS_PART_BF_SOURCE_ALPHA\tint (7)",                                  "contents": "PSYS_PART_BF_SOURCE_ALPHA" },
                { "trigger": "PSYS_PART_BF_SOURCE_COLOR\tint (3)",                                  "contents": "PSYS_PART_BF_SOURCE_COLOR" },
                { "trigger": "PSYS_PART_BF_ZERO\tint (1)",                                          "contents": "PSYS_PART_BF_ZERO" },
                { "trigger": "PSYS_PART_BLEND_FUNC_DEST\tint (25)",                                 "contents": "PSYS_PART_BLEND_FUNC_DEST" },
                { "trigger": "PSYS_PART_BLEND_FUNC_SOURCE\tint (24)",                               "contents": "PSYS_PART_BLEND_FUNC_SOURCE" },
                { "trigger": "PSYS_PART_BOUNCE_MASK\tint (0x4 = 4)",                                "contents": "PSYS_PART_BOUNCE_MASK" },
                { "trigger": "PSYS_PART_EMISSIVE_MASK\tint (0x100 = 256)",                          "contents": "PSYS_PART_EMISSIVE_MASK" },
                { "trigger": "PSYS_PART_END_ALPHA\tint (4)",                                        "contents": "PSYS_PART_END_ALPHA" },
                { "trigger": "PSYS_PART_END_COLOR\tint (3)",                                        "contents": "PSYS_PART_END_COLOR" },
                { "trigger": "PSYS_PART_END_GLOW\tint (27)",                                        "contents": "PSYS_PART_END_GLOW" },
                { "trigger": "PSYS_PART_END_SCALE\tint (6)",                                        "contents": "PSYS_PART_END_SCALE" },
                { "trigger": "PSYS_PART_FLAGS\tint (0)",                                            "contents": "PSYS_PART_FLAGS" },
                { "trigger": "PSYS_PART_FOLLOW_SRC_MASK\tint (0x10 = 16)",                          "contents": "PSYS_PART_FOLLOW_SRC_MASK" },
                { "trigger": "PSYS_PART_FOLLOW_VELOCITY_MASK\tint (0x20 = 32)",                     "contents": "PSYS_PART_FOLLOW_VELOCITY_MASK" },
                { "trigger": "PSYS_PART_INTERP_COLOR_MASK\tint (0x1 = 1)",                          "contents": "PSYS_PART_INTERP_COLOR_MASK" },
                { "trigger": "PSYS_PART_INTERP_SCALE_MASK\tint (0x2 = 2)",                          "contents": "PSYS_PART_INTERP_SCALE_MASK" },
                { "trigger": "PSYS_PART_MAX_AGE\tint (7)",                                          "contents": "PSYS_PART_MAX_AGE" },
                { "trigger": "PSYS_PART_RIBBON_MASK\tint (0x400 = 1024)",                           "contents": "PSYS_PART_RIBBON_MASK" },
                { "trigger": "PSYS_PART_START_ALPHA\tint (2)",                                      "contents": "PSYS_PART_START_ALPHA" },
                { "trigger": "PSYS_PART_START_COLOR\tint (1)",                                      "contents": "PSYS_PART_START_COLOR" },
                { "trigger": "PSYS_PART_START_GLOW\tint (26)",                                      "contents": "PSYS_PART_START_GLOW" },
                { "trigger": "PSYS_PART_START_SCALE\tint (5)",                                      "contents": "PSYS_PART_START_SCALE" },
                { "trigger": "PSYS_PART_TARGET_LINEAR_MASK\tint (0x80 = 128)",                      "contents": "PSYS_PART_TARGET_LINEAR_MASK" },
                { "trigger": "PSYS_PART_TARGET_POS_MASK\tint (0x40 = 64)",                          "contents": "PSYS_PART_TARGET_POS_MASK" },
                { "trigger": "PSYS_PART_WIND_MASK\tint (0x8 = 8)",                                  "contents": "PSYS_PART_WIND_MASK" },
                { "trigger": "PSYS_SRC_ACCEL\tint (8)",                                             "contents": "PSYS_SRC_ACCEL" },
                { "trigger": "PSYS_SRC_ANGLE_BEGIN\tint (22)",                                      "contents": "PSYS_SRC_ANGLE_BEGIN" },
                { "trigger": "PSYS_SRC_ANGLE_END\tint (23)",                                        "contents": "PSYS_SRC_ANGLE_END" },
                { "trigger": "PSYS_SRC_BURST_PART_COUNT\tint (15)",                                 "contents": "PSYS_SRC_BURST_PART_COUNT" },
                { "trigger": "PSYS_SRC_BURST_RADIUS\tint (16)",                                     "contents": "PSYS_SRC_BURST_RADIUS" },
                { "trigger": "PSYS_SRC_BURST_RATE\tint (13)",                                       "contents": "PSYS_SRC_BURST_RATE" },
                { "trigger": "PSYS_SRC_BURST_SPEED_MAX\tint (18)",                                  "contents": "PSYS_SRC_BURST_SPEED_MAX" },
                { "trigger": "PSYS_SRC_BURST_SPEED_MIN\tint (17)",                                  "contents": "PSYS_SRC_BURST_SPEED_MIN" },
                { "trigger": "PSYS_SRC_MAX_AGE\tint (19)",                                          "contents": "PSYS_SRC_MAX_AGE" },
                { "trigger": "PSYS_SRC_OMEGA\tint (21)",                                            "contents": "PSYS_SRC_OMEGA" },
                { "trigger": "PSYS_SRC_PATTERN\tint (9)",                                           "contents": "PSYS_SRC_PATTERN" },
                { "trigger": "PSYS_SRC_PATTERN_ANGLE\tint (4)",                                     "contents": "PSYS_SRC_PATTERN_ANGLE" },
                { "trigger": "PSYS_SRC_PATTERN_ANGLE_CONE\tint (8)",                                "contents": "PSYS_SRC_PATTERN_ANGLE_CONE" },
                { "trigger": "PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY\tint (16)",                         "contents": "PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY" },
                { "trigger": "PSYS_SRC_PATTERN_DROP\tint (1)",                                      "contents": "PSYS_SRC_PATTERN_DROP" },
                { "trigger": "PSYS_SRC_PATTERN_EXPLODE\tint (2)",                                   "contents": "PSYS_SRC_PATTERN_EXPLODE" },
                { "trigger": "PSYS_SRC_TARGET_KEY\tint (20)",                                       "contents": "PSYS_SRC_TARGET_KEY" },
                { "trigger": "PSYS_SRC_TEXTURE\tint (12)",                                          "contents": "PSYS_SRC_TEXTURE" },
                { "trigger": "PUBLIC_CHANNEL\tint (0)",                                             "contents": "PUBLIC_CHANNEL" },
                { "trigger": "PURSUIT_FUZZ_FACTOR\tint (3)",                                        "contents": "PURSUIT_FUZZ_FACTOR" },
                { "trigger": "PURSUIT_GOAL_TOLERANCE\tint (5)",                                     "contents": "PURSUIT_GOAL_TOLERANCE" },
                { "trigger": "PURSUIT_INTERCEPT\tint (4)",                                          "contents": "PURSUIT_INTERCEPT" },
                { "trigger": "PURSUIT_OFFSET\tint (1)",                                             "contents": "PURSUIT_OFFSET" },
                { "trigger": "PU_EVADE_HIDDEN\tint (7)",                                            "contents": "PU_EVADE_HIDDEN" },
                { "trigger": "PU_EVADE_SPOTTED\tint (8)",                                           "contents": "PU_EVADE_SPOTTED" },
                { "trigger": "PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED\tint (0xA = 10)",             "contents": "PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED" },
                { "trigger": "PU_FAILURE_INVALID_GOAL\tint (0x3 = 3)",                              "contents": "PU_FAILURE_INVALID_GOAL" },
                { "trigger": "PU_FAILURE_INVALID_START\tint (2)",                                   "contents": "PU_FAILURE_INVALID_START" },
                { "trigger": "PU_FAILURE_NO_NAVMESH\tint (9)",                                      "contents": "PU_FAILURE_NO_NAVMESH" },
                { "trigger": "PU_FAILURE_NO_VALID_DESTINATION\tint (6)",                            "contents": "PU_FAILURE_NO_VALID_DESTINATION" },
                { "trigger": "PU_FAILURE_OTHER\tint (1000000)",                                     "contents": "PU_FAILURE_OTHER" },
                { "trigger": "PU_FAILURE_PARCEL_UNREACHABLE\tint (11)",                             "contents": "PU_FAILURE_PARCEL_UNREACHABLE" },
                { "trigger": "PU_FAILURE_TARGET_GONE\tint (5)",                                     "contents": "PU_FAILURE_TARGET_GONE" },
                { "trigger": "PU_FAILURE_UNREACHABLE\tint (4)",                                     "contents": "PU_FAILURE_UNREACHABLE" },
                { "trigger": "PU_GOAL_REACHED\tint (1)",                                            "contents": "PU_GOAL_REACHED" },
                { "trigger": "PU_SLOWDOWN_DISTANCE_REACHED\tint (0)",                               "contents": "PU_SLOWDOWN_DISTANCE_REACHED" },
                { "trigger": "RCERR_CAST_TIME_EXCEEDED\tint (-3)",                                  "contents": "RCERR_CAST_TIME_EXCEEDED" },
                { "trigger": "RCERR_SIM_PERF_LOW\tint (-2)",                                        "contents": "RCERR_SIM_PERF_LOW" },
                { "trigger": "RCERR_UNKNOWN\tint (-1)",                                             "contents": "RCERR_UNKNOWN" },
                { "trigger": "RC_DATA_FLAGS\tint (2)",                                              "contents": "RC_DATA_FLAGS, ${1:integer flags}, $0" },
                { "trigger": "RC_DETECT_PHANTOM\tint (1)",                                          "contents": "RC_DETECT_PHANTOM, ${1:integer dectedPhantom}, $0" },
                { "trigger": "RC_GET_LINK_NUM\tint (0x4 = 4)",                                      "contents": "RC_GET_LINK_NUM" },
                { "trigger": "RC_GET_NORMAL\tint (0x1 = 1)",                                        "contents": "RC_GET_NORMAL" },
                { "trigger": "RC_GET_ROOT_KEY\tint (0x2 = 2)",                                      "contents": "RC_GET_ROOT_KEY" },
                { "trigger": "RC_MAX_HITS\tint (3)",                                                "contents": "RC_MAX_HITS, ${1:integer maxHits}, $0" },
                { "trigger": "RC_REJECT_AGENTS\tint (0x1 = 1)",                                     "contents": "RC_REJECT_AGENTS" },
                { "trigger": "RC_REJECT_LAND\tint (0x8 = 8)",                                       "contents": "RC_REJECT_LAND" },
                { "trigger": "RC_REJECT_NONPHYSICAL\tint (0x4 = 4)",                                "contents": "RC_REJECT_NONPHYSICAL" },
                { "trigger": "RC_REJECT_PHYSICAL\tint (0x2 = 2)",                                   "contents": "RC_REJECT_PHYSICAL" },
                { "trigger": "RC_REJECT_TYPES\tint (0)",                                            "contents": "RC_REJECT_TYPES, ${1:integer filterMask}, $0" },
                { "trigger": "REGION_FLAG_ALLOW_DAMAGE\tint (0x1 = 1)",                             "contents": "REGION_FLAG_ALLOW_DAMAGE" },
                { "trigger": "REGION_FLAG_ALLOW_DIRECT_TELEPORT\tint (0x100000 = 1048576)",         "contents": "REGION_FLAG_ALLOW_DIRECT_TELEPORT" },
                { "trigger": "REGION_FLAG_BLOCK_FLY\tint (0x80000 = 524288)",                       "contents": "REGION_FLAG_BLOCK_FLY" },
                { "trigger": "REGION_FLAG_BLOCK_TERRAFORM\tint (0x40 = 64)",                        "contents": "REGION_FLAG_BLOCK_TERRAFORM" },
                { "trigger": "REGION_FLAG_DISABLE_COLLISIONS\tint (0x1000 = 4096)",                 "contents": "REGION_FLAG_DISABLE_COLLISIONS" },
                { "trigger": "REGION_FLAG_DISABLE_PHYSICS\tint (0x4000 = 16384)",                   "contents": "REGION_FLAG_DISABLE_PHYSICS" },
                { "trigger": "REGION_FLAG_FIXED_SUN\tint (0x10 = 16)",                              "contents": "REGION_FLAG_FIXED_SUN" },
                { "trigger": "REGION_FLAG_RESTRICT_PUSHOBJECT\tint (0x400000 = 4194304)",           "contents": "REGION_FLAG_RESTRICT_PUSHOBJECT" },
                { "trigger": "REGION_FLAG_SANDBOX\tint (0x100 = 256)",                              "contents": "REGION_FLAG_SANDBOX" },
                { "trigger": "REMOTE_DATA_CHANNEL\tint (1)",                                        "contents": "REMOTE_DATA_CHANNEL" },
                { "trigger": "REMOTE_DATA_REPLY\tint (3)",                                          "contents": "REMOTE_DATA_REPLY" },
                { "trigger": "REMOTE_DATA_REQUEST\tint (2)",                                        "contents": "REMOTE_DATA_REQUEST" },
                { "trigger": "REQUIRE_LINE_OF_SIGHT\tint (2)",                                      "contents": "REQUIRE_LINE_OF_SIGHT" },
                { "trigger": "RESTITUTION\tint (0x4 = 4)",                                          "contents": "RESTITUTION" },
                { "trigger": "REVERSE\tint (0x4 = 4)",                                              "contents": "REVERSE" },
                { "trigger": "ROTATE\tint (0x20 = 32)",                                             "contents": "ROTATE" },
                { "trigger": "SCALE\tint (0x40 = 64)",                                              "contents": "SCALE" },
                { "trigger": "SCRIPTED\tint (0x8 = 8)",                                             "contents": "SCRIPTED" },
                { "trigger": "SIM_STAT_PCT_CHARS_STEPPED\tint (0)",                                 "contents": "SIM_STAT_PCT_CHARS_STEPPED" },
                { "trigger": "SMOOTH\tint (0x10 = 16)",                                             "contents": "SMOOTH" },
                { "trigger": "STATUS_BLOCK_GRAB\tint (0x40 = 64)",                                  "contents": "STATUS_BLOCK_GRAB" },
                { "trigger": "STATUS_BLOCK_GRAB_OBJECT\tint (0x400 = 1024)",                        "contents": "STATUS_BLOCK_GRAB_OBJECT" },
                { "trigger": "STATUS_BOUNDS_ERROR\tint (1002)",                                     "contents": "STATUS_BOUNDS_ERROR" },
                { "trigger": "STATUS_CAST_SHADOWS\tint (0x200 = 512)",                              "contents": "STATUS_CAST_SHADOWS" },
                { "trigger": "STATUS_DIE_AT_EDGE\tint (0x80 = 128)",                                "contents": "STATUS_DIE_AT_EDGE" },
                { "trigger": "STATUS_INTERNAL_ERROR\tint (1999)",                                   "contents": "STATUS_INTERNAL_ERROR" },
                { "trigger": "STATUS_MALFORMED_PARAMS\tint (1000)",                                 "contents": "STATUS_MALFORMED_PARAMS" },
                { "trigger": "STATUS_NOT_FOUND\tint (1003)",                                        "contents": "STATUS_NOT_FOUND" },
                { "trigger": "STATUS_NOT_SUPPORTED\tint (1004)",                                    "contents": "STATUS_NOT_SUPPORTED" },
                { "trigger": "STATUS_OK\tint (0)",                                                  "contents": "STATUS_OK" },
                { "trigger": "STATUS_PHANTOM\tint (0x10 = 16)",                                     "contents": "STATUS_PHANTOM" },
                { "trigger": "STATUS_PHYSICS\tint (0x1 = 1)",                                       "contents": "STATUS_PHYSICS" },
                { "trigger": "STATUS_RETURN_AT_EDGE\tint (0x100 = 256)",                            "contents": "STATUS_RETURN_AT_EDGE" },
                { "trigger": "STATUS_ROTATE_X\tint (0x2 = 2)",                                      "contents": "STATUS_ROTATE_X" },
                { "trigger": "STATUS_ROTATE_Y\tint (0x4 = 4)",                                      "contents": "STATUS_ROTATE_Y" },
                { "trigger": "STATUS_ROTATE_Z\tint (0x8 = 8)",                                      "contents": "STATUS_ROTATE_Z" },
                { "trigger": "STATUS_SANDBOX\tint (0x20 = 32)",                                     "contents": "STATUS_SANDBOX" },
                { "trigger": "STATUS_TYPE_MISMATCH\tint (1001)",                                    "contents": "STATUS_TYPE_MISMATCH" },
                { "trigger": "STATUS_WHITELIST_FAILED\tint (2001)",                                 "contents": "STATUS_WHITELIST_FAILED" },
                { "trigger": "STRING_TRIM\tint (3)",                                                "contents": "STRING_TRIM" },
                { "trigger": "STRING_TRIM_HEAD\tint (1)",                                           "contents": "STRING_TRIM_HEAD" },
                { "trigger": "STRING_TRIM_TAIL\tint (2)",                                           "contents": "STRING_TRIM_TAIL" },
                { "trigger": "TOUCH_INVALID_FACE\tint (-1)",                                        "contents": "TOUCH_INVALID_FACE" },
                { "trigger": "TRAVERSAL_TYPE\tint (7)",                                             "contents": "TRAVERSAL_TYPE" },
                { "trigger": "TRAVERSAL_TYPE_FAST\tint (1)",                                        "contents": "TRAVERSAL_TYPE_FAST" },
                { "trigger": "TRAVERSAL_TYPE_NONE\tint (2)",                                        "contents": "TRAVERSAL_TYPE_NONE" },
                { "trigger": "TRAVERSAL_TYPE_SLOW\tint (0)",                                        "contents": "TRAVERSAL_TYPE_SLOW" },
                { "trigger": "TYPE_FLOAT\tint (2)",                                                 "contents": "TYPE_FLOAT" },
                { "trigger": "TYPE_INTEGER\tint (1)",                                               "contents": "TYPE_INTEGER" },
                { "trigger": "TYPE_INVALID\tint (0)",                                               "contents": "TYPE_INVALID" },
                { "trigger": "TYPE_KEY\tint (4)",                                                   "contents": "TYPE_KEY" },
                { "trigger": "TYPE_ROTATION\tint (6)",                                              "contents": "TYPE_ROTATION" },
                { "trigger": "TYPE_STRING\tint (3)",                                                "contents": "TYPE_STRING" },
                { "trigger": "TYPE_VECTOR\tint (5)",                                                "contents": "TYPE_VECTOR" },
                { "trigger": "VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY\tint (32)",                     "contents": "VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY" },
                { "trigger": "VEHICLE_ANGULAR_DEFLECTION_TIMESCALE\tint (33)",                      "contents": "VEHICLE_ANGULAR_DEFLECTION_TIMESCALE" },
                { "trigger": "VEHICLE_ANGULAR_FRICTION_TIMESCALE\tint (17)",                        "contents": "VEHICLE_ANGULAR_FRICTION_TIMESCALE" },
                { "trigger": "VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE\tint (35)",                     "contents": "VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE" },
                { "trigger": "VEHICLE_ANGULAR_MOTOR_DIRECTION\tint (19)",                           "contents": "VEHICLE_ANGULAR_MOTOR_DIRECTION" },
                { "trigger": "VEHICLE_ANGULAR_MOTOR_TIMESCALE\tint (34)",                           "contents": "VEHICLE_ANGULAR_MOTOR_TIMESCALE" },
                { "trigger": "VEHICLE_BANKING_EFFICIENCY\tint (38)",                                "contents": "VEHICLE_BANKING_EFFICIENCY" },
                { "trigger": "VEHICLE_BANKING_MIX\tint (39)",                                       "contents": "VEHICLE_BANKING_MIX" },
                { "trigger": "VEHICLE_BANKING_TIMESCALE\tint (40)",                                 "contents": "VEHICLE_BANKING_TIMESCALE" },
                { "trigger": "VEHICLE_BUOYANCY\tint (27)",                                          "contents": "VEHICLE_BUOYANCY" },
                { "trigger": "VEHICLE_FLAG_CAMERA_DECOUPLED\tint (0x200 = 512)",                    "contents": "VEHICLE_FLAG_CAMERA_DECOUPLED" },
                { "trigger": "VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT\tint (0x10 = 16)",                   "contents": "VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT" },
                { "trigger": "VEHICLE_FLAG_HOVER_TERRAIN_ONLY\tint (0x8 = 8)",                      "contents": "VEHICLE_FLAG_HOVER_TERRAIN_ONLY" },
                { "trigger": "VEHICLE_FLAG_HOVER_UP_ONLY\tint (0x20 = 32)",                         "contents": "VEHICLE_FLAG_HOVER_UP_ONLY" },
                { "trigger": "VEHICLE_FLAG_HOVER_WATER_ONLY\tint (0x4 = 4)",                        "contents": "VEHICLE_FLAG_HOVER_WATER_ONLY" },
                { "trigger": "VEHICLE_FLAG_LIMIT_MOTOR_UP\tint (0x40 = 64)",                        "contents": "VEHICLE_FLAG_LIMIT_MOTOR_UP" },
                { "trigger": "VEHICLE_FLAG_LIMIT_ROLL_ONLY\tint (0x2 = 2)",                         "contents": "VEHICLE_FLAG_LIMIT_ROLL_ONLY" },
                { "trigger": "VEHICLE_FLAG_MOUSELOOK_BANK\tint (0x100 = 256)",                      "contents": "VEHICLE_FLAG_MOUSELOOK_BANK" },
                { "trigger": "VEHICLE_FLAG_MOUSELOOK_STEER\tint (0x80 = 128)",                      "contents": "VEHICLE_FLAG_MOUSELOOK_STEER" },
                { "trigger": "VEHICLE_FLAG_NO_DEFLECTION_UP\tint (0x1 = 1)",                        "contents": "VEHICLE_FLAG_NO_DEFLECTION_UP" },
                { "trigger": "VEHICLE_HOVER_EFFICIENCY\tint (25)",                                  "contents": "VEHICLE_HOVER_EFFICIENCY" },
                { "trigger": "VEHICLE_HOVER_HEIGHT\tint (24)",                                      "contents": "VEHICLE_HOVER_HEIGHT" },
                { "trigger": "VEHICLE_HOVER_TIMESCALE\tint (26)",                                   "contents": "VEHICLE_HOVER_TIMESCALE" },
                { "trigger": "VEHICLE_LINEAR_DEFLECTION_EFFICIENCY\tint (28)",                      "contents": "VEHICLE_LINEAR_DEFLECTION_EFFICIENCY" },
                { "trigger": "VEHICLE_LINEAR_DEFLECTION_TIMESCALE\tint (29)",                       "contents": "VEHICLE_LINEAR_DEFLECTION_TIMESCALE" },
                { "trigger": "VEHICLE_LINEAR_FRICTION_TIMESCALE\tint (16)",                         "contents": "VEHICLE_LINEAR_FRICTION_TIMESCALE" },
                { "trigger": "VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE\tint (31)",                      "contents": "VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE" },
                { "trigger": "VEHICLE_LINEAR_MOTOR_DIRECTION\tint (18)",                            "contents": "VEHICLE_LINEAR_MOTOR_DIRECTION" },
                { "trigger": "VEHICLE_LINEAR_MOTOR_OFFSET\tint (20)",                               "contents": "VEHICLE_LINEAR_MOTOR_OFFSET" },
                { "trigger": "VEHICLE_LINEAR_MOTOR_TIMESCALE\tint (30)",                            "contents": "VEHICLE_LINEAR_MOTOR_TIMESCALE" },
                { "trigger": "VEHICLE_REFERENCE_FRAME\tint (44)",                                   "contents": "VEHICLE_REFERENCE_FRAME" },
                { "trigger": "VEHICLE_TYPE_AIRPLANE\tint (4)",                                      "contents": "VEHICLE_TYPE_AIRPLANE" },
                { "trigger": "VEHICLE_TYPE_BALLOON\tint (5)",                                       "contents": "VEHICLE_TYPE_BALLOON" },
                { "trigger": "VEHICLE_TYPE_BOAT\tint (3)",                                          "contents": "VEHICLE_TYPE_BOAT" },
                { "trigger": "VEHICLE_TYPE_CAR\tint (2)",                                           "contents": "VEHICLE_TYPE_CAR" },
                { "trigger": "VEHICLE_TYPE_NONE\tint (0)",                                          "contents": "VEHICLE_TYPE_NONE" },
                { "trigger": "VEHICLE_TYPE_SLED\tint (1)",                                          "contents": "VEHICLE_TYPE_SLED" },
                { "trigger": "VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY\tint (36)",                    "contents": "VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY" },
                { "trigger": "VEHICLE_VERTICAL_ATTRACTION_TIMESCALE\tint (37)",                     "contents": "VEHICLE_VERTICAL_ATTRACTION_TIMESCALE" },
                { "trigger": "VERTICAL\tint (0)",                                                   "contents": "VERTICAL" },
                { "trigger": "WANDER_PAUSE_AT_WAYPOINTS\tint (0)",                                  "contents": "WANDER_PAUSE_AT_WAYPOINTS" },
                { "trigger": "XP_ERROR_EXPERIENCES_DISABLED\tint (2)",                              "contents": "XP_ERROR_EXPERIENCES_DISABLED" },
                { "trigger": "XP_ERROR_EXPERIENCE_DISABLED\tint (8)",                               "contents": "XP_ERROR_EXPERIENCE_DISABLED" },
                { "trigger": "XP_ERROR_EXPERIENCE_SUSPENDED\tint (9)",                              "contents": "XP_ERROR_EXPERIENCE_SUSPENDED" },
                { "trigger": "XP_ERROR_INVALID_EXPERIENCE\tint (7)",                                "contents": "XP_ERROR_INVALID_EXPERIENCE" },
                { "trigger": "XP_ERROR_INVALID_PARAMETERS\tint (3)",                                "contents": "XP_ERROR_INVALID_PARAMETERS" },
                { "trigger": "XP_ERROR_KEY_NOT_FOUND\tint (14)",                                    "contents": "XP_ERROR_KEY_NOT_FOUND" },
                { "trigger": "XP_ERROR_NOT_PERMITTED_LAND\tint (17)",                               "contents": "XP_ERROR_NOT_PERMITTED_LAND" },
                { "trigger": "XP_ERROR_MATURITY_EXCEEDED\tint (16)",                                "contents": "XP_ERROR_MATURITY_EXCEEDED" },
                { "trigger": "XP_ERROR_NONE\tint (0)",                                              "contents": "XP_ERROR_NONE" },
                { "trigger": "XP_ERROR_NOT_FOUND\tint (6)",                                         "contents": "XP_ERROR_NOT_FOUND" },
                { "trigger": "XP_ERROR_NOT_PERMITTED\tint (4)",                                     "contents": "XP_ERROR_NOT_PERMITTED" },
                { "trigger": "XP_ERROR_NO_EXPERIENCE\tint (5)",                                     "contents": "XP_ERROR_NO_EXPERIENCE" },
                { "trigger": "XP_ERROR_QUOTA_EXCEEDED\tint (11)",                                   "contents": "XP_ERROR_QUOTA_EXCEEDED" },
                { "trigger": "XP_ERROR_RETRY_UPDATE\tint (15)",                                     "contents": "XP_ERROR_RETRY_UPDATE" },
                { "trigger": "XP_ERROR_STORAGE_EXCEPTION\tint (13)",                                "contents": "XP_ERROR_STORAGE_EXCEPTION" },
                { "trigger": "XP_ERROR_STORE_DISABLED\tint (12)",                                   "contents": "XP_ERROR_STORE_DISABLED" },
                { "trigger": "XP_ERROR_THROTTLED\tint (1)",                                         "contents": "XP_ERROR_THROTTLED" },
                { "trigger": "XP_ERROR_UNKNOWN_ERROR\tint (10)",                                    "contents": "XP_ERROR_UNKNOWN_ERROR" }
            ]
        },
        {
            "name": "constant.language.integer.boolean.lsl",
            "strings":
            [
                { "trigger": "FALSE\tint bool (0)", "contents": "FALSE" },
                { "trigger": "TRUE\tint bool (1)", "contents": "TRUE" }
            ]
        },
        {
            "name": "constant.language.rotation.lsl",
            "strings":
            [
                { "trigger": "ZERO_ROTATION\trot (<0.0, 0.0, 0.0, 1.0>)", "contents": "ZERO_ROTATION" }
            ]
        },
        {
            "name": "constant.language.string.lsl",
            "strings":
            [
                { "trigger": "EOF\tstr (\"\\n\\n\\n\")", "contents": "EOF" },
                { "trigger": "JSON_ARRAY\tstr (\"&#xFDD2;\")", "contents": "JSON_ARRAY" },
                { "trigger": "JSON_DELETE\tstr (\"&#xFDD8;\")", "contents": "JSON_DELETE" },
                { "trigger": "JSON_FALSE\tstr (\"&#xFDD7;\")", "contents": "JSON_FALSE" },
                { "trigger": "JSON_INVALID\tstr (\"&#xFDD0;\")", "contents": "JSON_INVALID" },
                { "trigger": "JSON_NULL\tstr (\"&#xFDD5;\")", "contents": "JSON_NULL" },
                { "trigger": "JSON_NUMBER\tstr (\"&#xFDD3;\")", "contents": "JSON_NUMBER" },
                { "trigger": "JSON_OBJECT\tstr (\"&#xFDD1;\")", "contents": "JSON_OBJECT" },
                { "trigger": "JSON_STRING\tstr (\"&#xFDD4;\")", "contents": "JSON_STRING" },
                { "trigger": "JSON_TRUE\tstr (\"&#xFDD6;\")", "contents": "JSON_TRUE" },
                { "trigger": "NULL_KEY\tstr (\"00000000-0000-0000-0000-000000000000\")", "contents": "NULL_KEY" },
                { "trigger": "TEXTURE_BLANK\tstr (\"5748decc-f629-461c-9a36-a35a221fe21f\")", "contents": "TEXTURE_BLANK" },
                { "trigger": "TEXTURE_DEFAULT\tstr (\"89556747-24cb-43ed-920b-47caed15465f\" = TEXTURE_PLYWOOD)", "contents": "TEXTURE_DEFAULT" },
                { "trigger": "TEXTURE_MEDIA\tstr (\"8b5fec65-8d8d-9dc5-cda8-8fdf2716e361\")", "contents": "TEXTURE_MEDIA" },
                { "trigger": "TEXTURE_PLYWOOD\tstr (\"89556747-24cb-43ed-920b-47caed15465f\" = TEXTURE_DEFAULT)", "contents": "TEXTURE_PLYWOOD" },
                { "trigger": "TEXTURE_TRANSPARENT\tstr (\"8dcd4a48-2d37-4909-9f78-f7a9eb4ef903\")", "contents": "TEXTURE_TRANSPARENT" },
                { "trigger": "URL_REQUEST_DENIED\tstr (\"URL_REQUEST_DENIED\")", "contents": "URL_REQUEST_DENIED" },
                { "trigger": "URL_REQUEST_GRANTED\tstr (\"URL_REQUEST_GRANTED\")", "contents": "URL_REQUEST_GRANTED" }
            ]
        },
        {
            "name": "constant.language.vector.lsl",
            "strings":
            [
                { "trigger": "TOUCH_INVALID_TEXCOORD\tvect (<-1.0, -1.0, 0.0>)", "contents": "TOUCH_INVALID_TEXCOORD" },
                { "trigger": "TOUCH_INVALID_VECTOR\tvect (<0.0, 0.0, 0.0>)", "contents": "TOUCH_INVALID_VECTOR" },
                { "trigger": "ZERO_VECTOR\tvect (<0.0, 0.0, 0.0>)", "contents": "ZERO_VECTOR" }
            ]
        },
/*
        {
            "name": "invalid.broken.lsl",
            "strings":
            [
                "LAND_LARGE_BRUSH",
                "LAND_MEDIUM_BRUSH",
                "LAND_SMALL_BRUSH"
            ]
        },
        {
            "name": "invalid.deprecated.lsl",
            "strings":
            [
                "ATTACH_LPEC",
                "ATTACH_RPEC",
                "CHARACTER_MAX_ANGULAR_ACCEL",
                "CHARACTER_MAX_ANGULAR_SPEED",
                "CHARACTER_TURN_SPEED_MULTIPLIER",
                "DATA_RATING",
                "OBJECT_ATTACHMENT_GEOMETRY_BYTES",
                "OBJECT_ATTACHMENT_SURFACE_AREA",
                "PRIM_CAST_SHADOWS",
                "PRIM_MATERIAL_LIGHT",
                "PRIM_PHYSICS_MATERIAL",
                "PRIM_TYPE_LEGACY",
                "PSYS_SRC_INNERANGLE",
                "PSYS_SRC_OUTERANGLE",
                "VEHICLE_FLAG_NO_FLY_UP",
                "llClearExperiencePermissions",
                "llCloud",
                "llGetExperienceList",
                "llMakeExplosion",
                "llMakeFire",
                "llMakeFountain",
                "llMakeSmoke",
                "llRemoteDataSetRegion",
                "llSound",
                "llSoundPreload",
                "llXorBase64Strings",
                "llXorBase64StringsCorrect"
            ]
        },
        {
            "name": "invalid.unimplemented.lsl",
            "strings":
            [
                "CHARACTER_MAX_ANGULAR_ACCEL",
                "CHARACTER_MAX_ANGULAR_SPEED",
                "CHARACTER_TURN_SPEED_MULTIPLIER",
                "PERMISSION_CHANGE_JOINTS",
                "PERMISSION_CHANGE_PERMISSIONS",
                "PERMISSION_RELEASE_OWNERSHIP",
                "PERMISSION_REMAP_CONTROLS",
                "PRIM_PHYSICS_MATERIAL",
                "PRIM_TYPE_LEGACY",
                "PSYS_SRC_OBJ_REL_MASK",
                "llCollisionSprite",
                "llPointAt",
                "llRefreshPrimURL",
                "llReleaseCamera",
                "llRemoteLoadScript",
                "llSetPrimURL",
                "llStopPointAt",
                "llTakeCamera"
            ]
        },
        {
            "name": "invalid.illegal.lsl",
            "strings":
            [
                "event"
            ]
        },
        {
            "name": "reserved.godmode.lsl",
            "strings":
            [
                "llGodLikeRezObject",
                "llSetInventoryPermMask",
                "llSetObjectPermMask"
            ]
        },
        {
            "name": "reserved.lsl",
            "strings":
            [
                "print"
            ]
        },
*/
        {
            "name": "support.function.event.lsl",
            "strings":
            [
                { "trigger": "at_rot_target\tevent",                 "contents": "at_rot_target(integer ${1:handle}, rotation ${2:targetrot}, rotation ${3:ourrot})\n{\n\t$0\n}" },
                { "trigger": "at_target\tevent",                     "contents": "at_target(integer ${1:tnum}, vector ${2:targetpos}, vector ${3:ourpos})\n{\n\t$0\n}" },
                { "trigger": "attach\tevent",                        "contents": "attach(key ${1:id})\n{\n\t$0\n}" },
                { "trigger": "changed\tevent",                       "contents": "changed(integer ${1:change})\n{\n\t$0\n}" },
                { "trigger": "collision\tevent",                     "contents": "collision(integer ${1:index})\n{\n\t$0\n}" },
                { "trigger": "collision_end\tevent",                 "contents": "collision_end(integer ${1:index})\n{\n\t$0\n}" },
                { "trigger": "collision_start\tevent",               "contents": "collision_start(integer ${1:index})\n{\n\t$0\n}" },
                { "trigger": "control\tevent",                       "contents": "control(key ${1:id}, integer ${2:level}, integer ${3:edge})\n{\n\t$0\n}" },
                { "trigger": "dataserver\tevent",                    "contents": "dataserver(key ${1:query_id}, string ${2:data})\n{\n\t$0\n}" },
                { "trigger": "email\tevent",                         "contents": "email(string ${1:time}, string ${2:address}, string ${3:subject}, string ${4:message}, integer ${5:num_left})\n{\n\t$0\n}" },
                { "trigger": "experience_permissions\tevent",        "contents": "experience_permissions(key ${1:agent_id})\n{\n\t$0\n}" },
                { "trigger": "experience_permissions_denied\tevent", "contents": "experience_permissions_denied(key ${1:agent_id}, integer ${2:reason})\n{\n\t$0\n}" },
                { "trigger": "http_request\tevent",                  "contents": "http_request(key ${1:request_id}, string ${2:method}, string ${3:body})\n{\n\t$0\n}" },
                { "trigger": "http_response\tevent",                 "contents": "http_response(key ${1:request_id}, integer ${2:status}, list ${3:metadata}, string ${4:body})\n{\n\t$0\n}" },
                { "trigger": "land_collision\tevent",                "contents": "land_collision(vector ${1:pos})\n{\n\t$0\n}" },
                { "trigger": "land_collision_end\tevent",            "contents": "land_collision_end(vector ${1:pos})\n{\n\t$0\n}" },
                { "trigger": "land_collision_start\tevent",          "contents": "land_collision_start(vector ${1:pos})\n{\n\t$0\n}" },
                { "trigger": "link_message\tevent",                  "contents": "link_message(integer ${1:sender_num}, integer ${2:num}, string ${3:str}, key ${4:id})\n{\n\t$0\n}" },
                { "trigger": "listen\tevent",                        "contents": "listen(integer ${1:channel}, string ${2:name}, key ${3:id}, string ${4:message})\n{\n\t$0\n}" },
                { "trigger": "money\tevent",                         "contents": "money(key ${1:id}, integer ${2:amount})\n{\n\t$0\n}" },
                { "trigger": "moving_end\tevent",                    "contents": "moving_end()\n{\n\t$0\n}" },
                { "trigger": "moving_start\tevent",                  "contents": "moving_start()\n{\n\t$0\n}" },
                { "trigger": "no_sensor\tevent",                     "contents": "no_sensor()\n{\n\t$0\n}" },
                { "trigger": "not_at_rot_target\tevent",             "contents": "not_at_rot_target()\n{\n\t$0\n}" },
                { "trigger": "not_at_target\tevent",                 "contents": "not_at_target()\n{\n\t$0\n}" },
                { "trigger": "object_rez\tevent",                    "contents": "object_rez(key ${1:id})\n{\n\t$0\n}" },
                { "trigger": "on_rez\tevent",                        "contents": "on_rez(integer ${1:start_param})\n{\n\t$0\n}" },
                { "trigger": "path_update\tevent",                   "contents": "path_update(integer ${1:type}, list ${2:reserved})\n{\n\t$0\n}" },
                { "trigger": "remote_data\tevent",                   "contents": "remote_data(integer ${1:event_type}, key ${2:channel}, key ${3:message_id}, string ${4:sender}, integer ${5:idata}, string ${6:sdata})\n{\n\t$0\n}" },
                { "trigger": "run_time_permissions\tevent",          "contents": "run_time_permissions(integer ${1:perm})\n{\n\t$0\n}" },
                { "trigger": "sensor\tevent",                        "contents": "sensor(integer ${1:index})\n{\n\t$0\n}" },
                { "trigger": "state_entry\tevent",                   "contents": "state_entry()\n{\n\t$0\n}" },
                { "trigger": "state_exit\tevent",                    "contents": "state_exit()\n{\n\t$0\n}" },
                { "trigger": "timer\tevent",                         "contents": "timer()\n{\n\t$0\n}" },
                { "trigger": "touch\tevent",                         "contents": "touch(integer ${1:index})\n{\n\t$0\n}" },
                { "trigger": "touch_end\tevent",                     "contents": "touch_end(integer ${1:index})\n{\n\t$0\n}" },
                { "trigger": "touch_start\tevent",                   "contents": "touch_start(integer ${1:index})\n{\n\t$0\n}" },
                { "trigger": "transaction_result\tevent",            "contents": "transaction_result(key ${1:id}, integer ${2:success}, string ${3:data})\n{\n\t$0\n}" }
            ]
        },
        {
            "name": "support.function.lsl",
            "strings":
            [
                { "trigger": "llAbs\t(int) func",                           "contents": "llAbs(${1:integer val})" },
                { "trigger": "llAcos\t(float) func",                        "contents": "llAcos(${1:float val})" },
                { "trigger": "llAddToLandBanList\t(void) func",             "contents": "llAddToLandBanList(${1:key avatar}, ${2:float hours});" },
                { "trigger": "llAddToLandPassList\t(void) func",            "contents": "llAddToLandPassList(${1:key avatar}, ${2:float hours});" },
                { "trigger": "llAdjustSoundVolume\t(void) func",            "contents": "llAdjustSoundVolume(${1:float volume});" },
                { "trigger": "llAgentInExperience\t(integer) func",         "contents": "llAgentInExperience(${1:key agent})" },
                { "trigger": "llAllowInventoryDrop\t(void) func",           "contents": "llAllowInventoryDrop(${1:integer add});" },
                { "trigger": "llAngleBetween\t(float) func",                "contents": "llAngleBetween(${1:rotation a}, ${2:rotation b})" },
                { "trigger": "llApplyImpulse\t(void) func",                 "contents": "llApplyImpulse(${1:vector force}, ${2:integer local});" },
                { "trigger": "llApplyRotationalImpulse\t(void) func",       "contents": "llApplyRotationalImpulse(${1:vector force}, ${2:integer local});" },
                { "trigger": "llAsin\t(float) func",                        "contents": "llAsin(${1:float val})" },
                { "trigger": "llAtan2\t(float) func",                       "contents": "llAtan2(${1:float y}, ${2:float x})" },
                { "trigger": "llAttachToAvatar\t(void) func",               "contents": "llAttachToAvatar(${1:integer attach_point});" },
                { "trigger": "llAttachToAvatarTemp\t(void) func",           "contents": "llAttachToAvatarTemp(${1:integer attach_point});" },
                { "trigger": "llAvatarOnLinkSitTarget\t(key) func",         "contents": "llAvatarOnLinkSitTarget(${1:integer link})" },
                { "trigger": "llAvatarOnSitTarget\t(key) func",             "contents": "llAvatarOnSitTarget()" },
                { "trigger": "llAxes2Rot\t(rot) func",                      "contents": "llAxes2Rot(${1:vector fwd}, ${2:vector left}, ${3:vector up})" },
                { "trigger": "llAxisAngle2Rot\t(rot) func",                 "contents": "llAxisAngle2Rot(${1:vector axis}, ${2:float angle})" },
                { "trigger": "llBase64ToInteger\t(int) func",               "contents": "llBase64ToInteger(${1:string str})" },
                { "trigger": "llBase64ToString\t(str) func",                "contents": "llBase64ToString(${1:string str})" },
                { "trigger": "llBreakAllLinks\t(void) func",                "contents": "llBreakAllLinks();" },
                { "trigger": "llBreakLink\t(void) func",                    "contents": "llBreakLink(${1:integer linknum});" },
                { "trigger": "llCSV2List\t(list) func",                     "contents": "llCSV2List(${1:string src})" },
                { "trigger": "llCastRay\t(list) func",                      "contents": "llCastRay(${1:vector start}, ${2:vector end}, ${3:list params})" },
                { "trigger": "llCeil\t(int) func",                          "contents": "llCeil(${1:float val})" },
                { "trigger": "llClearCameraParams\t(void) func",            "contents": "llClearCameraParams();" },
                { "trigger": "llClearLinkMedia\t(int) func",                "contents": "llClearLinkMedia(${1:integer link}, ${2:integer face})" },
                { "trigger": "llClearPrimMedia\t(int) func",                "contents": "llClearPrimMedia(${1:integer face})" },
                { "trigger": "llCloseRemoteDataChannel\t(void) func",       "contents": "llCloseRemoteDataChannel(${1:key channel});" },
                { "trigger": "llCollisionFilter\t(void) func",              "contents": "llCollisionFilter(${1:string name}, ${2:key id}, ${3:integer accept});" },
                { "trigger": "llCollisionSound\t(void) func",               "contents": "llCollisionSound(${1:string impact_sound}, ${2:float impact_volume});" },
                { "trigger": "llCos\t(float) func",                         "contents": "llCos(${1:float theta})" },
                { "trigger": "llCreateCharacter\t(void) func",              "contents": "llCreateCharacter(${1:list options});" },
                { "trigger": "llCreateKeyValue\t(key) func",                "contents": "llCreateKeyValue(${1:string k}, ${2:string v})" },
                { "trigger": "llCreateLink\t(void) func",                   "contents": "llCreateLink(${1:key target}, ${2:integer parent});" },
                { "trigger": "llDataSizeKeyValue\t(key) func",              "contents": "llDataSizeKeyValue()" },
                { "trigger": "llDeleteCharacter\t(void) func",              "contents": "llDeleteCharacter();" },
                { "trigger": "llDeleteKeyValue\t(key) func",                "contents": "llDeleteKeyValue(${1:string k})" },
                { "trigger": "llDeleteSubList\t(list) func",                "contents": "llDeleteSubList(${1:list src}, ${2:integer start}, ${3:integer end})" },
                { "trigger": "llDeleteSubString\t(str) func",               "contents": "llDeleteSubString(${1:string src}, ${2:integer start}, ${3:integer end})" },
                { "trigger": "llDetachFromAvatar\t(void) func",             "contents": "llDetachFromAvatar();" },
                { "trigger": "llDetectedGrab\t(vec) func",                  "contents": "llDetectedGrab(${1:integer number})" },
                { "trigger": "llDetectedGroup\t(int) func",                 "contents": "llDetectedGroup(${1:integer number})" },
                { "trigger": "llDetectedKey\t(key) func",                   "contents": "llDetectedKey(${1:integer number})" },
                { "trigger": "llDetectedLinkNumber\t(int) func",            "contents": "llDetectedLinkNumber(${1:integer number})" },
                { "trigger": "llDetectedName\t(str) func",                  "contents": "llDetectedName(${1:integer number})" },
                { "trigger": "llDetectedOwner\t(key) func",                 "contents": "llDetectedOwner(${1:integer number})" },
                { "trigger": "llDetectedPos\t(vec) func",                   "contents": "llDetectedPos(${1:integer number})" },
                { "trigger": "llDetectedRot\t(rot) func",                   "contents": "llDetectedRot(${1:integer number})" },
                { "trigger": "llDetectedTouchBinormal\t(vec) func",         "contents": "llDetectedTouchBinormal(${1:integer index})" },
                { "trigger": "llDetectedTouchFace\t(int) func",             "contents": "llDetectedTouchFace(${1:integer index})" },
                { "trigger": "llDetectedTouchNormal\t(vec) func",           "contents": "llDetectedTouchNormal(${1:integer index})" },
                { "trigger": "llDetectedTouchPos\t(vec) func",              "contents": "llDetectedTouchPos(${1:integer index})" },
                { "trigger": "llDetectedTouchST\t(vec) func",               "contents": "llDetectedTouchST(${1:integer index})" },
                { "trigger": "llDetectedTouchUV\t(vec) func",               "contents": "llDetectedTouchUV(${1:integer index})" },
                { "trigger": "llDetectedType\t(int) func",                  "contents": "llDetectedType(${1:integer number})" },
                { "trigger": "llDetectedVel\t(vec) func",                   "contents": "llDetectedVel(${1:integer number})" },
                { "trigger": "llDialog\t(void) func",                       "contents": "llDialog(${1:key avatar}, ${2:string message}, ${3:list buttons}, ${4:integer chat_channel});" },
                { "trigger": "llDie\t(void) func",                          "contents": "llDie();" },
                { "trigger": "llDumpList2String\t(str) func",               "contents": "llDumpList2String(${1:list src}, ${2:string separator})" },
                { "trigger": "llEdgeOfWorld\t(int) func",                   "contents": "llEdgeOfWorld(${1:vector pos}, ${2:vector dir})" },
                { "trigger": "llEjectFromLand\t(void) func",                "contents": "llEjectFromLand(${1:key avatar});" },
                { "trigger": "llEmail\t(void) func",                        "contents": "llEmail(${1:string address}, ${2:string subject}, ${3:string message});" },
                { "trigger": "llEscapeURL\t(str) func",                     "contents": "llEscapeURL(${1:string url})" },
                { "trigger": "llEuler2Rot\t(rot) func",                     "contents": "llEuler2Rot(${1:vector v})" },
                { "trigger": "llEvade\t(void) func",                        "contents": "llEvade(${1:key target}, ${2:list options});" },
                { "trigger": "llExecCharacterCmd\t(void) func",             "contents": "llExecCharacterCmd(${1:integer cmd}, ${2:list options});" },
                { "trigger": "llFabs\t(float) func",                        "contents": "llFabs(${1:float val})" },
                { "trigger": "llFleeFrom\t(void) func",                     "contents": "llFleeFrom(${1:vector source}, ${2:float radius}, ${3:list options});" },
                { "trigger": "llFloor\t(int) func",                         "contents": "llFloor(${1:float val})" },
                { "trigger": "llForceMouselook\t(void) func",               "contents": "llForceMouselook(${1:integer mouselook});" },
                { "trigger": "llFrand\t(float) func",                       "contents": "llFrand(${1:float mag})" },
                { "trigger": "llGenerateKey\t(key) func",                   "contents": "llGenerateKey()" },
                { "trigger": "llGetAccel\t(vec) func",                      "contents": "llGetAccel()" },
                { "trigger": "llGetAgentInfo\t(int) func",                  "contents": "llGetAgentInfo(${1:key id})" },
                { "trigger": "llGetAgentLanguage\t(str) func",              "contents": "llGetAgentLanguage(${1:key avatar})" },
                { "trigger": "llGetAgentList\t(list) func",                 "contents": "llGetAgentList(${1:integer scope}, ${2:list options})" },
                { "trigger": "llGetAgentSize\t(vec) func",                  "contents": "llGetAgentSize(${1:key id})" },
                { "trigger": "llGetAlpha\t(float) func",                    "contents": "llGetAlpha(${1:integer face})" },
                { "trigger": "llGetAndResetTime\t(float) func",             "contents": "llGetAndResetTime()" },
                { "trigger": "llGetAnimation\t(str) func",                  "contents": "llGetAnimation(${1:key id})" },
                { "trigger": "llGetAnimationList\t(list) func",             "contents": "llGetAnimationList(${1:key id})" },
                { "trigger": "llGetAnimationOverride\t(str) func",          "contents": "llGetAnimationOverride(${1:string anim_state})" },
                { "trigger": "llGetAttached\t(int) func",                   "contents": "llGetAttached()" },
                { "trigger": "llGetBoundingBox\t(list) func",               "contents": "llGetBoundingBox(${1:key object})" },
                { "trigger": "llGetCameraPos\t(vec) func",                  "contents": "llGetCameraPos()" },
                { "trigger": "llGetCameraRot\t(rot) func",                  "contents": "llGetCameraRot()" },
                { "trigger": "llGetCenterOfMass\t(vec) func",               "contents": "llGetCenterOfMass()" },
                { "trigger": "llGetClosestNavPoint\t(list) func",           "contents": "llGetClosestNavPoint(${1:vector point}, ${2:list options})" },
                { "trigger": "llGetColor\t(vec) func",                      "contents": "llGetColor(${1:integer face})" },
                { "trigger": "llGetCreator\t(key) func",                    "contents": "llGetCreator()" },
                { "trigger": "llGetDate\t(str) func",                       "contents": "llGetDate()" },
                { "trigger": "llGetDisplayName\t(str) func",                "contents": "llGetDisplayName(${1:key id})" },
                { "trigger": "llGetEnergy\t(float) func",                   "contents": "llGetEnergy()" },
                { "trigger": "llGetEnv\t(str) func",                        "contents": "llGetEnv(${1:string name})" },
                { "trigger": "llGetExperienceDetails\t(list) func",         "contents": "llGetExperienceDetails(${1:key experience_id})" },
                { "trigger": "llGetExperienceErrorMessage\t(string) func",  "contents": "llGetExperienceErrorMessage(${1:integer error})" },
                { "trigger": "llGetForce\t(vec) func",                      "contents": "llGetForce()" },
                { "trigger": "llGetFreeMemory\t(int) func",                 "contents": "llGetFreeMemory()" },
                { "trigger": "llGetFreeURLs\t(int) func",                   "contents": "llGetFreeURLs()" },
                { "trigger": "llGetGMTclock\t(float) func",                 "contents": "llGetGMTclock()" },
                { "trigger": "llGetGeometricCenter\t(vec) func",            "contents": "llGetGeometricCenter()" },
                { "trigger": "llGetHTTPHeader\t(str) func",                 "contents": "llGetHTTPHeader(${1:key request_id}, ${2:string header})" },
                { "trigger": "llGetInventoryCreator\t(key) func",           "contents": "llGetInventoryCreator(${1:string item})" },
                { "trigger": "llGetInventoryKey\t(key) func",               "contents": "llGetInventoryKey(${1:string name})" },
                { "trigger": "llGetInventoryName\t(str) func",              "contents": "llGetInventoryName(${1:integer type}, ${2:integer number})" },
                { "trigger": "llGetInventoryNumber\t(int) func",            "contents": "llGetInventoryNumber(${1:integer type})" },
                { "trigger": "llGetInventoryPermMask\t(int) func",          "contents": "llGetInventoryPermMask(${1:string item}, ${2:integer mask})" },
                { "trigger": "llGetInventoryType\t(int) func",              "contents": "llGetInventoryType(${1:string name})" },
                { "trigger": "llGetKey\t(key) func",                        "contents": "llGetKey()" },
                { "trigger": "llGetLandOwnerAt\t(key) func",                "contents": "llGetLandOwnerAt(${1:vector pos})" },
                { "trigger": "llGetLinkKey\t(key) func",                    "contents": "llGetLinkKey(${1:integer linknumber})" },
                { "trigger": "llGetLinkMedia\t(list) func",                 "contents": "llGetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params})" },
                { "trigger": "llGetLinkName\t(str) func",                   "contents": "llGetLinkName(${1:integer linknumber})" },
                { "trigger": "llGetLinkNumber\t(int) func",                 "contents": "llGetLinkNumber()" },
                { "trigger": "llGetLinkNumberOfSides\t(int) func",          "contents": "llGetLinkNumberOfSides(${1:integer link})" },
                { "trigger": "llGetLinkPrimitiveParams\t(list) func",       "contents": "llGetLinkPrimitiveParams(${1:integer linknumber}, ${2:list rules})" },
                { "trigger": "llGetListEntryType\t(int) func",              "contents": "llGetListEntryType(${1:list src}, ${2:integer index})" },
                { "trigger": "llGetListLength\t(int) func",                 "contents": "llGetListLength(${1:list src})" },
                { "trigger": "llGetLocalPos\t(vec) func",                   "contents": "llGetLocalPos()" },
                { "trigger": "llGetLocalRot\t(rot) func",                   "contents": "llGetLocalRot()" },
                { "trigger": "llGetMass\t(float) func",                     "contents": "llGetMass()" },
                { "trigger": "llGetMassMKS\t(float) func",                  "contents": "llGetMassMKS()" },
                { "trigger": "llGetMaxScaleFactor\t(float) func",           "contents": "llGetMaxScaleFactor()" },
                { "trigger": "llGetMemoryLimit\t(int) func",                "contents": "llGetMemoryLimit()" },
                { "trigger": "llGetMinScaleFactor\t(float) func",           "contents": "llGetMinScaleFactor()" },
                { "trigger": "llGetNextEmail\t(void) func",                 "contents": "llGetNextEmail(${1:string address}, ${2:string subject});" },
                { "trigger": "llGetNotecardLine\t(key) func",               "contents": "llGetNotecardLine(${1:string name}, ${2:integer line})" },
                { "trigger": "llGetNumberOfNotecardLines\t(key) func",      "contents": "llGetNumberOfNotecardLines(${1:string name})" },
                { "trigger": "llGetNumberOfPrims\t(int) func",              "contents": "llGetNumberOfPrims()" },
                { "trigger": "llGetNumberOfSides\t(int) func",              "contents": "llGetNumberOfSides()" },
                { "trigger": "llGetObjectDesc\t(str) func",                 "contents": "llGetObjectDesc()" },
                { "trigger": "llGetObjectDetails\t(list) func",             "contents": "llGetObjectDetails(${1:key id}, ${2:list params})" },
                { "trigger": "llGetObjectMass\t(float) func",               "contents": "llGetObjectMass(${1:key id})" },
                { "trigger": "llGetObjectName\t(str) func",                 "contents": "llGetObjectName()" },
                { "trigger": "llGetObjectPermMask\t(int) func",             "contents": "llGetObjectPermMask(${1:integer mask})" },
                { "trigger": "llGetObjectPrimCount\t(int) func",            "contents": "llGetObjectPrimCount(${1:key object_id})" },
                { "trigger": "llGetOmega\t(vec) func",                      "contents": "llGetOmega()" },
                { "trigger": "llGetOwner\t(key) func",                      "contents": "llGetOwner()" },
                { "trigger": "llGetOwnerKey\t(key) func",                   "contents": "llGetOwnerKey(${1:key id})" },
                { "trigger": "llGetParcelDetails\t(list) func",             "contents": "llGetParcelDetails(${1:vector pos}, ${2:list params})" },
                { "trigger": "llGetParcelFlags\t(int) func",                "contents": "llGetParcelFlags(${1:vector pos})" },
                { "trigger": "llGetParcelMaxPrims\t(int) func",             "contents": "llGetParcelMaxPrims(${1:vector pos}, ${2:integer sim_wide})" },
                { "trigger": "llGetParcelMusicURL\t(str) func",             "contents": "llGetParcelMusicURL()" },
                { "trigger": "llGetParcelPrimCount\t(int) func",            "contents": "llGetParcelPrimCount(${1:vector pos}, ${2:integer category}, ${3:integer sim_wide})" },
                { "trigger": "llGetParcelPrimOwners\t(list) func",          "contents": "llGetParcelPrimOwners(${1:vector pos})" },
                { "trigger": "llGetPermissions\t(int) func",                "contents": "llGetPermissions()" },
                { "trigger": "llGetPermissionsKey\t(key) func",             "contents": "llGetPermissionsKey()" },
                { "trigger": "llGetPhysicsMaterial\t(list) func",           "contents": "llGetPhysicsMaterial()" },
                { "trigger": "llGetPos\t(vec) func",                        "contents": "llGetPos()" },
                { "trigger": "llGetPrimMediaParams\t(list) func",           "contents": "llGetPrimMediaParams(${1:integer face}, ${2:list params})" },
                { "trigger": "llGetPrimitiveParams\t(list) func",           "contents": "llGetPrimitiveParams(${1:list params})" },
                { "trigger": "llGetRegionAgentCount\t(int) func",           "contents": "llGetRegionAgentCount()" },
                { "trigger": "llGetRegionCorner\t(vec) func",               "contents": "llGetRegionCorner()" },
                { "trigger": "llGetRegionFPS\t(float) func",                "contents": "llGetRegionFPS()" },
                { "trigger": "llGetRegionFlags\t(int) func",                "contents": "llGetRegionFlags()" },
                { "trigger": "llGetRegionName\t(str) func",                 "contents": "llGetRegionName()" },
                { "trigger": "llGetRegionTimeDilation\t(float) func",       "contents": "llGetRegionTimeDilation()" },
                { "trigger": "llGetRootPosition\t(vec) func",               "contents": "llGetRootPosition()" },
                { "trigger": "llGetRootRotation\t(rot) func",               "contents": "llGetRootRotation()" },
                { "trigger": "llGetRot\t(rot) func",                        "contents": "llGetRot()" },
                { "trigger": "llGetSPMaxMemory\t(int) func",                "contents": "llGetSPMaxMemory()" },
                { "trigger": "llGetScale\t(vec) func",                      "contents": "llGetScale()" },
                { "trigger": "llGetScriptName\t(str) func",                 "contents": "llGetScriptName()" },
                { "trigger": "llGetScriptState\t(int) func",                "contents": "llGetScriptState(${1:string name})" },
                { "trigger": "llGetSimStats\t(float) func",                 "contents": "llGetSimStats(${1:integer stat_type})" },
                { "trigger": "llGetSimulatorHostname\t(str) func",          "contents": "llGetSimulatorHostname()" },
                { "trigger": "llGetStartParameter\t(int) func",             "contents": "llGetStartParameter()" },
                { "trigger": "llGetStaticPath\t(list) func",                "contents": "llGetStaticPath(${1:vector start}, ${2:vector end}, ${3:float radius}, ${4:list params})" },
                { "trigger": "llGetStatus\t(int) func",                     "contents": "llGetStatus(${1:integer status})" },
                { "trigger": "llGetSubString\t(str) func",                  "contents": "llGetSubString(${1:string src}, ${2:integer start}, ${3:integer end})" },
                { "trigger": "llGetSunDirection\t(vec) func",               "contents": "llGetSunDirection()" },
                { "trigger": "llGetTexture\t(str) func",                    "contents": "llGetTexture(${1:integer face})" },
                { "trigger": "llGetTextureOffset\t(vec) func",              "contents": "llGetTextureOffset(${1:integer face})" },
                { "trigger": "llGetTextureRot\t(float) func",               "contents": "llGetTextureRot(${1:integer side})" },
                { "trigger": "llGetTextureScale\t(vec) func",               "contents": "llGetTextureScale(${1:integer side})" },
                { "trigger": "llGetTime\t(float) func",                     "contents": "llGetTime()" },
                { "trigger": "llGetTimeOfDay\t(float) func",                "contents": "llGetTimeOfDay()" },
                { "trigger": "llGetTimestamp\t(str) func",                  "contents": "llGetTimestamp()" },
                { "trigger": "llGetTorque\t(vec) func",                     "contents": "llGetTorque()" },
                { "trigger": "llGetUnixTime\t(int) func",                   "contents": "llGetUnixTime()" },
                { "trigger": "llGetUsedMemory\t(int) func",                 "contents": "llGetUsedMemory()" },
                { "trigger": "llGetUsername\t(str) func",                   "contents": "llGetUsername(${1:key id})" },
                { "trigger": "llGetVel\t(vec) func",                        "contents": "llGetVel()" },
                { "trigger": "llGetWallclock\t(float) func",                "contents": "llGetWallclock()" },
                { "trigger": "llGiveInventory\t(void) func",                "contents": "llGiveInventory(${1:key destination}, ${2:string inventory});" },
                { "trigger": "llGiveInventoryList\t(void) func",            "contents": "llGiveInventoryList(${1:key target}, ${2:string folder}, ${3:list inventory});" },
                { "trigger": "llGiveMoney\t(int) func",                     "contents": "llGiveMoney(${1:key destination}, ${2:integer amount})" },
                { "trigger": "llGround\t(float) func",                      "contents": "llGround(${1:vector offset})" },
                { "trigger": "llGroundContour\t(vec) func",                 "contents": "llGroundContour(${1:vector offset})" },
                { "trigger": "llGroundNormal\t(vec) func",                  "contents": "llGroundNormal(${1:vector offset})" },
                { "trigger": "llGroundRepel\t(void) func",                  "contents": "llGroundRepel(${1:float height}, ${2:integer water}, ${3:float tau});" },
                { "trigger": "llGroundSlope\t(vec) func",                   "contents": "llGroundSlope(${1:vector offset})" },
                { "trigger": "llHTTPRequest\t(key) func",                   "contents": "llHTTPRequest(${1:string url}, ${2:list parameters}, ${3:string body})" },
                { "trigger": "llHTTPResponse\t(void) func",                 "contents": "llHTTPResponse(${1:key request_id}, ${2:integer status}, ${3:string body});" },
                { "trigger": "llInsertString\t(str) func",                  "contents": "llInsertString(${1:string dst}, ${2:integer position}, ${3:string src})" },
                { "trigger": "llInstantMessage\t(void) func",               "contents": "llInstantMessage(${1:key user}, ${2:string message});" },
                { "trigger": "llIntegerToBase64\t(str) func",               "contents": "llIntegerToBase64(${1:integer number})" },
                { "trigger": "llJson2List\t(list) func",                    "contents": "llJson2List(${1:string json})" },
                { "trigger": "llJsonGetValue\t(str) func",                  "contents": "llJsonGetValue(${1:string json}, ${2:list specifiers})" },
                { "trigger": "llJsonSetValue\t(str) func",                  "contents": "llJsonSetValue(${1:string json}, ${2:list specifiers}, ${3:string value})" },
                { "trigger": "llJsonValueType\t(str) func",                 "contents": "llJsonValueType(${1:string json}, ${2:list specifiers})" },
                { "trigger": "llKey2Name\t(str) func",                      "contents": "llKey2Name(${1:key id})" },
                { "trigger": "llKeyCountKeyValue\t(key) func",              "contents": "llKeyCountKeyValue()" },
                { "trigger": "llKeysKeyValue\t(key) func",                  "contents": "llKeysKeyValue(${1:integer first}, ${2:integer count})" },
                { "trigger": "llLinkParticleSystem\t(void) func",           "contents": "llLinkParticleSystem(${1:integer linknumber}, ${2:list rules});" },
                { "trigger": "llLinkSitTarget\t(void) func",                "contents": "llLinkSitTarget(${1:integer link}, ${2:vector offset}, ${3:rotation rot});" },
                { "trigger": "llList2CSV\t(str) func",                      "contents": "llList2CSV(${1:list src})" },
                { "trigger": "llList2Float\t(float) func",                  "contents": "llList2Float(${1:list src}, ${2:integer index})" },
                { "trigger": "llList2Integer\t(int) func",                  "contents": "llList2Integer(${1:list src}, ${2:integer index})" },
                { "trigger": "llList2Json\t(str) func",                     "contents": "llList2Json(${1:string type}, ${2:list values})" },
                { "trigger": "llList2Key\t(key) func",                      "contents": "llList2Key(${1:list src}, ${2:integer index})" },
                { "trigger": "llList2List\t(list) func",                    "contents": "llList2List(${1:list src}, ${2:integer start}, ${3:integer end})" },
                { "trigger": "llList2ListStrided\t(list) func",             "contents": "llList2ListStrided(${1:list src}, ${2:integer start}, ${3:integer end}, ${4:integer stride})" },
                { "trigger": "llList2Rot\t(rot) func",                      "contents": "llList2Rot(${1:list src}, ${2:integer index})" },
                { "trigger": "llList2String\t(str) func",                   "contents": "llList2String(${1:list src}, ${2:integer index})" },
                { "trigger": "llList2Vector\t(vec) func",                   "contents": "llList2Vector(${1:list src}, ${2:integer index})" },
                { "trigger": "llListFindList\t(int) func",                  "contents": "llListFindList(${1:list src}, ${2:list test})" },
                { "trigger": "llListInsertList\t(list) func",               "contents": "llListInsertList(${1:list dest}, ${2:list src}, ${3:integer start})" },
                { "trigger": "llListRandomize\t(list) func",                "contents": "llListRandomize(${1:list src}, ${2:integer stride})" },
                { "trigger": "llListReplaceList\t(list) func",              "contents": "llListReplaceList(${1:list dest}, ${2:list src}, ${3:integer start}, ${4:integer end})" },
                { "trigger": "llListSort\t(list) func",                     "contents": "llListSort(${1:list src}, ${2:integer stride}, ${3:integer ascending})" },
                { "trigger": "llListStatistics\t(float) func",              "contents": "llListStatistics(${1:integer operation}, ${2:list src})" },
                { "trigger": "llListen\t(int) func",                        "contents": "llListen(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string msg})" },
                { "trigger": "llListenControl\t(void) func",                "contents": "llListenControl(${1:integer number}, ${2:integer active});" },
                { "trigger": "llListenRemove\t(void) func",                 "contents": "llListenRemove(${1:integer number});" },
                { "trigger": "llLoadURL\t(void) func",                      "contents": "llLoadURL(${1:key avatar}, ${2:string message}, ${3:string url});" },
                { "trigger": "llLog\t(float) func",                         "contents": "llLog(${1:float val})" },
                { "trigger": "llLog10\t(float) func",                       "contents": "llLog10(${1:float val})" },
                { "trigger": "llLookAt\t(void) func",                       "contents": "llLookAt(${1:vector target}, ${2:float strength}, ${3:float damping});" },
                { "trigger": "llLoopSound\t(void) func",                    "contents": "llLoopSound(${1:string sound}, ${2:float volume});" },
                { "trigger": "llLoopSoundMaster\t(void) func",              "contents": "llLoopSoundMaster(${1:string sound}, ${2:float volume});" },
                { "trigger": "llLoopSoundSlave\t(void) func",               "contents": "llLoopSoundSlave(${1:string sound}, ${2:float volume});" },
                { "trigger": "llMD5String\t(str) func",                     "contents": "llMD5String(${1:string src}, ${2:integer nonce})" },
                { "trigger": "llManageEstateAccess\t(int) func",            "contents": "llManageEstateAccess(${1:integer action}, ${2:key id})" },
                { "trigger": "llMapDestination\t(void) func",               "contents": "llMapDestination(${1:string simname}, ${2:vector pos}, ${3:vector look_at});" },
                { "trigger": "llMessageLinked\t(void) func",                "contents": "llMessageLinked(${1:integer linknum}, ${2:integer num}, ${3:string str}, ${4:key id});" },
                { "trigger": "llMinEventDelay\t(void) func",                "contents": "llMinEventDelay(${1:float delay});" },
                { "trigger": "llModPow\t(int) func",                        "contents": "llModPow(${1:integer a}, ${2:integer b}, ${3:integer c})" },
                { "trigger": "llModifyLand\t(void) func",                   "contents": "llModifyLand(${1:integer action}, ${2:integer brush});" },
                { "trigger": "llMoveToTarget\t(void) func",                 "contents": "llMoveToTarget(${1:vector target}, ${2:float tau});" },
                { "trigger": "llNavigateTo\t(void) func",                   "contents": "llNavigateTo(${1:vector point}, ${2:list options});" },
                { "trigger": "llOffsetTexture\t(void) func",                "contents": "llOffsetTexture(${1:float u}, ${2:float v}, ${3:integer face});" },
                { "trigger": "llOpenRemoteDataChannel\t(void) func",        "contents": "llOpenRemoteDataChannel();" },
                { "trigger": "llOverMyLand\t(int) func",                    "contents": "llOverMyLand(${1:key id})" },
                { "trigger": "llOwnerSay\t(void) func",                     "contents": "llOwnerSay(${1:string msg});" },
                { "trigger": "llParcelMediaCommandList\t(void) func",       "contents": "llParcelMediaCommandList(${1:list command});" },
                { "trigger": "llParcelMediaQuery\t(list) func",             "contents": "llParcelMediaQuery(${1:list query})" },
                { "trigger": "llParseString2List\t(list) func",             "contents": "llParseString2List(${1:string src}, ${2:list separators}, ${3:list spacers})" },
                { "trigger": "llParseStringKeepNulls\t(list) func",         "contents": "llParseStringKeepNulls(${1:string src}, ${2:list separators}, ${3:list spacers})" },
                { "trigger": "llParticleSystem\t(void) func",               "contents": "llParticleSystem(${1:list rules});" },
                { "trigger": "llPassCollisions\t(void) func",               "contents": "llPassCollisions(${1:integer pass});" },
                { "trigger": "llPassTouches\t(void) func",                  "contents": "llPassTouches(${1:integer pass});" },
                { "trigger": "llPatrolPoints\t(void) func",                 "contents": "llPatrolPoints(${1:list points}, ${2:list options});" },
                { "trigger": "llPlaySound\t(void) func",                    "contents": "llPlaySound(${1:string sound}, ${2:float volume});" },
                { "trigger": "llPlaySoundSlave\t(void) func",               "contents": "llPlaySoundSlave(${1:string sound}, ${2:float volume});" },
                { "trigger": "llPow\t(float) func",                         "contents": "llPow(${1:float base}, ${2:float exponent})" },
                { "trigger": "llPreloadSound\t(void) func",                 "contents": "llPreloadSound(${1:string sound});" },
                { "trigger": "llPursue\t(void) func",                       "contents": "llPursue(${1:key target}, ${2:list options});" },
                { "trigger": "llPushObject\t(void) func",                   "contents": "llPushObject(${1:key id}, ${2:vector impulse}, ${3:vector ang_impulse}, ${4:integer local});" },
                { "trigger": "llReadKeyValue\t(key) func",                  "contents": "llReadKeyValue(${1:string k})" },
                { "trigger": "llRegionSay\t(void) func",                    "contents": "llRegionSay(${1:integer channel}, ${2:string msg});" },
                { "trigger": "llRegionSayTo\t(void) func",                  "contents": "llRegionSayTo(${1:key target}, ${2:integer channel}, ${3:string msg});" },
                { "trigger": "llReleaseControls\t(void) func",              "contents": "llReleaseControls();" },
                { "trigger": "llReleaseURL\t(void) func",                   "contents": "llReleaseURL(${1:string url});" },
                { "trigger": "llRemoteDataReply\t(void) func",              "contents": "llRemoteDataReply(${1:key channel}, ${2:key message_id}, ${3:string sdata}, ${4:integer idata});" },
                { "trigger": "llRemoteLoadScriptPin\t(void) func",          "contents": "llRemoteLoadScriptPin(${1:key target}, ${2:string name}, ${3:integer pin}, ${4:integer running}, ${5:integer start_param});" },
                { "trigger": "llRemoveFromLandBanList\t(void) func",        "contents": "llRemoveFromLandBanList(${1:key avatar});" },
                { "trigger": "llRemoveFromLandPassList\t(void) func",       "contents": "llRemoveFromLandPassList(${1:key avatar});" },
                { "trigger": "llRemoveInventory\t(void) func",              "contents": "llRemoveInventory(${1:string item});" },
                { "trigger": "llRemoveVehicleFlags\t(void) func",           "contents": "llRemoveVehicleFlags(${1:integer flags});" },
                { "trigger": "llRequestAgentData\t(key) func",              "contents": "llRequestAgentData(${1:key id}, ${2:integer data})" },
                { "trigger": "llRequestDisplayName\t(key) func",            "contents": "llRequestDisplayName(${1:key id})" },
                { "trigger": "llRequestExperiencePermissions\t(void) func", "contents": "llRequestExperiencePermissions(${1:key agent}, ${2:string name});" },
                { "trigger": "llRequestInventoryData\t(key) func",          "contents": "llRequestInventoryData(${1:string name})" },
                { "trigger": "llRequestPermissions\t(void) func",           "contents": "llRequestPermissions(${1:key agent}, ${2:integer perm});" },
                { "trigger": "llRequestSecureURL\t(key) func",              "contents": "llRequestSecureURL()" },
                { "trigger": "llRequestSimulatorData\t(key) func",          "contents": "llRequestSimulatorData(${1:string simulator}, ${2:integer data})" },
                { "trigger": "llRequestURL\t(key) func",                    "contents": "llRequestURL()" },
                { "trigger": "llRequestUsername\t(key) func",               "contents": "llRequestUsername(${1:key id})" },
                { "trigger": "llResetAnimationOverride\t(void) func",       "contents": "llResetAnimationOverride(${1:string anim_state});" },
                { "trigger": "llResetLandBanList\t(void) func",             "contents": "llResetLandBanList();" },
                { "trigger": "llResetLandPassList\t(void) func",            "contents": "llResetLandPassList();" },
                { "trigger": "llResetOtherScript\t(void) func",             "contents": "llResetOtherScript(${1:string name});" },
                { "trigger": "llResetScript\t(void) func",                  "contents": "llResetScript();" },
                { "trigger": "llResetTime\t(void) func",                    "contents": "llResetTime();" },
                { "trigger": "llReturnObjectsByID\t(int) func",             "contents": "llReturnObjectsByID(${1:list objects})" },
                { "trigger": "llReturnObjectsByOwner\t(int) func",          "contents": "llReturnObjectsByOwner(${1:key owner}, ${2:integer scope})" },
                { "trigger": "llRezAtRoot\t(void) func",                    "contents": "llRezAtRoot(${1:string inventory}, ${2:vector pos}, ${3:vector vel}, ${4:rotation rot}, ${5:integer param});" },
                { "trigger": "llRezObject\t(void) func",                    "contents": "llRezObject(${1:string inventory}, ${2:vector pos}, ${3:vector vel}, ${4:rotation rot}, ${5:integer param});" },
                { "trigger": "llRot2Angle\t(float) func",                   "contents": "llRot2Angle(${1:rotation rot})" },
                { "trigger": "llRot2Axis\t(vec) func",                      "contents": "llRot2Axis(${1:rotation rot})" },
                { "trigger": "llRot2Euler\t(vec) func",                     "contents": "llRot2Euler(${1:rotation q})" },
                { "trigger": "llRot2Fwd\t(vec) func",                       "contents": "llRot2Fwd(${1:rotation q})" },
                { "trigger": "llRot2Left\t(vec) func",                      "contents": "llRot2Left(${1:rotation q})" },
                { "trigger": "llRot2Up\t(vec) func",                        "contents": "llRot2Up(${1:rotation q})" },
                { "trigger": "llRotBetween\t(rot) func",                    "contents": "llRotBetween(${1:vector v1}, ${2:vector v2})" },
                { "trigger": "llRotLookAt\t(void) func",                    "contents": "llRotLookAt(${1:rotation target}, ${2:float strength}, ${3:float damping});" },
                { "trigger": "llRotTarget\t(int) func",                     "contents": "llRotTarget(${1:rotation rot}, ${2:float error})" },
                { "trigger": "llRotTargetRemove\t(void) func",              "contents": "llRotTargetRemove(${1:integer number});" },
                { "trigger": "llRotateTexture\t(void) func",                "contents": "llRotateTexture(${1:float angle}, ${2:integer face});" },
                { "trigger": "llRound\t(int) func",                         "contents": "llRound(${1:float val})" },
                { "trigger": "llSHA1String\t(str) func",                    "contents": "llSHA1String(${1:string src})" },
                { "trigger": "llSameGroup\t(int) func",                     "contents": "llSameGroup(${1:key id})" },
                { "trigger": "llSay\t(void) func",                          "contents": "llSay(${1:integer channel}, ${2:string msg});" },
                { "trigger": "llScaleByFactor\t(int) func",                 "contents": "llScaleByFactor(${1:float scaling_factor})" },
                { "trigger": "llScaleTexture\t(void) func",                 "contents": "llScaleTexture(${1:float u}, ${2:float v}, ${3:integer face});" },
                { "trigger": "llScriptDanger\t(int) func",                  "contents": "llScriptDanger(${1:vector pos})" },
                { "trigger": "llScriptProfiler\t(void) func",               "contents": "llScriptProfiler(${1:integer flags});" },
                { "trigger": "llSendRemoteData\t(key) func",                "contents": "llSendRemoteData(${1:key channel}, ${2:string dest}, ${3:integer idata}, ${4:string sdata})" },
                { "trigger": "llSensor\t(void) func",                       "contents": "llSensor(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc});" },
                { "trigger": "llSensorRemove\t(void) func",                 "contents": "llSensorRemove();" },
                { "trigger": "llSensorRepeat\t(void) func",                 "contents": "llSensorRepeat(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc}, ${6:float rate});" },
                { "trigger": "llSetAlpha\t(void) func",                     "contents": "llSetAlpha(${1:float alpha}, ${2:integer face});" },
                { "trigger": "llSetAngularVelocity\t(void) func",           "contents": "llSetAngularVelocity(${1:vector angular_velocity}, ${2:integer local});" },
                { "trigger": "llSetAnimationOverride\t(void) func",         "contents": "llSetAnimationOverride(${1:string anim_state}, ${2:string anim});" },
                { "trigger": "llSetBuoyancy\t(void) func",                  "contents": "llSetBuoyancy(${1:float buoyancy});" },
                { "trigger": "llSetCameraAtOffset\t(void) func",            "contents": "llSetCameraAtOffset(${1:vector offset});" },
                { "trigger": "llSetCameraEyeOffset\t(void) func",           "contents": "llSetCameraEyeOffset(${1:vector offset});" },
                { "trigger": "llSetCameraParams\t(void) func",              "contents": "llSetCameraParams(${1:list rules});" },
                { "trigger": "llSetClickAction\t(void) func",               "contents": "llSetClickAction(${1:integer action});" },
                { "trigger": "llSetColor\t(void) func",                     "contents": "llSetColor(${1:vector color}, ${2:integer face});" },
                { "trigger": "llSetContentType\t(void) func",               "contents": "llSetContentType(${1:key request_id}, ${2:integer content_type});" },
                { "trigger": "llSetDamage\t(void) func",                    "contents": "llSetDamage(${1:float damage});" },
                { "trigger": "llSetForce\t(void) func",                     "contents": "llSetForce(${1:vector force}, ${2:integer local});" },
                { "trigger": "llSetForceAndTorque\t(void) func",            "contents": "llSetForceAndTorque(${1:vector force}, ${2:vector torque}, ${3:integer local});" },
                { "trigger": "llSetHoverHeight\t(void) func",               "contents": "llSetHoverHeight(${1:float height}, ${2:integer water}, ${3:float tau});" },
                { "trigger": "llSetKeyframedMotion\t(void) func",           "contents": "llSetKeyframedMotion(${1:list keyframes}, ${2:list options});" },
                { "trigger": "llSetLinkAlpha\t(void) func",                 "contents": "llSetLinkAlpha(${1:integer linknumber}, ${2:float alpha}, ${3:integer face});" },
                { "trigger": "llSetLinkCamera\t(void) func",                "contents": "llSetLinkCamera(${1:integer link}, ${2:vector eye}, ${3:vector at});" },
                { "trigger": "llSetLinkColor\t(void) func",                 "contents": "llSetLinkColor(${1:integer linknumber}, ${2:vector color}, ${3:integer face});" },
                { "trigger": "llSetLinkMedia\t(int) func",                  "contents": "llSetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params})" },
                { "trigger": "llSetLinkPrimitiveParams\t(void) func",       "contents": "llSetLinkPrimitiveParams(${1:integer linknumber}, ${2:list rules});" },
                { "trigger": "llSetLinkPrimitiveParamsFast\t(void) func",   "contents": "llSetLinkPrimitiveParamsFast(${1:integer linknumber}, ${2:list rules});" },
                { "trigger": "llSetLinkTexture\t(void) func",               "contents": "llSetLinkTexture(${1:integer linknumber}, ${2:string texture}, ${3:integer face});" },
                { "trigger": "llSetLinkTextureAnim\t(void) func",           "contents": "llSetLinkTextureAnim(${1:integer link}, ${2:integer mode}, ${3:integer face}, ${4:integer sizex}, ${5:integer sizey}, ${6:float start}, ${7:float length}, ${8:float rate});" },
                { "trigger": "llSetLocalRot\t(void) func",                  "contents": "llSetLocalRot(${1:rotation rot});" },
                { "trigger": "llSetMemoryLimit\t(int) func",                "contents": "llSetMemoryLimit(${1:integer limit})" },
                { "trigger": "llSetObjectDesc\t(void) func",                "contents": "llSetObjectDesc(${1:string desc});" },
                { "trigger": "llSetObjectName\t(void) func",                "contents": "llSetObjectName(${1:string name});" },
                { "trigger": "llSetParcelMusicURL\t(void) func",            "contents": "llSetParcelMusicURL(${1:string url});" },
                { "trigger": "llSetPayPrice\t(void) func",                  "contents": "llSetPayPrice(${1:integer price}, ${2:list quick_pay_buttons});" },
                { "trigger": "llSetPhysicsMaterial\t(void) func",           "contents": "llSetPhysicsMaterial(${1:integer flags}, ${2:float gravity_multiplier}, ${3:float restitution}, ${4:float friction}, ${5:float density});" },
                { "trigger": "llSetPos\t(void) func",                       "contents": "llSetPos(${1:vector pos});" },
                { "trigger": "llSetPrimMediaParams\t(int) func",            "contents": "llSetPrimMediaParams(${1:integer face}, ${2:list params})" },
                { "trigger": "llSetPrimitiveParams\t(void) func",           "contents": "llSetPrimitiveParams(${1:list rules});" },
                { "trigger": "llSetRegionPos\t(int) func",                  "contents": "llSetRegionPos(${1:vector pos})" },
                { "trigger": "llSetRemoteScriptAccessPin\t(void) func",     "contents": "llSetRemoteScriptAccessPin(${1:integer pin});" },
                { "trigger": "llSetRot\t(void) func",                       "contents": "llSetRot(${1:rotation rot});" },
                { "trigger": "llSetScale\t(void) func",                     "contents": "llSetScale(${1:vector scale});" },
                { "trigger": "llSetScriptState\t(void) func",               "contents": "llSetScriptState(${1:string name}, ${2:integer run});" },
                { "trigger": "llSetSitText\t(void) func",                   "contents": "llSetSitText(${1:string text});" },
                { "trigger": "llSetSoundQueueing\t(void) func",             "contents": "llSetSoundQueueing(${1:integer queue});" },
                { "trigger": "llSetSoundRadius\t(void) func",               "contents": "llSetSoundRadius(${1:float radius});" },
                { "trigger": "llSetStatus\t(void) func",                    "contents": "llSetStatus(${1:integer status}, ${2:integer value});" },
                { "trigger": "llSetText\t(void) func",                      "contents": "llSetText(${1:string text}, ${2:vector color}, ${3:float alpha});" },
                { "trigger": "llSetTexture\t(void) func",                   "contents": "llSetTexture(${1:string texture}, ${2:integer face});" },
                { "trigger": "llSetTextureAnim\t(void) func",               "contents": "llSetTextureAnim(${1:integer mode}, ${2:integer face}, ${3:integer sizex}, ${4:integer sizey}, ${5:float start}, ${6:float length}, ${7:float rate});" },
                { "trigger": "llSetTimerEvent\t(void) func",                "contents": "llSetTimerEvent(${1:float sec});" },
                { "trigger": "llSetTorque\t(void) func",                    "contents": "llSetTorque(${1:vector torque}, ${2:integer local});" },
                { "trigger": "llSetTouchText\t(void) func",                 "contents": "llSetTouchText(${1:string text});" },
                { "trigger": "llSetVehicleFlags\t(void) func",              "contents": "llSetVehicleFlags(${1:integer flags});" },
                { "trigger": "llSetVehicleFloatParam\t(void) func",         "contents": "llSetVehicleFloatParam(${1:integer param}, ${2:float value});" },
                { "trigger": "llSetVehicleRotationParam\t(void) func",      "contents": "llSetVehicleRotationParam(${1:integer param}, ${2:rotation rot});" },
                { "trigger": "llSetVehicleType\t(void) func",               "contents": "llSetVehicleType(${1:integer type});" },
                { "trigger": "llSetVehicleVectorParam\t(void) func",        "contents": "llSetVehicleVectorParam(${1:integer param}, ${2:vector vec});" },
                { "trigger": "llSetVelocity\t(void) func",                  "contents": "llSetVelocity(${1:vector velocity}, ${2:integer local});" },
                { "trigger": "llShout\t(void) func",                        "contents": "llShout(${1:integer channel}, ${2:string msg});" },
                { "trigger": "llSin\t(float) func",                         "contents": "llSin(${1:float theta})" },
                { "trigger": "llSitTarget\t(void) func",                    "contents": "llSitTarget(${1:vector offset}, ${2:rotation rot});" },
                { "trigger": "llSleep\t(void) func",                        "contents": "llSleep(${1:float sec});" },
                { "trigger": "llSqrt\t(float) func",                        "contents": "llSqrt(${1:float val})" },
                { "trigger": "llStartAnimation\t(void) func",               "contents": "llStartAnimation(${1:string anim});" },
                { "trigger": "llStopAnimation\t(void) func",                "contents": "llStopAnimation(${1:string anim});" },
                { "trigger": "llStopHover\t(void) func",                    "contents": "llStopHover();" },
                { "trigger": "llStopLookAt\t(void) func",                   "contents": "llStopLookAt();" },
                { "trigger": "llStopMoveToTarget\t(void) func",             "contents": "llStopMoveToTarget();" },
                { "trigger": "llStopSound\t(void) func",                    "contents": "llStopSound();" },
                { "trigger": "llStringLength\t(int) func",                  "contents": "llStringLength(${1:string str})" },
                { "trigger": "llStringToBase64\t(str) func",                "contents": "llStringToBase64(${1:string str})" },
                { "trigger": "llStringTrim\t(str) func",                    "contents": "llStringTrim(${1:string src}, ${2:integer trim_type})" },
                { "trigger": "llSubStringIndex\t(int) func",                "contents": "llSubStringIndex(${1:string source}, ${2:string pattern})" },
                { "trigger": "llTakeControls\t(void) func",                 "contents": "llTakeControls(${1:integer controls}, ${2:integer accept}, ${3:integer pass_on});" },
                { "trigger": "llTan\t(float) func",                         "contents": "llTan(${1:float theta})" },
                { "trigger": "llTarget\t(int) func",                        "contents": "llTarget(${1:vector position}, ${2:float range})" },
                { "trigger": "llTargetOmega\t(void) func",                  "contents": "llTargetOmega(${1:vector axis}, ${2:float spinrate}, ${3:float gain});" },
                { "trigger": "llTargetRemove\t(void) func",                 "contents": "llTargetRemove(${1:integer number});" },
                { "trigger": "llTeleportAgent\t(void) func",                "contents": "llTeleportAgent(${1:key avatar}, ${2:string landmark}, ${3:vector position}, ${4:vector look_at});" },
                { "trigger": "llTeleportAgentGlobalCoords\t(void) func",    "contents": "llTeleportAgentGlobalCoords(${1:key agent}, ${2:vector global_coordinates}, ${3:vector region_coordinates}, ${4:vector look_at});" },
                { "trigger": "llTeleportAgentHome\t(void) func",            "contents": "llTeleportAgentHome(${1:key id});" },
                { "trigger": "llTextBox\t(void) func",                      "contents": "llTextBox(${1:key avatar}, ${2:string message}, ${3:integer chat_channel});" },
                { "trigger": "llToLower\t(str) func",                       "contents": "llToLower(${1:string src})" },
                { "trigger": "llToUpper\t(str) func",                       "contents": "llToUpper(${1:string src})" },
                { "trigger": "llTransferLindenDollars\t(key) func",         "contents": "llTransferLindenDollars(${1:key destination}, ${2:integer amount})" },
                { "trigger": "llTriggerSound\t(void) func",                 "contents": "llTriggerSound(${1:string sound}, ${2:float volume});" },
                { "trigger": "llTriggerSoundLimited\t(void) func",          "contents": "llTriggerSoundLimited(${1:string sound}, ${2:float volume}, ${3:vector top_north_east}, ${4:vector bottom_south_west});" },
                { "trigger": "llUnSit\t(void) func",                        "contents": "llUnSit(${1:key id});" },
                { "trigger": "llUnescapeURL\t(str) func",                   "contents": "llUnescapeURL(${1:string url})" },
                { "trigger": "llUpdateCharacter\t(void) func",              "contents": "llUpdateCharacter(${1:list options});" },
                { "trigger": "llUpdateKeyValue\t(key) func",                "contents": "llUpdateKeyValue(${1:string k}, ${2:string v}, ${3:integer checked}, ${4:string ov})" },
                { "trigger": "llVecDist\t(float) func",                     "contents": "llVecDist(${1:vector v1}, ${2:vector v2})" },
                { "trigger": "llVecMag\t(float) func",                      "contents": "llVecMag(${1:vector v})" },
                { "trigger": "llVecNorm\t(vec) func",                       "contents": "llVecNorm(${1:vector v})" },
                { "trigger": "llVolumeDetect\t(void) func",                 "contents": "llVolumeDetect(${1:integer detect});" },
                { "trigger": "llWanderWithin\t(void) func",                 "contents": "llWanderWithin(${1:vector center}, ${2:vector radius}, ${3:list options});" },
                { "trigger": "llWater\t(float) func",                       "contents": "llWater(${1:vector offset})" },
                { "trigger": "llWhisper\t(void) func",                      "contents": "llWhisper(${1:integer channel}, ${2:string msg});" },
                { "trigger": "llWind\t(vec) func",                          "contents": "llWind(${1:vector offset})" },
                { "trigger": "llXorBase64\t(str) func",                     "contents": "llXorBase64(${1:string str1}, ${2:string str2})" }
            ]
        },
        {
            "name": "keyword.control.flow.lsl",
            "strings":
            [
                "default",
                { "trigger": "do",      "contents": "do\n{\n\t$0\n}\nwhile (${1:condition});" },
                { "trigger": "else",    "contents": "else\n{\n\t$0\n}" },
                { "trigger": "else if", "contents": "else if (${1:condition})\n{\n$0\n}" },
                { "trigger": "for",     "contents": "for (${1:start}; ${3:condition}; ${3:step})\n{\n$0\n}" },
                { "trigger": "if",      "contents": "if (${1:condition})\n{\n$0\n}" },
                { "trigger": "jump",    "contents": "jump ${1:label};" },
                "return",
                { "trigger": "state",   "contents": "state ${1:name}" },
                { "trigger": "while",   "contents": "while ($1)\n{\n\t$0\n}" },
                { "trigger": "@",       "contents": "@${1:label};" }
            ]
        },
        {
            "name": "storage.type.lsl",
            "strings":
            [
                { "trigger": "float\tstorage type",      "contents": "float" },
                { "trigger": "integer\tstorage type",    "contents": "integer" },
                { "trigger": "key\tstorage type",        "contents": "key" },
                { "trigger": "list\tstorage type",       "contents": "list" },
                { "trigger": "quaternion\tstorage type", "contents": "quaternion" },
                { "trigger": "rotation\tstorage type",   "contents": "rotation" },
                { "trigger": "string\tstorage type",     "contents": "string" },
                { "trigger": "vector\tstorage type",     "contents": "vector" }
            ]
        }
    ],
    "contexts": [
        {
            "description": "LSL Constants",
            "scope": "source.lsl - meta.state.body.lsl, meta.function.body.lsl, meta.event.body.lsl",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "constant.language.float.lsl",
                "constant.language.integer.lsl",
                "constant.language.integer.boolean.lsl",
                "constant.language.rotation.lsl",
                "constant.language.string.lsl",
                "constant.language.vector.lsl"
            ]
        },
        {
            "description": "LSL Events",
            "scope": "meta.state.body.lsl - meta.event.lsl",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "support.function.event.lsl"
            ]
        },
        {
            "description": "LSL Functions",
            "scope": "meta.function.body.lsl, meta.event.body.lsl",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "support.function.lsl"
            ]
        },
        {
            "description": "LSL Keywords",
            "scope": "meta.function.body.lsl, meta.event.body.lsl",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "keyword.control.flow.lsl"
            ]
        },
        {
            "description": "LSL Storage Types",
            "scope": "source.lsl - meta.state.body.lsl, meta.function.body.lsl, meta.event.body.lsl",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "storage.type.lsl"
            ]
        },
    ]
}
